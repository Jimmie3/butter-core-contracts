{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "",
			"opcodes": "",
			"sourceMap": ""
		},
		"deployedBytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "",
			"opcodes": "",
			"sourceMap": ""
		},
		"gasEstimates": null,
		"methodIdentifiers": {
			"filterBalancer(uint8,(bytes32,uint256,uint256,uint256,bytes)[],(address,bool,address,bool),address[],int256[],uint256)": "1738b50e",
			"filterCurve(address,address,uint256[])": "3502eea8",
			"filterSwap(uint256,uint256,bytes,address,uint256,address,address)": "b1a271d4"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "enum IVault.SwapKind",
					"name": "kind",
					"type": "uint8"
				},
				{
					"components": [
						{
							"internalType": "bytes32",
							"name": "poolId",
							"type": "bytes32"
						},
						{
							"internalType": "uint256",
							"name": "assetInIndex",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "assetOutIndex",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "amount",
							"type": "uint256"
						},
						{
							"internalType": "bytes",
							"name": "userData",
							"type": "bytes"
						}
					],
					"internalType": "struct IVault.BatchSwapStep[]",
					"name": "swaps",
					"type": "tuple[]"
				},
				{
					"components": [
						{
							"internalType": "address",
							"name": "sender",
							"type": "address"
						},
						{
							"internalType": "bool",
							"name": "fromInternalBalance",
							"type": "bool"
						},
						{
							"internalType": "address payable",
							"name": "recipient",
							"type": "address"
						},
						{
							"internalType": "bool",
							"name": "toInternalBalance",
							"type": "bool"
						}
					],
					"internalType": "struct IVault.FundManagement",
					"name": "funds",
					"type": "tuple"
				},
				{
					"internalType": "contract IAsset[]",
					"name": "assets",
					"type": "address[]"
				},
				{
					"internalType": "int256[]",
					"name": "limit",
					"type": "int256[]"
				},
				{
					"internalType": "uint256",
					"name": "deadline",
					"type": "uint256"
				}
			],
			"name": "filterBalancer",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "inputAddre",
					"type": "address"
				},
				{
					"internalType": "uint256[]",
					"name": "_crvParams",
					"type": "uint256[]"
				}
			],
			"name": "filterCurve",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "amountInArr",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "amountOutMinArr",
					"type": "uint256"
				},
				{
					"internalType": "bytes",
					"name": "pathArr",
					"type": "bytes"
				},
				{
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "deadLine",
					"type": "uint256"
				},
				{
					"internalType": "address",
					"name": "inputAddre",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "outAddre",
					"type": "address"
				}
			],
			"name": "filterSwap",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		}
	]
}
{
	"id": "a1b4897fc03b790a412b9f2a8c61a6f6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"BarterswapRouter.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"./interface/IERC20.sol\";\nimport \"./libs/TransferHelper.sol\";\nimport \"./libs/SafeMath.sol\";\nimport \"./interface/ISwap.sol\";\nimport \"./interface/IBalancerSwap/IAsset.sol\";\nimport \"./interface/IBalancerSwap/IVault.sol\";\nimport \"./interface/IWETH9.sol\";\nimport \"./interface/IBarterswapV2Router01.sol\";\n\n\n\ncontract BarterswapRouterV1  {\n    using SafeMath for uint;\n   \n    address  payable public  feeTo; \n    address public feeToAdmin; \n    uint public fees; \n    mapping(uint256 => address) public routerAddreAll;\n    address constant WETHS = 0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270;\n\n   \n\n   struct AccessParams {\n        uint256[]  amountInArr;\n        uint256[]  amountOutMinArr;\n        bytes[]    pathArr;\n        address  payable  to;\n        uint256    deadLine;\n        address    inputAddre;\n        address    outAddre;\n        uint256[]  routerIndex;\n        uint256[]  crvParams;\n        IVault.BatchSwapStep[]  batchSwapSteps;\n        IVault.FundManagement fundManaGements;\n        int256[]      limits;\n        IAsset[]       assets;\n        IVault.SwapKind _kind;              \n    } \n    \n\n\n     receive() external payable { \n    }\n \n\n    modifier onlyOwner() {\n        require(msg.sender == feeToAdmin,\"BarterswapV2Router: EXPIRED\");\n        _;\n    }\n\n    constructor(address _feeToAdmin) {\n        feeToAdmin = _feeToAdmin;\n    }\n\n    \n\n    function multiSwap (AccessParams calldata params) external payable {    \n            uint256 amountInArrs = getAmountInAll(params.amountInArr);\n            uint256 toFees = amountInArrs.mul(fees).div(1e18);\n\n            if(params.inputAddre == address(0)){\n                require(msg.value == amountInArrs+toFees,\"Price is wrong\");\n                TransferHelper.safeTransferETH(feeTo,toFees);\n            }else{ \n                TransferHelper.safeTransferFrom(params.inputAddre,msg.sender,address(this),amountInArrs );\n                TransferHelper.safeTransferFrom(params.inputAddre,msg.sender,feeTo,toFees); \n            }\n\n            for(uint i = 0; i < params.routerIndex.length; i++){\n                address rindex = routerAddreAll[params.routerIndex[i]];\n                if (i == 0 && params.crvParams.length == 4){\n                        crvSwap(params.inputAddre,rindex,params.to,params.crvParams[2],params.crvParams);\n                }else if(i == 1 && params.limits.length > 1){\n                     \n                    balancerSwap(params._kind,params.inputAddre,rindex,params.batchSwapSteps,params.fundManaGements,params.assets,params.limits,params.deadLine);   \n\n                }else{\n                        AmmSeriSwap(rindex,params.amountInArr[i],params.amountOutMinArr[i],params.pathArr[i],params.to,params.deadLine,params.inputAddre,params.outAddre);\n                    }\n                }\n        }\n\n\n    \n    // balancer\n       \n    function balancerSwap(IVault.SwapKind _kind, address _inputAddre,address _rindex,IVault.BatchSwapStep[] memory _swaps,IVault.FundManagement memory _funds, IAsset[] memory  _assets, int256[]  memory _limit,uint256 _deadLine) internal{\n        if(_inputAddre == address(0)){\n            TransferHelper.safeTransferETH(_rindex,_swaps[0].amount);\n            ISwap(_rindex).filterBalancer(_kind,_swaps,_funds,_assets,_limit,_deadLine);\n        }else{\n            IERC20(_rindex).approve(_rindex,_swaps[0].amount);\n            TransferHelper.safeTransfer(_inputAddre,_rindex,_swaps[0].amount);\n            ISwap(_rindex).filterBalancer(_kind,_swaps,_funds,_assets,_limit,_deadLine);\n        }\n    }\n    \n\n    // crv\n\n    function crvSwap(address _inputAddre,address _rindex,address _to,uint256 _dx,uint256[] memory parameterList) internal{\n        IERC20(_inputAddre).approve(_rindex,_dx);\n        TransferHelper.safeTransfer(_inputAddre,_rindex,_dx);\n        ISwap(_rindex).filterCurve(_to,_inputAddre,parameterList);\n        \n    }\n\n    // uni kind\n\n    function AmmSeriSwap(address _rindex,uint256 _amountInArr,uint256 _amountOutMinArr,bytes memory _pathArr,address _to,uint256 _deadLine,address _inputAddre,address _outAddre) internal {\n            if(_inputAddre == address(0)){\n                    TransferHelper.safeTransferETH(_rindex,_amountInArr);\n                    ISwap(_rindex).filterSwap(_amountInArr,_amountOutMinArr,_pathArr,_to,_deadLine,_inputAddre,_outAddre);      \n                }else{\n                    IERC20(_rindex).approve(_rindex,_amountInArr);\n                    TransferHelper.safeTransfer(_inputAddre,_rindex,_amountInArr);\n                    ISwap(_rindex).filterSwap(_amountInArr,_amountOutMinArr,_pathArr,_to,_deadLine,_inputAddre,_outAddre);     \n                }\n    }\n    \n    // amountInArr\n\n    function getAmountInAll(uint256[] memory  amountInArr) public pure returns(uint256){\n        uint amountInArrs;\n        for(uint i = 0; i < amountInArr.length; i++){\n            amountInArrs += amountInArr[i];\n        }\n        return amountInArrs ;\n    }\n\n\n    // swapweth\n    function ethToWeth(uint256 amountin, address _to) public payable {\n            uint256 toFees = amountin.mul(fees).div(1e18);\n            require(msg.value == amountin + toFees,\"Price is wrong\");\n            TransferHelper.safeTransferETH(feeTo,toFees);\n            IWETH9(WETHS).deposit{value:amountin}();  \n            TransferHelper.safeTransfer(WETHS,_to,amountin);\n    }\n\n\n    function setFeeTo(address payable _feeTo) public onlyOwner returns(bool) {\n        require(_feeTo != address(0), 'Barterswap: FORBIDDEN');\n        feeTo = _feeTo;\n        return true;\n    }\n\n    \n\n    function setFeeToSetter(address _feetoAdmin) public onlyOwner returns(bool) {\n         require(_feetoAdmin != address(0), 'Barterswap: FORBIDDEN');\n        feeToAdmin = _feetoAdmin;\n        return true;\n    }\n    \n\n     function setFees(uint _fees) public onlyOwner returns(bool) {\n        require(_fees != 0, 'Barterswap: FORBIDDEN');\n        fees = _fees;\n        return true;\n    }\n    \n\n\n    function setRouterAddreAll(uint256 index ,address _routeraddre) public onlyOwner returns(bool){\n        require(_routeraddre != address(0),'Barterswap: FORBIDDEN');\n        routerAddreAll[index] = _routeraddre;\n        return true;\n    }\n\n\n    function getWeth(address _routerArr) public pure returns(address WETH){\n        WETH =  IBarterswapV2Router01(_routerArr).WETH(); \n    }\n  \n}"
			},
			"interface/IBarterswapV2Router01.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface IBarterswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n\n\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n\n\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n \n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"interface/IWETH9.sol": {
				"content": "\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\n/// @title Interface for WETH9\ninterface IWETH9 is IERC20 {\n    /// @notice Deposit ether to get wrapped ether\n    function deposit() external payable;\n\n    /// @notice Withdraw wrapped ether to get ether\n    function withdraw(uint256) external;\n}\n"
			},
			"interface/IBalancerSwap/IVault.sol": {
				"content": "\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./ISignaturesValidator.sol\";\nimport \"./ITemporarilyPausable.sol\";\nimport \"./IAuthorizer.sol\";\nimport \"../IERC20.sol\";\nimport \"./IAsset.sol\";\nimport \"./IFlashLoanRecipient.sol\";\nimport \"./IProtocolFeesCollector.sol\";\nimport \"./IWETH.sol\";\n\ninterface IVault is ISignaturesValidator, ITemporarilyPausable {\n    // Generalities about the Vault:\n    //\n    // - Whenever documentation refers to 'tokens', it strictly refers to ERC20-compliant token contracts. Tokens are\n    // transferred out of the Vault by calling the `IERC20.transfer` function, and transferred in by calling\n    // `IERC20.transferFrom`. In these cases, the sender must have previously allowed the Vault to use their tokens by\n    // calling `IERC20.approve`. The only deviation from the ERC20 standard that is supported is functions not returning\n    // a boolean value: in these scenarios, a non-reverting call is assumed to be successful.\n    //\n    // - All non-view functions in the Vault are non-reentrant: calling them while another one is mid-execution (e.g.\n    // while execution control is transferred to a token contract during a swap) will result in a revert. View\n    // functions can be called in a re-reentrant way, but doing so might cause them to return inconsistent results.\n    // Contracts calling view functions in the Vault must make sure the Vault has not already been entered.\n    //\n    // - View functions revert if referring to either unregistered Pools, or unregistered tokens for registered Pools.\n\n    // Authorizer\n    //\n    // Some system actions are permissioned, like setting and collecting protocol fees. This permissioning system exists\n    // outside of the Vault in the Authorizer contract: the Vault simply calls the Authorizer to check if the caller\n    // can perform a given action.\n\n    /**\n     * @dev Returns the Vault's Authorizer.\n     */\n    function getAuthorizer() external view returns (IAuthorizer);\n\n    /**\n     * @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\n     *\n     * Emits an `AuthorizerChanged` event.\n     */\n    function setAuthorizer(IAuthorizer newAuthorizer) external;\n\n    /**\n     * @dev Emitted when a new authorizer is set by `setAuthorizer`.\n     */\n    event AuthorizerChanged(IAuthorizer indexed newAuthorizer);\n\n    // Relayers\n    //\n    // Additionally, it is possible for an account to perform certain actions on behalf of another one, using their\n    // Vault ERC20 allowance and Internal Balance. These accounts are said to be 'relayers' for these Vault functions,\n    // and are expected to be smart contracts with sound authentication mechanisms. For an account to be able to wield\n    // this power, two things must occur:\n    //  - The Authorizer must grant the account the permission to be a relayer for the relevant Vault function. This\n    //    means that Balancer governance must approve each individual contract to act as a relayer for the intended\n    //    functions.\n    //  - Each user must approve the relayer to act on their behalf.\n    // This double protection means users cannot be tricked into approving malicious relayers (because they will not\n    // have been allowed by the Authorizer via governance), nor can malicious relayers approved by a compromised\n    // Authorizer or governance drain user funds, since they would also need to be approved by each individual user.\n\n    /**\n     * @dev Returns true if `user` has approved `relayer` to act as a relayer for them.\n     */\n    function hasApprovedRelayer(address user, address relayer) external view returns (bool);\n\n    /**\n     * @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\n     *\n     * Emits a `RelayerApprovalChanged` event.\n     */\n    function setRelayerApproval(\n        address sender,\n        address relayer,\n        bool approved\n    ) external;\n\n    /**\n     * @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\n     */\n    event RelayerApprovalChanged(address indexed relayer, address indexed sender, bool approved);\n\n    // Internal Balance\n    //\n    // Users can deposit tokens into the Vault, where they are allocated to their Internal Balance, and later\n    // transferred or withdrawn. It can also be used as a source of tokens when joining Pools, as a destination\n    // when exiting them, and as either when performing swaps. This usage of Internal Balance results in greatly reduced\n    // gas costs when compared to relying on plain ERC20 transfers, leading to large savings for frequent users.\n    //\n    // Internal Balance management features batching, which means a single contract call can be used to perform multiple\n    // operations of different kinds, with different senders and recipients, at once.\n\n    /**\n     * @dev Returns `user`'s Internal Balance for a set of tokens.\n     */\n    function getInternalBalance(address user, IERC20[] memory tokens) external view returns (uint256[] memory);\n\n    /**\n     * @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\n     * and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\n     * it lets integrators reuse a user's Vault allowance.\n     *\n     * For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\n     */\n    function manageUserBalance(UserBalanceOp[] memory ops) external payable;\n\n    /**\n     * @dev Data for `manageUserBalance` operations, which include the possibility for ETH to be sent and received\n     without manual WETH wrapping or unwrapping.\n     */\n    struct UserBalanceOp {\n        UserBalanceOpKind kind;\n        IAsset asset;\n        uint256 amount;\n        address sender;\n        address payable recipient;\n    }\n\n    // There are four possible operations in `manageUserBalance`:\n    //\n    // - DEPOSIT_INTERNAL\n    // Increases the Internal Balance of the `recipient` account by transferring tokens from the corresponding\n    // `sender`. The sender must have allowed the Vault to use their tokens via `IERC20.approve()`.\n    //\n    // ETH can be used by passing the ETH sentinel value as the asset and forwarding ETH in the call: it will be wrapped\n    // and deposited as WETH. Any ETH amount remaining will be sent back to the caller (not the sender, which is\n    // relevant for relayers).\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - WITHDRAW_INTERNAL\n    // Decreases the Internal Balance of the `sender` account by transferring tokens to the `recipient`.\n    //\n    // ETH can be used by passing the ETH sentinel value as the asset. This will deduct WETH instead, unwrap it and send\n    // it to the recipient as ETH.\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - TRANSFER_INTERNAL\n    // Transfers tokens from the Internal Balance of the `sender` account to the Internal Balance of `recipient`.\n    //\n    // Reverts if the ETH sentinel value is passed.\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - TRANSFER_EXTERNAL\n    // Transfers tokens from `sender` to `recipient`, using the Vault's ERC20 allowance. This is typically used by\n    // relayers, as it lets them reuse a user's Vault allowance.\n    //\n    // Reverts if the ETH sentinel value is passed.\n    //\n    // Emits an `ExternalBalanceTransfer` event.\n\n    enum UserBalanceOpKind { DEPOSIT_INTERNAL, WITHDRAW_INTERNAL, TRANSFER_INTERNAL, TRANSFER_EXTERNAL }\n\n    /**\n     * @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\n     * interacting with Pools using Internal Balance.\n     *\n     * Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\n     * address.\n     */\n    event InternalBalanceChanged(address indexed user, IERC20 indexed token, int256 delta);\n\n    /**\n     * @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\n     */\n    event ExternalBalanceTransfer(IERC20 indexed token, address indexed sender, address recipient, uint256 amount);\n\n    // Pools\n    //\n    // There are three specialization settings for Pools, which allow for cheaper swaps at the cost of reduced\n    // functionality:\n    //\n    //  - General: no specialization, suited for all Pools. IGeneralPool is used for swap request callbacks, passing the\n    // balance of all tokens in the Pool. These Pools have the largest swap costs (because of the extra storage reads),\n    // which increase with the number of registered tokens.\n    //\n    //  - Minimal Swap Info: IMinimalSwapInfoPool is used instead of IGeneralPool, which saves gas by only passing the\n    // balance of the two tokens involved in the swap. This is suitable for some pricing algorithms, like the weighted\n    // constant product one popularized by Balancer V1. Swap costs are smaller compared to general Pools, and are\n    // independent of the number of registered tokens.\n    //\n    //  - Two Token: only allows two tokens to be registered. This achieves the lowest possible swap gas cost. Like\n    // minimal swap info Pools, these are called via IMinimalSwapInfoPool.\n\n    enum PoolSpecialization { GENERAL, MINIMAL_SWAP_INFO, TWO_TOKEN }\n\n    /**\n     * @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\n     * is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\n     * changed.\n     *\n     * The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\n     * depending on the chosen specialization setting. This contract is known as the Pool's contract.\n     *\n     * Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\n     * multiple Pools may share the same contract.\n     *\n     * Emits a `PoolRegistered` event.\n     */\n    function registerPool(PoolSpecialization specialization) external returns (bytes32);\n\n    /**\n     * @dev Emitted when a Pool is registered by calling `registerPool`.\n     */\n    event PoolRegistered(bytes32 indexed poolId, address indexed poolAddress, PoolSpecialization specialization);\n\n    /**\n     * @dev Returns a Pool's contract address and specialization setting.\n     */\n    function getPool(bytes32 poolId) external view returns (address, PoolSpecialization);\n\n    /**\n     * @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n     *\n     * Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\n     * exit by receiving registered tokens, and can only swap registered tokens.\n     *\n     * Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\n     * of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\n     * ascending order.\n     *\n     * The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\n     * Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\n     * depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\n     * expected to be highly secured smart contracts with sound design principles, and the decision to register an\n     * Asset Manager should not be made lightly.\n     *\n     * Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\n     * Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\n     * different Asset Manager.\n     *\n     * Emits a `TokensRegistered` event.\n     */\n    function registerTokens(\n        bytes32 poolId,\n        IERC20[] memory tokens,\n        address[] memory assetManagers\n    ) external;\n\n    /**\n     * @dev Emitted when a Pool registers tokens by calling `registerTokens`.\n     */\n    event TokensRegistered(bytes32 indexed poolId, IERC20[] tokens, address[] assetManagers);\n\n    /**\n     * @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n     *\n     * Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\n     * balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\n     * must be deregistered in the same `deregisterTokens` call.\n     *\n     * A deregistered token can be re-registered later on, possibly with a different Asset Manager.\n     *\n     * Emits a `TokensDeregistered` event.\n     */\n    function deregisterTokens(bytes32 poolId, IERC20[] memory tokens) external;\n\n    /**\n     * @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\n     */\n    event TokensDeregistered(bytes32 indexed poolId, IERC20[] tokens);\n\n    /**\n     * @dev Returns detailed information for a Pool's registered token.\n     *\n     * `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\n     * withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\n     * equals the sum of `cash` and `managed`.\n     *\n     * Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\n     * `managed` or `total` balance to be greater than 2^112 - 1.\n     *\n     * `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\n     * join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\n     * example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\n     * change for this purpose, and will update `lastChangeBlock`.\n     *\n     * `assetManager` is the Pool's token Asset Manager.\n     */\n    function getPoolTokenInfo(bytes32 poolId, IERC20 token)\n        external\n        view\n        returns (\n            uint256 cash,\n            uint256 managed,\n            uint256 lastChangeBlock,\n            address assetManager\n        );\n\n    /**\n     * @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\n     * the tokens' `balances` changed.\n     *\n     * The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\n     * Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\n     *\n     * If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\n     * order as passed to `registerTokens`.\n     *\n     * Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\n     * the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\n     * instead.\n     */\n    function getPoolTokens(bytes32 poolId)\n        external\n        view\n        returns (\n            IERC20[] memory tokens,\n            uint256[] memory balances,\n            uint256 lastChangeBlock\n        );\n\n    /**\n     * @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\n     * trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\n     * Pool shares.\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\n     * to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\n     * these maximums.\n     *\n     * If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\n     * this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\n     * WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\n     * back to the caller (not the sender, which is important for relayers).\n     *\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n     * interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\n     * sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\n     * `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\n     *\n     * If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\n     * be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\n     * withdrawn from Internal Balance: attempting to do so will trigger a revert.\n     *\n     * This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\n     * of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\n     * directly to the Pool's contract, as is `recipient`.\n     *\n     * Emits a `PoolBalanceChanged` event.\n     */\n    function joinPool(\n        bytes32 poolId,\n        address sender,\n        address recipient,\n        JoinPoolRequest memory request\n    ) external payable;\n\n    struct JoinPoolRequest {\n        IAsset[] assets;\n        uint256[] maxAmountsIn;\n        bytes userData;\n        bool fromInternalBalance;\n    }\n\n    /**\n     * @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\n     * trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\n     * Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\n     * `getPoolTokenInfo`).\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\n     * token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\n     * it just enforces these minimums.\n     *\n     * If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\n     * enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\n     * of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\n     *\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n     * interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\n     * be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\n     * final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\n     *\n     * If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\n     * an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\n     * do so will trigger a revert.\n     *\n     * `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\n     * `tokens` array. This array must match the Pool's registered tokens.\n     *\n     * This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\n     * of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\n     * passed directly to the Pool's contract.\n     *\n     * Emits a `PoolBalanceChanged` event.\n     */\n    function exitPool(\n        bytes32 poolId,\n        address sender,\n        address payable recipient,\n        ExitPoolRequest memory request\n    ) external;\n\n    struct ExitPoolRequest {\n        IAsset[] assets;\n        uint256[] minAmountsOut;\n        bytes userData;\n        bool toInternalBalance;\n    }\n\n    /**\n     * @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\n     */\n    event PoolBalanceChanged(\n        bytes32 indexed poolId,\n        address indexed liquidityProvider,\n        IERC20[] tokens,\n        int256[] deltas,\n        uint256[] protocolFeeAmounts\n    );\n\n    enum PoolBalanceChangeKind { JOIN, EXIT }\n\n    // Swaps\n    //\n    // Users can swap tokens with Pools by calling the `swap` and `batchSwap` functions. To do this,\n    // they need not trust Pool contracts in any way: all security checks are made by the Vault. They must however be\n    // aware of the Pools' pricing algorithms in order to estimate the prices Pools will quote.\n    //\n    // The `swap` function executes a single swap, while `batchSwap` can perform multiple swaps in sequence.\n    // In each individual swap, tokens of one kind are sent from the sender to the Pool (this is the 'token in'),\n    // and tokens of another kind are sent from the Pool to the recipient in exchange (this is the 'token out').\n    // More complex swaps, such as one token in to multiple tokens out can be achieved by batching together\n    // individual swaps.\n    //\n    // There are two swap kinds:\n    //  - 'given in' swaps, where the amount of tokens in (sent to the Pool) is known, and the Pool determines (via the\n    // `onSwap` hook) the amount of tokens out (to send to the recipient).\n    //  - 'given out' swaps, where the amount of tokens out (received from the Pool) is known, and the Pool determines\n    // (via the `onSwap` hook) the amount of tokens in (to receive from the sender).\n    //\n    // Additionally, it is possible to chain swaps using a placeholder input amount, which the Vault replaces with\n    // the calculated output of the previous swap. If the previous swap was 'given in', this will be the calculated\n    // tokenOut amount. If the previous swap was 'given out', it will use the calculated tokenIn amount. These extended\n    // swaps are known as 'multihop' swaps, since they 'hop' through a number of intermediate tokens before arriving at\n    // the final intended token.\n    //\n    // In all cases, tokens are only transferred in and out of the Vault (or withdrawn from and deposited into Internal\n    // Balance) after all individual swaps have been completed, and the net token balance change computed. This makes\n    // certain swap patterns, such as multihops, or swaps that interact with the same token pair in multiple Pools, cost\n    // much less gas than they would otherwise.\n    //\n    // It also means that under certain conditions it is possible to perform arbitrage by swapping with multiple\n    // Pools in a way that results in net token movement out of the Vault (profit), with no tokens being sent in (only\n    // updating the Pool's internal accounting).\n    //\n    // To protect users from front-running or the market changing rapidly, they supply a list of 'limits' for each token\n    // involved in the swap, where either the maximum number of tokens to send (by passing a positive value) or the\n    // minimum amount of tokens to receive (by passing a negative value) is specified.\n    //\n    // Additionally, a 'deadline' timestamp can also be provided, forcing the swap to fail if it occurs after\n    // this point in time (e.g. if the transaction failed to be included in a block promptly).\n    //\n    // If interacting with Pools that hold WETH, it is possible to both send and receive ETH directly: the Vault will do\n    // the wrapping and unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be\n    // passed in the `assets` array instead of the WETH address. Note that it is possible to combine ETH and WETH in the\n    // same swap. Any excess ETH will be sent back to the caller (not the sender, which is relevant for relayers).\n    //\n    // Finally, Internal Balance can be used when either sending or receiving tokens.\n\n    enum SwapKind { GIVEN_IN, GIVEN_OUT }\n\n    /**\n     * @dev Performs a swap with a single Pool.\n     *\n     * If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\n     * taken from the Pool, which must be greater than or equal to `limit`.\n     *\n     * If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\n     * sent to the Pool, which must be less than or equal to `limit`.\n     *\n     * Internal Balance usage and the recipient are determined by the `funds` struct.\n     *\n     * Emits a `Swap` event.\n     */\n    function swap(\n        SingleSwap memory singleSwap,\n        FundManagement memory funds,\n        uint256 limit,\n        uint256 deadline\n    ) external payable returns (uint256);\n\n    /**\n     * @dev Data for a single swap executed by `swap`. `amount` is either `amountIn` or `amountOut` depending on\n     * the `kind` value.\n     *\n     * `assetIn` and `assetOut` are either token addresses, or the IAsset sentinel value for ETH (the zero address).\n     * Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault.\n     *\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n     * used to extend swap behavior.\n     */\n    struct SingleSwap {\n        bytes32 poolId;\n        SwapKind kind;\n        IAsset assetIn;\n        IAsset assetOut;\n        uint256 amount;\n        bytes userData;\n    }\n\n    /**\n     * @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\n     * the amount of tokens sent to or received from the Pool, depending on the `kind` value.\n     *\n     * Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n     * Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n     * the same index in the `assets` array.\n     *\n     * Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\n     * Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\n     * `amountOut` depending on the swap kind.\n     *\n     * Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\n     * of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\n     * the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\n     *\n     * The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\n     * or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\n     * out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\n     * or unwrapped from WETH by the Vault.\n     *\n     * Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\n     * the minimum or maximum amount of each token the vault is allowed to transfer.\n     *\n     * `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\n     * equivalent `swap` call.\n     *\n     * Emits `Swap` events.\n     */\n    function batchSwap(\n        SwapKind kind,\n        BatchSwapStep[] memory swaps,\n        IAsset[] memory assets,\n        FundManagement memory funds,\n        int256[] memory limits,\n        uint256 deadline\n    ) external payable returns (int256[] memory);\n\n    /**\n     * @dev Data for each individual swap executed by `batchSwap`. The asset in and out fields are indexes into the\n     * `assets` array passed to that function, and ETH assets are converted to WETH.\n     *\n     * If `amount` is zero, the multihop mechanism is used to determine the actual amount based on the amount in/out\n     * from the previous swap, depending on the swap kind.\n     *\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n     * used to extend swap behavior.\n     */\n    struct BatchSwapStep {\n        bytes32 poolId;\n        uint256 assetInIndex;\n        uint256 assetOutIndex;\n        uint256 amount;\n        bytes userData;\n    }\n\n    /**\n     * @dev Emitted for each individual swap performed by `swap` or `batchSwap`.\n     */\n    event Swap(\n        bytes32 indexed poolId,\n        IERC20 indexed tokenIn,\n        IERC20 indexed tokenOut,\n        uint256 amountIn,\n        uint256 amountOut\n    );\n\n    /**\n     * @dev All tokens in a swap are either sent from the `sender` account to the Vault, or from the Vault to the\n     * `recipient` account.\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * If `fromInternalBalance` is true, the `sender`'s Internal Balance will be preferred, performing an ERC20\n     * transfer for the difference between the requested amount and the User's Internal Balance (if any). The `sender`\n     * must have allowed the Vault to use their tokens via `IERC20.approve()`. This matches the behavior of\n     * `joinPool`.\n     *\n     * If `toInternalBalance` is true, tokens will be deposited to `recipient`'s internal balance instead of\n     * transferred. This matches the behavior of `exitPool`.\n     *\n     * Note that ETH cannot be deposited to or withdrawn from Internal Balance: attempting to do so will trigger a\n     * revert.\n     */\n    struct FundManagement {\n        address sender;\n        bool fromInternalBalance;\n        address payable recipient;\n        bool toInternalBalance;\n    }\n\n    /**\n     * @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n     * simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n     *\n     * Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n     * the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n     * receives are the same that an equivalent `batchSwap` call would receive.\n     *\n     * Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\n     * This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\n     * approve them for the Vault, or even know a user's address.\n     *\n     * Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\n     * eth_call instead of eth_sendTransaction.\n     */\n    function queryBatchSwap(\n        SwapKind kind,\n        BatchSwapStep[] memory swaps,\n        IAsset[] memory assets,\n        FundManagement memory funds\n    ) external returns (int256[] memory assetDeltas);\n\n    // Flash Loans\n\n    /**\n     * @dev Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it,\n     * and then reverting unless the tokens plus a proportional protocol fee have been returned.\n     *\n     * The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount\n     * for each token contract. `tokens` must be sorted in ascending order.\n     *\n     * The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the\n     * `receiveFlashLoan` call.\n     *\n     * Emits `FlashLoan` events.\n     */\n    function flashLoan(\n        IFlashLoanRecipient recipient,\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        bytes memory userData\n    ) external;\n\n    /**\n     * @dev Emitted for each individual flash loan performed by `flashLoan`.\n     */\n    event FlashLoan(IFlashLoanRecipient indexed recipient, IERC20 indexed token, uint256 amount, uint256 feeAmount);\n\n    // Asset Management\n    //\n    // Each token registered for a Pool can be assigned an Asset Manager, which is able to freely withdraw the Pool's\n    // tokens from the Vault, deposit them, or assign arbitrary values to its `managed` balance (see\n    // `getPoolTokenInfo`). This makes them extremely powerful and dangerous. Even if an Asset Manager only directly\n    // controls one of the tokens in a Pool, a malicious manager could set that token's balance to manipulate the\n    // prices of the other tokens, and then drain the Pool with swaps. The risk of using Asset Managers is therefore\n    // not constrained to the tokens they are managing, but extends to the entire Pool's holdings.\n    //\n    // However, a properly designed Asset Manager smart contract can be safely used for the Pool's benefit,\n    // for example by lending unused tokens out for interest, or using them to participate in voting protocols.\n    //\n    // This concept is unrelated to the IAsset interface.\n\n    /**\n     * @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\n     *\n     * Pool Balance management features batching, which means a single contract call can be used to perform multiple\n     * operations of different kinds, with different Pools and tokens, at once.\n     *\n     * For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\n     */\n    function managePoolBalance(PoolBalanceOp[] memory ops) external;\n\n    struct PoolBalanceOp {\n        PoolBalanceOpKind kind;\n        bytes32 poolId;\n        IERC20 token;\n        uint256 amount;\n    }\n\n    /**\n     * Withdrawals decrease the Pool's cash, but increase its managed balance, leaving the total balance unchanged.\n     *\n     * Deposits increase the Pool's cash, but decrease its managed balance, leaving the total balance unchanged.\n     *\n     * Updates don't affect the Pool's cash balance, but because the managed balance changes, it does alter the total.\n     * The external amount can be either increased or decreased by this call (i.e., reporting a gain or a loss).\n     */\n    enum PoolBalanceOpKind { WITHDRAW, DEPOSIT, UPDATE }\n\n    /**\n     * @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\n     */\n    event PoolBalanceManaged(\n        bytes32 indexed poolId,\n        address indexed assetManager,\n        IERC20 indexed token,\n        int256 cashDelta,\n        int256 managedDelta\n    );\n\n    // Protocol Fees\n    //\n    // Some operations cause the Vault to collect tokens in the form of protocol fees, which can then be withdrawn by\n    // permissioned accounts.\n    //\n    // There are two kinds of protocol fees:\n    //\n    //  - flash loan fees: charged on all flash loans, as a percentage of the amounts lent.\n    //\n    //  - swap fees: a percentage of the fees charged by Pools when performing swaps. For a number of reasons, including\n    // swap gas costs and interface simplicity, protocol swap fees are not charged on each individual swap. Rather,\n    // Pools are expected to keep track of how much they have charged in swap fees, and pay any outstanding debts to the\n    // Vault when they are joined or exited. This prevents users from joining a Pool with unpaid debt, as well as\n    // exiting a Pool in debt without first paying their share.\n\n    /**\n     * @dev Returns the current protocol fee module.\n     */\n    function getProtocolFeesCollector() external view returns (IProtocolFeesCollector);\n\n    /**\n     * @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\n     * error in some part of the system.\n     *\n     * The Vault can only be paused during an initial time period, after which pausing is forever disabled.\n     *\n     * While the contract is paused, the following features are disabled:\n     * - depositing and transferring internal balance\n     * - transferring external balance (using the Vault's allowance)\n     * - swaps\n     * - joining Pools\n     * - Asset Manager interactions\n     *\n     * Internal Balance can still be withdrawn, and Pools exited.\n     */\n    function setPaused(bool paused) external;\n\n    /**\n     * @dev Returns the Vault's WETH instance.\n     */\n    function WETH() external view returns (IWETH);\n    // solhint-disable-previous-line func-name-mixedcase\n}\n"
			},
			"interface/IBalancerSwap/IAsset.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IAsset {\n    // solhint-disable-previous-line no-empty-blocks\n}"
			},
			"interface/ISwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\n\n\nimport \"./IBalancerSwap/IAsset.sol\";\nimport \"./IBalancerSwap/IVault.sol\";\n\ninterface ISwap{\n\n\n    // AMMSWAP\n    function filterSwap(uint256  amountInArr,uint256  amountOutMinArr,bytes memory pathArr,address to,uint256 deadLine,address inputAddre,address outAddre) external payable;\n\n\n    //CurveSwap\n    function filterCurve(address to,address inputAddre,uint256[] memory _crvParams) external;\n\n\n    //BalancerSwap\n    function filterBalancer(IVault.SwapKind kind,IVault.BatchSwapStep[] memory swaps,IVault.FundManagement memory funds, IAsset[] memory  assets, int256[]  memory limit,uint256 deadline) external payable;\n}\n"
			},
			"libs/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n\n\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}"
			},
			"libs/TransferHelper.sol": {
				"content": "\n\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./SafeMath.sol\";\n\n\nlibrary TransferHelper {\n    using SafeMath for uint256;\n\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            'TransferHelper::safeApprove: approve failed'\n        );\n    }\n\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            'TransferHelper::safeTransfer: transfer failed'\n        );\n    }\n\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            'TransferHelper::transferFrom: transferFrom failed'\n        );\n    }\n    \n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'TransferHelper::safeTransferETH: ETH transfer failed');\n    }\n    \n    \n    function HelpRoyalties(address nftaddress, uint256 tokenId,uint256 _value) external view returns(address,uint256){\n        \n       (bool success, bytes memory data) =  nftaddress.staticcall(abi.encodeWithSignature(\"royaltyInfo(uint256,uint256)\",tokenId,_value));\n       \n      if(success && data.length == 64){\n          \n          (address addr1,uint256 value1)=abi.decode(data, (address,uint256));\n          if(addr1 != address(0) && value1 > 0 && value1 <= _value.mul(50).div(100)) {\n               \n                return( addr1,value1);\n          }else if(value1 > _value.mul(50).div(100)){\n              \n              return (addr1,_value.mul(50).div(100));\n              \n          }\n          \n      }\n       \n      return(address(0),0);\n        \n       \n    }\n    \n}\n"
			},
			"interface/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n\ninterface IERC20 {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external view returns (string memory);\n    function symbol() external view returns (string memory);\n    function decimals() external view returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n}\n"
			},
			"interface/IBalancerSwap/IWETH.sol": {
				"content": "\n\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"../IERC20.sol\";\n\n\ninterface IWETH is IERC20 {\n    function deposit() external payable;\n\n    function withdraw(uint256 amount) external;\n}\n"
			},
			"interface/IBalancerSwap/IProtocolFeesCollector.sol": {
				"content": "\n\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n\n\nimport \"../IERC20.sol\";\nimport \"./IAuthorizer.sol\";\nimport \"./IVault.sol\";\n\ninterface IProtocolFeesCollector {\n    event SwapFeePercentageChanged(uint256 newSwapFeePercentage);\n    event FlashLoanFeePercentageChanged(uint256 newFlashLoanFeePercentage);\n\n    function withdrawCollectedFees(\n        IERC20[] calldata tokens,\n        uint256[] calldata amounts,\n        address recipient\n    ) external;\n\n    function setSwapFeePercentage(uint256 newSwapFeePercentage) external;\n\n    function setFlashLoanFeePercentage(uint256 newFlashLoanFeePercentage) external;\n\n    function getSwapFeePercentage() external view returns (uint256);\n\n    function getFlashLoanFeePercentage() external view returns (uint256);\n\n    function getCollectedFeeAmounts(IERC20[] memory tokens) external view returns (uint256[] memory feeAmounts);\n\n    function getAuthorizer() external view returns (IAuthorizer);\n\n    function vault() external view returns (IVault);\n}\n"
			},
			"interface/IBalancerSwap/IFlashLoanRecipient.sol": {
				"content": "\n\n\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n\nimport \"../IERC20.sol\";\n\ninterface IFlashLoanRecipient {\n    /**\n     * @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n     *\n     * At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n     * call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n     * Vault, or else the entire flash loan will revert.\n     *\n     * `userData` is the same value passed in the `IVault.flashLoan` call.\n     */\n    function receiveFlashLoan(\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        uint256[] memory feeAmounts,\n        bytes memory userData\n    ) external;\n}\n"
			},
			"interface/IBalancerSwap/IAuthorizer.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface IAuthorizer {\n    /**\n     * @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`.\n     */\n    function canPerform(\n        bytes32 actionId,\n        address account,\n        address where\n    ) external view returns (bool);\n}"
			},
			"interface/IBalancerSwap/ITemporarilyPausable.sol": {
				"content": "\n\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface ITemporarilyPausable {\n    /**\n     * @dev Emitted every time the pause state changes by `_setPaused`.\n     */\n    event PausedStateChanged(bool paused);\n\n    /**\n     * @dev Returns the current paused state.\n     */\n    function getPausedState()\n        external\n        view\n        returns (\n            bool paused,\n            uint256 pauseWindowEndTime,\n            uint256 bufferPeriodEndTime\n        );\n}"
			},
			"interface/IBalancerSwap/ISignaturesValidator.sol": {
				"content": "\n\n\n\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface ISignaturesValidator {\n    /**\n     * @dev Returns the EIP712 domain separator.\n     */\n    function getDomainSeparator() external view returns (bytes32);\n\n    /**\n     * @dev Returns the next nonce used by an address to sign messages.\n     */\n    function getNextNonce(address user) external view returns (uint256);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"BarterswapRouter.sol": {
				"BarterswapRouterV1": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeToAdmin",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "ethToWeth",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "amountInArr",
									"type": "uint256[]"
								}
							],
							"name": "getAmountInAll",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_routerArr",
									"type": "address"
								}
							],
							"name": "getWeth",
							"outputs": [
								{
									"internalType": "address",
									"name": "WETH",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256[]",
											"name": "amountInArr",
											"type": "uint256[]"
										},
										{
											"internalType": "uint256[]",
											"name": "amountOutMinArr",
											"type": "uint256[]"
										},
										{
											"internalType": "bytes[]",
											"name": "pathArr",
											"type": "bytes[]"
										},
										{
											"internalType": "address payable",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadLine",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "inputAddre",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "outAddre",
											"type": "address"
										},
										{
											"internalType": "uint256[]",
											"name": "routerIndex",
											"type": "uint256[]"
										},
										{
											"internalType": "uint256[]",
											"name": "crvParams",
											"type": "uint256[]"
										},
										{
											"components": [
												{
													"internalType": "bytes32",
													"name": "poolId",
													"type": "bytes32"
												},
												{
													"internalType": "uint256",
													"name": "assetInIndex",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "assetOutIndex",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "bytes",
													"name": "userData",
													"type": "bytes"
												}
											],
											"internalType": "struct IVault.BatchSwapStep[]",
											"name": "batchSwapSteps",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "sender",
													"type": "address"
												},
												{
													"internalType": "bool",
													"name": "fromInternalBalance",
													"type": "bool"
												},
												{
													"internalType": "address payable",
													"name": "recipient",
													"type": "address"
												},
												{
													"internalType": "bool",
													"name": "toInternalBalance",
													"type": "bool"
												}
											],
											"internalType": "struct IVault.FundManagement",
											"name": "fundManaGements",
											"type": "tuple"
										},
										{
											"internalType": "int256[]",
											"name": "limits",
											"type": "int256[]"
										},
										{
											"internalType": "contract IAsset[]",
											"name": "assets",
											"type": "address[]"
										},
										{
											"internalType": "enum IVault.SwapKind",
											"name": "_kind",
											"type": "uint8"
										}
									],
									"internalType": "struct BarterswapRouterV1.AccessParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "multiSwap",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "routerAddreAll",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_feeTo",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feetoAdmin",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fees",
									"type": "uint256"
								}
							],
							"name": "setFees",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_routeraddre",
									"type": "address"
								}
							],
							"name": "setRouterAddreAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BarterswapRouter.sol\":401:6401  contract BarterswapRouterV1  {... */\n  mstore(0x40, 0x80)\n    /* \"BarterswapRouter.sol\":1374:1448  constructor(address _feeToAdmin) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"BarterswapRouter.sol\":1430:1441  _feeToAdmin */\n  dup1\n    /* \"BarterswapRouter.sol\":1417:1427  feeToAdmin */\n  0x01\n  0x00\n    /* \"BarterswapRouter.sol\":1417:1441  feeToAdmin = _feeToAdmin */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BarterswapRouter.sol\":1374:1448  constructor(address _feeToAdmin) {... */\n  pop\n    /* \"BarterswapRouter.sol\":401:6401  contract BarterswapRouterV1  {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:440   */\ntag_3:\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":291:292   */\n  0x00\n    /* \"#utility.yul\":288:289   */\n  dup1\n    /* \"#utility.yul\":281:293   */\n  revert\n    /* \"#utility.yul\":243:245   */\ntag_13:\n    /* \"#utility.yul\":334:335   */\n  0x00\n    /* \"#utility.yul\":359:423   */\n  tag_14\n    /* \"#utility.yul\":415:422   */\n  dup5\n    /* \"#utility.yul\":406:412   */\n  dup3\n    /* \"#utility.yul\":395:404   */\n  dup6\n    /* \"#utility.yul\":391:413   */\n  add\n    /* \"#utility.yul\":359:423   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":349:423   */\n  swap2\n  pop\n    /* \"#utility.yul\":305:433   */\n  pop\n    /* \"#utility.yul\":233:440   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":446:542   */\ntag_15:\n  0x00\n    /* \"#utility.yul\":512:536   */\n  tag_17\n    /* \"#utility.yul\":530:535   */\n  dup3\n    /* \"#utility.yul\":512:536   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":501:536   */\n  swap1\n  pop\n    /* \"#utility.yul\":491:542   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":548:674   */\ntag_18:\n  0x00\n    /* \"#utility.yul\":625:667   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":618:623   */\n  dup3\n    /* \"#utility.yul\":614:668   */\n  and\n    /* \"#utility.yul\":603:668   */\n  swap1\n  pop\n    /* \"#utility.yul\":593:674   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":680:802   */\ntag_11:\n    /* \"#utility.yul\":753:777   */\n  tag_21\n    /* \"#utility.yul\":771:776   */\n  dup2\n    /* \"#utility.yul\":753:777   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":746:751   */\n  dup2\n    /* \"#utility.yul\":743:778   */\n  eq\n    /* \"#utility.yul\":733:735   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":789:790   */\n  dup1\n    /* \"#utility.yul\":782:794   */\n  revert\n    /* \"#utility.yul\":733:735   */\ntag_22:\n    /* \"#utility.yul\":723:802   */\n  pop\n  jump\t// out\n    /* \"BarterswapRouter.sol\":401:6401  contract BarterswapRouterV1  {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BarterswapRouter.sol\":401:6401  contract BarterswapRouterV1  {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9af1d35a\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x9af1d35a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa2e74af6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xef3858ab\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf46901ed\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf654df7a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xfd07291f\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x017e7e58\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x239aad0a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x257b66b0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3d18678e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8ac051f2\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8e7fa96a\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BarterswapRouter.sol\":469:499  address  payable public  feeTo */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BarterswapRouter.sol\":1460:2887  function multiSwap (AccessParams calldata params) external payable {    ... */\n    tag_4:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"BarterswapRouter.sol\":561:610  mapping(uint256 => address) public routerAddreAll */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BarterswapRouter.sol\":5840:6004  function setFees(uint _fees) public onlyOwner returns(bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BarterswapRouter.sol\":6260:6396  function getWeth(address _routerArr) public pure returns(address WETH){... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BarterswapRouter.sol\":506:531  address public feeToAdmin */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BarterswapRouter.sol\":538:554  uint public fees */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BarterswapRouter.sol\":5620:5828  function setFeeToSetter(address _feetoAdmin) public onlyOwner returns(bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BarterswapRouter.sol\":5037:5412  function ethToWeth(uint256 amountin, address _to) public payable {... */\n    tag_11:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      stop\n        /* \"BarterswapRouter.sol\":5419:5608  function setFeeTo(address payable _feeTo) public onlyOwner returns(bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BarterswapRouter.sol\":6016:6253  function setRouterAddreAll(uint256 index ,address _routeraddre) public onlyOwner returns(bool){... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BarterswapRouter.sol\":4759:5014  function getAmountInAll(uint256[] memory  amountInArr) public pure returns(uint256){... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BarterswapRouter.sol\":469:499  address  payable public  feeTo */\n    tag_20:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"BarterswapRouter.sol\":1460:2887  function multiSwap (AccessParams calldata params) external payable {    ... */\n    tag_26:\n        /* \"BarterswapRouter.sol\":1545:1565  uint256 amountInArrs */\n      0x00\n        /* \"BarterswapRouter.sol\":1568:1602  getAmountInAll(params.amountInArr) */\n      tag_82\n        /* \"BarterswapRouter.sol\":1583:1589  params */\n      dup3\n        /* \"BarterswapRouter.sol\":1583:1601  params.amountInArr */\n      dup1\n      0x00\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"BarterswapRouter.sol\":1568:1602  getAmountInAll(params.amountInArr) */\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"BarterswapRouter.sol\":1568:1582  getAmountInAll */\n      tag_79\n        /* \"BarterswapRouter.sol\":1568:1602  getAmountInAll(params.amountInArr) */\n      jump\t// in\n    tag_82:\n        /* \"BarterswapRouter.sol\":1545:1602  uint256 amountInArrs = getAmountInAll(params.amountInArr) */\n      swap1\n      pop\n        /* \"BarterswapRouter.sol\":1616:1630  uint256 toFees */\n      0x00\n        /* \"BarterswapRouter.sol\":1633:1665  amountInArrs.mul(fees).div(1e18) */\n      tag_85\n        /* \"BarterswapRouter.sol\":1660:1664  1e18 */\n      0x0de0b6b3a7640000\n        /* \"BarterswapRouter.sol\":1633:1655  amountInArrs.mul(fees) */\n      tag_86\n        /* \"BarterswapRouter.sol\":1650:1654  fees */\n      sload(0x02)\n        /* \"BarterswapRouter.sol\":1633:1645  amountInArrs */\n      dup6\n        /* \"BarterswapRouter.sol\":1633:1649  amountInArrs.mul */\n      tag_87\n      swap1\n        /* \"BarterswapRouter.sol\":1633:1655  amountInArrs.mul(fees) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"BarterswapRouter.sol\":1633:1659  amountInArrs.mul(fees).div */\n      tag_88\n      swap1\n        /* \"BarterswapRouter.sol\":1633:1665  amountInArrs.mul(fees).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"BarterswapRouter.sol\":1616:1665  uint256 toFees = amountInArrs.mul(fees).div(1e18) */\n      swap1\n      pop\n        /* \"BarterswapRouter.sol\":1712:1713  0 */\n      0x00\n        /* \"BarterswapRouter.sol\":1683:1714  params.inputAddre == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BarterswapRouter.sol\":1683:1689  params */\n      dup4\n        /* \"BarterswapRouter.sol\":1683:1700  params.inputAddre */\n      0xa0\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_89:\n        /* \"BarterswapRouter.sol\":1683:1714  params.inputAddre == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BarterswapRouter.sol\":1680:2088  if(params.inputAddre == address(0)){... */\n      iszero\n      tag_90\n      jumpi\n        /* \"BarterswapRouter.sol\":1767:1773  toFees */\n      dup1\n        /* \"BarterswapRouter.sol\":1754:1766  amountInArrs */\n      dup3\n        /* \"BarterswapRouter.sol\":1754:1773  amountInArrs+toFees */\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"BarterswapRouter.sol\":1741:1750  msg.value */\n      callvalue\n        /* \"BarterswapRouter.sol\":1741:1773  msg.value == amountInArrs+toFees */\n      eq\n        /* \"BarterswapRouter.sol\":1733:1791  require(msg.value == amountInArrs+toFees,\"Price is wrong\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"BarterswapRouter.sol\":1809:1853  TransferHelper.safeTransferETH(feeTo,toFees) */\n      tag_96\n        /* \"BarterswapRouter.sol\":1840:1845  feeTo */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BarterswapRouter.sol\":1846:1852  toFees */\n      dup3\n        /* \"BarterswapRouter.sol\":1809:1839  TransferHelper.safeTransferETH */\n      tag_97\n        /* \"BarterswapRouter.sol\":1809:1853  TransferHelper.safeTransferETH(feeTo,toFees) */\n      jump\t// in\n    tag_96:\n        /* \"BarterswapRouter.sol\":1680:2088  if(params.inputAddre == address(0)){... */\n      jump(tag_98)\n    tag_90:\n        /* \"BarterswapRouter.sol\":1891:1980  TransferHelper.safeTransferFrom(params.inputAddre,msg.sender,address(this),amountInArrs ) */\n      tag_99\n        /* \"BarterswapRouter.sol\":1923:1929  params */\n      dup4\n        /* \"BarterswapRouter.sol\":1923:1940  params.inputAddre */\n      0xa0\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_100:\n        /* \"BarterswapRouter.sol\":1941:1951  msg.sender */\n      caller\n        /* \"BarterswapRouter.sol\":1960:1964  this */\n      address\n        /* \"BarterswapRouter.sol\":1966:1978  amountInArrs */\n      dup6\n        /* \"BarterswapRouter.sol\":1891:1922  TransferHelper.safeTransferFrom */\n      tag_101\n        /* \"BarterswapRouter.sol\":1891:1980  TransferHelper.safeTransferFrom(params.inputAddre,msg.sender,address(this),amountInArrs ) */\n      jump\t// in\n    tag_99:\n        /* \"BarterswapRouter.sol\":1998:2072  TransferHelper.safeTransferFrom(params.inputAddre,msg.sender,feeTo,toFees) */\n      tag_102\n        /* \"BarterswapRouter.sol\":2030:2036  params */\n      dup4\n        /* \"BarterswapRouter.sol\":2030:2047  params.inputAddre */\n      0xa0\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_103:\n        /* \"BarterswapRouter.sol\":2048:2058  msg.sender */\n      caller\n        /* \"BarterswapRouter.sol\":2059:2064  feeTo */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BarterswapRouter.sol\":2065:2071  toFees */\n      dup5\n        /* \"BarterswapRouter.sol\":1998:2029  TransferHelper.safeTransferFrom */\n      tag_101\n        /* \"BarterswapRouter.sol\":1998:2072  TransferHelper.safeTransferFrom(params.inputAddre,msg.sender,feeTo,toFees) */\n      jump\t// in\n    tag_102:\n        /* \"BarterswapRouter.sol\":1680:2088  if(params.inputAddre == address(0)){... */\n    tag_98:\n        /* \"BarterswapRouter.sol\":2106:2112  uint i */\n      0x00\n        /* \"BarterswapRouter.sol\":2102:2877  for(uint i = 0; i < params.routerIndex.length; i++){... */\n    tag_104:\n        /* \"BarterswapRouter.sol\":2122:2128  params */\n      dup4\n        /* \"BarterswapRouter.sol\":2122:2140  params.routerIndex */\n      dup1\n      0xe0\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_107:\n        /* \"BarterswapRouter.sol\":2122:2147  params.routerIndex.length */\n      swap1\n      pop\n        /* \"BarterswapRouter.sol\":2118:2119  i */\n      dup2\n        /* \"BarterswapRouter.sol\":2118:2147  i < params.routerIndex.length */\n      lt\n        /* \"BarterswapRouter.sol\":2102:2877  for(uint i = 0; i < params.routerIndex.length; i++){... */\n      iszero\n      tag_105\n      jumpi\n        /* \"BarterswapRouter.sol\":2171:2185  address rindex */\n      0x00\n        /* \"BarterswapRouter.sol\":2188:2202  routerAddreAll */\n      0x03\n        /* \"BarterswapRouter.sol\":2188:2225  routerAddreAll[params.routerIndex[i]] */\n      0x00\n        /* \"BarterswapRouter.sol\":2203:2209  params */\n      dup7\n        /* \"BarterswapRouter.sol\":2203:2221  params.routerIndex */\n      dup1\n      0xe0\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_108:\n        /* \"BarterswapRouter.sol\":2222:2223  i */\n      dup6\n        /* \"BarterswapRouter.sol\":2203:2224  params.routerIndex[i] */\n      dup2\n      dup2\n      lt\n      tag_109\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_109:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"BarterswapRouter.sol\":2188:2225  routerAddreAll[params.routerIndex[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BarterswapRouter.sol\":2171:2225  address rindex = routerAddreAll[params.routerIndex[i]] */\n      swap1\n      pop\n        /* \"BarterswapRouter.sol\":2252:2253  0 */\n      0x00\n        /* \"BarterswapRouter.sol\":2247:2248  i */\n      dup3\n        /* \"BarterswapRouter.sol\":2247:2253  i == 0 */\n      eq\n        /* \"BarterswapRouter.sol\":2247:2285  i == 0 && params.crvParams.length == 4 */\n      dup1\n      iszero\n      tag_110\n      jumpi\n      pop\n        /* \"BarterswapRouter.sol\":2284:2285  4 */\n      0x04\n        /* \"BarterswapRouter.sol\":2257:2263  params */\n      dup6\n        /* \"BarterswapRouter.sol\":2257:2273  params.crvParams */\n      dup1\n      0x0100\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_111:\n        /* \"BarterswapRouter.sol\":2257:2280  params.crvParams.length */\n      swap1\n      pop\n        /* \"BarterswapRouter.sol\":2257:2285  params.crvParams.length == 4 */\n      eq\n        /* \"BarterswapRouter.sol\":2247:2285  i == 0 && params.crvParams.length == 4 */\n    tag_110:\n        /* \"BarterswapRouter.sol\":2243:2859  if (i == 0 && params.crvParams.length == 4){... */\n      iszero\n      tag_112\n      jumpi\n        /* \"BarterswapRouter.sol\":2312:2392  crvSwap(params.inputAddre,rindex,params.to,params.crvParams[2],params.crvParams) */\n      tag_113\n        /* \"BarterswapRouter.sol\":2320:2326  params */\n      dup6\n        /* \"BarterswapRouter.sol\":2320:2337  params.inputAddre */\n      0xa0\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_114:\n        /* \"BarterswapRouter.sol\":2338:2344  rindex */\n      dup3\n        /* \"BarterswapRouter.sol\":2345:2351  params */\n      dup8\n        /* \"BarterswapRouter.sol\":2345:2354  params.to */\n      0x60\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_115:\n        /* \"BarterswapRouter.sol\":2355:2361  params */\n      dup9\n        /* \"BarterswapRouter.sol\":2355:2371  params.crvParams */\n      dup1\n      0x0100\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_116:\n        /* \"BarterswapRouter.sol\":2372:2373  2 */\n      0x02\n        /* \"BarterswapRouter.sol\":2355:2374  params.crvParams[2] */\n      dup2\n      dup2\n      lt\n      tag_117\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_117:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"BarterswapRouter.sol\":2375:2381  params */\n      dup10\n        /* \"BarterswapRouter.sol\":2375:2391  params.crvParams */\n      dup1\n      0x0100\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_118:\n        /* \"BarterswapRouter.sol\":2312:2392  crvSwap(params.inputAddre,rindex,params.to,params.crvParams[2],params.crvParams) */\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"BarterswapRouter.sol\":2312:2319  crvSwap */\n      tag_119\n        /* \"BarterswapRouter.sol\":2312:2392  crvSwap(params.inputAddre,rindex,params.to,params.crvParams[2],params.crvParams) */\n      jump\t// in\n    tag_113:\n        /* \"BarterswapRouter.sol\":2243:2859  if (i == 0 && params.crvParams.length == 4){... */\n      jump(tag_120)\n    tag_112:\n        /* \"BarterswapRouter.sol\":2424:2425  1 */\n      0x01\n        /* \"BarterswapRouter.sol\":2419:2420  i */\n      dup3\n        /* \"BarterswapRouter.sol\":2419:2425  i == 1 */\n      eq\n        /* \"BarterswapRouter.sol\":2419:2453  i == 1 && params.limits.length > 1 */\n      dup1\n      iszero\n      tag_121\n      jumpi\n      pop\n        /* \"BarterswapRouter.sol\":2452:2453  1 */\n      0x01\n        /* \"BarterswapRouter.sol\":2429:2435  params */\n      dup6\n        /* \"BarterswapRouter.sol\":2429:2442  params.limits */\n      dup1\n      0x01c0\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"BarterswapRouter.sol\":2429:2449  params.limits.length */\n      swap1\n      pop\n        /* \"BarterswapRouter.sol\":2429:2453  params.limits.length > 1 */\n      gt\n        /* \"BarterswapRouter.sol\":2419:2453  i == 1 && params.limits.length > 1 */\n    tag_121:\n        /* \"BarterswapRouter.sol\":2416:2859  if(i == 1 && params.limits.length > 1){... */\n      iszero\n      tag_124\n      jumpi\n        /* \"BarterswapRouter.sol\":2498:2638  balancerSwap(params._kind,params.inputAddre,rindex,params.batchSwapSteps,params.fundManaGements,params.assets,params.limits,params.deadLine) */\n      tag_125\n        /* \"BarterswapRouter.sol\":2511:2517  params */\n      dup6\n        /* \"BarterswapRouter.sol\":2511:2523  params._kind */\n      0x0200\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"BarterswapRouter.sol\":2524:2530  params */\n      dup7\n        /* \"BarterswapRouter.sol\":2524:2541  params.inputAddre */\n      0xa0\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_128:\n        /* \"BarterswapRouter.sol\":2542:2548  rindex */\n      dup4\n        /* \"BarterswapRouter.sol\":2549:2555  params */\n      dup9\n        /* \"BarterswapRouter.sol\":2549:2570  params.batchSwapSteps */\n      dup1\n      0x0120\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"BarterswapRouter.sol\":2498:2638  balancerSwap(params._kind,params.inputAddre,rindex,params.batchSwapSteps,params.fundManaGements,params.assets,params.limits,params.deadLine) */\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"BarterswapRouter.sol\":2571:2577  params */\n      dup10\n        /* \"BarterswapRouter.sol\":2571:2593  params.fundManaGements */\n      0x0140\n      add\n        /* \"BarterswapRouter.sol\":2498:2638  balancerSwap(params._kind,params.inputAddre,rindex,params.batchSwapSteps,params.fundManaGements,params.assets,params.limits,params.deadLine) */\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"BarterswapRouter.sol\":2594:2600  params */\n      dup11\n        /* \"BarterswapRouter.sol\":2594:2607  params.assets */\n      dup1\n      0x01e0\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"BarterswapRouter.sol\":2498:2638  balancerSwap(params._kind,params.inputAddre,rindex,params.batchSwapSteps,params.fundManaGements,params.assets,params.limits,params.deadLine) */\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"BarterswapRouter.sol\":2608:2614  params */\n      dup12\n        /* \"BarterswapRouter.sol\":2608:2621  params.limits */\n      dup1\n      0x01c0\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_137:\n        /* \"BarterswapRouter.sol\":2498:2638  balancerSwap(params._kind,params.inputAddre,rindex,params.batchSwapSteps,params.fundManaGements,params.assets,params.limits,params.deadLine) */\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"BarterswapRouter.sol\":2622:2628  params */\n      dup13\n        /* \"BarterswapRouter.sol\":2622:2637  params.deadLine */\n      0x80\n      add\n      calldataload\n        /* \"BarterswapRouter.sol\":2498:2510  balancerSwap */\n      tag_138\n        /* \"BarterswapRouter.sol\":2498:2638  balancerSwap(params._kind,params.inputAddre,rindex,params.batchSwapSteps,params.fundManaGements,params.assets,params.limits,params.deadLine) */\n      jump\t// in\n    tag_125:\n        /* \"BarterswapRouter.sol\":2416:2859  if(i == 1 && params.limits.length > 1){... */\n      jump(tag_139)\n    tag_124:\n        /* \"BarterswapRouter.sol\":2691:2836  AmmSeriSwap(rindex,params.amountInArr[i],params.amountOutMinArr[i],params.pathArr[i],params.to,params.deadLine,params.inputAddre,params.outAddre) */\n      tag_140\n        /* \"BarterswapRouter.sol\":2703:2709  rindex */\n      dup2\n        /* \"BarterswapRouter.sol\":2710:2716  params */\n      dup7\n        /* \"BarterswapRouter.sol\":2710:2728  params.amountInArr */\n      dup1\n      0x00\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_141:\n        /* \"BarterswapRouter.sol\":2729:2730  i */\n      dup6\n        /* \"BarterswapRouter.sol\":2710:2731  params.amountInArr[i] */\n      dup2\n      dup2\n      lt\n      tag_142\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_142:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"BarterswapRouter.sol\":2732:2738  params */\n      dup8\n        /* \"BarterswapRouter.sol\":2732:2754  params.amountOutMinArr */\n      dup1\n      0x20\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_143:\n        /* \"BarterswapRouter.sol\":2755:2756  i */\n      dup7\n        /* \"BarterswapRouter.sol\":2732:2757  params.amountOutMinArr[i] */\n      dup2\n      dup2\n      lt\n      tag_144\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_144:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"BarterswapRouter.sol\":2758:2764  params */\n      dup9\n        /* \"BarterswapRouter.sol\":2758:2772  params.pathArr */\n      dup1\n      0x40\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"BarterswapRouter.sol\":2773:2774  i */\n      dup8\n        /* \"BarterswapRouter.sol\":2758:2775  params.pathArr[i] */\n      dup2\n      dup2\n      lt\n      tag_147\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_147:\n      swap1\n      pop\n      0x20\n      mul\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"BarterswapRouter.sol\":2691:2836  AmmSeriSwap(rindex,params.amountInArr[i],params.amountOutMinArr[i],params.pathArr[i],params.to,params.deadLine,params.inputAddre,params.outAddre) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"BarterswapRouter.sol\":2776:2782  params */\n      dup10\n        /* \"BarterswapRouter.sol\":2776:2785  params.to */\n      0x60\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_150:\n        /* \"BarterswapRouter.sol\":2786:2792  params */\n      dup11\n        /* \"BarterswapRouter.sol\":2786:2801  params.deadLine */\n      0x80\n      add\n      calldataload\n        /* \"BarterswapRouter.sol\":2802:2808  params */\n      dup12\n        /* \"BarterswapRouter.sol\":2802:2819  params.inputAddre */\n      0xa0\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_151:\n        /* \"BarterswapRouter.sol\":2820:2826  params */\n      dup13\n        /* \"BarterswapRouter.sol\":2820:2835  params.outAddre */\n      0xc0\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_152:\n        /* \"BarterswapRouter.sol\":2691:2702  AmmSeriSwap */\n      tag_153\n        /* \"BarterswapRouter.sol\":2691:2836  AmmSeriSwap(rindex,params.amountInArr[i],params.amountOutMinArr[i],params.pathArr[i],params.to,params.deadLine,params.inputAddre,params.outAddre) */\n      jump\t// in\n    tag_140:\n        /* \"BarterswapRouter.sol\":2416:2859  if(i == 1 && params.limits.length > 1){... */\n    tag_139:\n        /* \"BarterswapRouter.sol\":2243:2859  if (i == 0 && params.crvParams.length == 4){... */\n    tag_120:\n        /* \"BarterswapRouter.sol\":2102:2877  for(uint i = 0; i < params.routerIndex.length; i++){... */\n      pop\n        /* \"BarterswapRouter.sol\":2149:2152  i++ */\n      dup1\n      dup1\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      swap2\n      pop\n      pop\n        /* \"BarterswapRouter.sol\":2102:2877  for(uint i = 0; i < params.routerIndex.length; i++){... */\n      jump(tag_104)\n    tag_105:\n      pop\n        /* \"BarterswapRouter.sol\":1460:2887  function multiSwap (AccessParams calldata params) external payable {    ... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BarterswapRouter.sol\":561:610  mapping(uint256 => address) public routerAddreAll */\n    tag_31:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"BarterswapRouter.sol\":5840:6004  function setFees(uint _fees) public onlyOwner returns(bool) {... */\n    tag_37:\n        /* \"BarterswapRouter.sol\":5894:5898  bool */\n      0x00\n        /* \"BarterswapRouter.sol\":1309:1319  feeToAdmin */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BarterswapRouter.sol\":1295:1319  msg.sender == feeToAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BarterswapRouter.sol\":1295:1305  msg.sender */\n      caller\n        /* \"BarterswapRouter.sol\":1295:1319  msg.sender == feeToAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BarterswapRouter.sol\":1287:1350  require(msg.sender == feeToAdmin,\"BarterswapV2Router: EXPIRED\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"BarterswapRouter.sol\":5927:5928  0 */\n      0x00\n        /* \"BarterswapRouter.sol\":5918:5923  _fees */\n      dup3\n        /* \"BarterswapRouter.sol\":5918:5928  _fees != 0 */\n      eq\n      iszero\n        /* \"BarterswapRouter.sol\":5910:5954  require(_fees != 0, 'Barterswap: FORBIDDEN') */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"BarterswapRouter.sol\":5971:5976  _fees */\n      dup2\n        /* \"BarterswapRouter.sol\":5964:5968  fees */\n      0x02\n        /* \"BarterswapRouter.sol\":5964:5976  fees = _fees */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BarterswapRouter.sol\":5993:5997  true */\n      0x01\n        /* \"BarterswapRouter.sol\":5986:5997  return true */\n      swap1\n      pop\n        /* \"BarterswapRouter.sol\":5840:6004  function setFees(uint _fees) public onlyOwner returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BarterswapRouter.sol\":6260:6396  function getWeth(address _routerArr) public pure returns(address WETH){... */\n    tag_44:\n        /* \"BarterswapRouter.sol\":6317:6329  address WETH */\n      0x00\n        /* \"BarterswapRouter.sol\":6370:6380  _routerArr */\n      dup2\n        /* \"BarterswapRouter.sol\":6348:6386  IBarterswapV2Router01(_routerArr).WETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xad5c4648\n        /* \"BarterswapRouter.sol\":6348:6388  IBarterswapV2Router01(_routerArr).WETH() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"BarterswapRouter.sol\":6340:6388  WETH =  IBarterswapV2Router01(_routerArr).WETH() */\n      swap1\n      pop\n        /* \"BarterswapRouter.sol\":6260:6396  function getWeth(address _routerArr) public pure returns(address WETH){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BarterswapRouter.sol\":506:531  address public feeToAdmin */\n    tag_48:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"BarterswapRouter.sol\":538:554  uint public fees */\n    tag_52:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"BarterswapRouter.sol\":5620:5828  function setFeeToSetter(address _feetoAdmin) public onlyOwner returns(bool) {... */\n    tag_58:\n        /* \"BarterswapRouter.sol\":5690:5694  bool */\n      0x00\n        /* \"BarterswapRouter.sol\":1309:1319  feeToAdmin */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BarterswapRouter.sol\":1295:1319  msg.sender == feeToAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BarterswapRouter.sol\":1295:1305  msg.sender */\n      caller\n        /* \"BarterswapRouter.sol\":1295:1319  msg.sender == feeToAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BarterswapRouter.sol\":1287:1350  require(msg.sender == feeToAdmin,\"BarterswapV2Router: EXPIRED\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_159\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"BarterswapRouter.sol\":5738:5739  0 */\n      0x00\n        /* \"BarterswapRouter.sol\":5715:5740  _feetoAdmin != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BarterswapRouter.sol\":5715:5726  _feetoAdmin */\n      dup3\n        /* \"BarterswapRouter.sol\":5715:5740  _feetoAdmin != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BarterswapRouter.sol\":5707:5766  require(_feetoAdmin != address(0), 'Barterswap: FORBIDDEN') */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_163\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"BarterswapRouter.sol\":5789:5800  _feetoAdmin */\n      dup2\n        /* \"BarterswapRouter.sol\":5776:5786  feeToAdmin */\n      0x01\n      0x00\n        /* \"BarterswapRouter.sol\":5776:5800  feeToAdmin = _feetoAdmin */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BarterswapRouter.sol\":5817:5821  true */\n      0x01\n        /* \"BarterswapRouter.sol\":5810:5821  return true */\n      swap1\n      pop\n        /* \"BarterswapRouter.sol\":5620:5828  function setFeeToSetter(address _feetoAdmin) public onlyOwner returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BarterswapRouter.sol\":5037:5412  function ethToWeth(uint256 amountin, address _to) public payable {... */\n    tag_63:\n        /* \"BarterswapRouter.sol\":5116:5130  uint256 toFees */\n      0x00\n        /* \"BarterswapRouter.sol\":5133:5161  amountin.mul(fees).div(1e18) */\n      tag_177\n        /* \"BarterswapRouter.sol\":5156:5160  1e18 */\n      0x0de0b6b3a7640000\n        /* \"BarterswapRouter.sol\":5133:5151  amountin.mul(fees) */\n      tag_178\n        /* \"BarterswapRouter.sol\":5146:5150  fees */\n      sload(0x02)\n        /* \"BarterswapRouter.sol\":5133:5141  amountin */\n      dup7\n        /* \"BarterswapRouter.sol\":5133:5145  amountin.mul */\n      tag_87\n      swap1\n        /* \"BarterswapRouter.sol\":5133:5151  amountin.mul(fees) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_178:\n        /* \"BarterswapRouter.sol\":5133:5155  amountin.mul(fees).div */\n      tag_88\n      swap1\n        /* \"BarterswapRouter.sol\":5133:5161  amountin.mul(fees).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_177:\n        /* \"BarterswapRouter.sol\":5116:5161  uint256 toFees = amountin.mul(fees).div(1e18) */\n      swap1\n      pop\n        /* \"BarterswapRouter.sol\":5207:5213  toFees */\n      dup1\n        /* \"BarterswapRouter.sol\":5196:5204  amountin */\n      dup4\n        /* \"BarterswapRouter.sol\":5196:5213  amountin + toFees */\n      tag_179\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_179:\n        /* \"BarterswapRouter.sol\":5183:5192  msg.value */\n      callvalue\n        /* \"BarterswapRouter.sol\":5183:5213  msg.value == amountin + toFees */\n      eq\n        /* \"BarterswapRouter.sol\":5175:5231  require(msg.value == amountin + toFees,\"Price is wrong\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_95\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"BarterswapRouter.sol\":5245:5289  TransferHelper.safeTransferETH(feeTo,toFees) */\n      tag_182\n        /* \"BarterswapRouter.sol\":5276:5281  feeTo */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BarterswapRouter.sol\":5282:5288  toFees */\n      dup3\n        /* \"BarterswapRouter.sol\":5245:5275  TransferHelper.safeTransferETH */\n      tag_97\n        /* \"BarterswapRouter.sol\":5245:5289  TransferHelper.safeTransferETH(feeTo,toFees) */\n      jump\t// in\n    tag_182:\n        /* \"BarterswapRouter.sol\":641:683  0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270 */\n      0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270\n        /* \"BarterswapRouter.sol\":5303:5324  IWETH9(WETHS).deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0e30db0\n        /* \"BarterswapRouter.sol\":5331:5339  amountin */\n      dup5\n        /* \"BarterswapRouter.sol\":5303:5342  IWETH9(WETHS).deposit{value:amountin}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_183:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"BarterswapRouter.sol\":5358:5405  TransferHelper.safeTransfer(WETHS,_to,amountin) */\n      tag_186\n        /* \"BarterswapRouter.sol\":641:683  0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270 */\n      0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270\n        /* \"BarterswapRouter.sol\":5392:5395  _to */\n      dup4\n        /* \"BarterswapRouter.sol\":5396:5404  amountin */\n      dup6\n        /* \"BarterswapRouter.sol\":5358:5385  TransferHelper.safeTransfer */\n      tag_187\n        /* \"BarterswapRouter.sol\":5358:5405  TransferHelper.safeTransfer(WETHS,_to,amountin) */\n      jump\t// in\n    tag_186:\n        /* \"BarterswapRouter.sol\":5037:5412  function ethToWeth(uint256 amountin, address _to) public payable {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BarterswapRouter.sol\":5419:5608  function setFeeTo(address payable _feeTo) public onlyOwner returns(bool) {... */\n    tag_68:\n        /* \"BarterswapRouter.sol\":5486:5490  bool */\n      0x00\n        /* \"BarterswapRouter.sol\":1309:1319  feeToAdmin */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BarterswapRouter.sol\":1295:1319  msg.sender == feeToAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BarterswapRouter.sol\":1295:1305  msg.sender */\n      caller\n        /* \"BarterswapRouter.sol\":1295:1319  msg.sender == feeToAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BarterswapRouter.sol\":1287:1350  require(msg.sender == feeToAdmin,\"BarterswapV2Router: EXPIRED\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_159\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"BarterswapRouter.sol\":5528:5529  0 */\n      0x00\n        /* \"BarterswapRouter.sol\":5510:5530  _feeTo != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BarterswapRouter.sol\":5510:5516  _feeTo */\n      dup3\n        /* \"BarterswapRouter.sol\":5510:5530  _feeTo != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BarterswapRouter.sol\":5502:5556  require(_feeTo != address(0), 'Barterswap: FORBIDDEN') */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_163\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"BarterswapRouter.sol\":5574:5580  _feeTo */\n      dup2\n        /* \"BarterswapRouter.sol\":5566:5571  feeTo */\n      0x00\n      dup1\n        /* \"BarterswapRouter.sol\":5566:5580  feeTo = _feeTo */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BarterswapRouter.sol\":5597:5601  true */\n      0x01\n        /* \"BarterswapRouter.sol\":5590:5601  return true */\n      swap1\n      pop\n        /* \"BarterswapRouter.sol\":5419:5608  function setFeeTo(address payable _feeTo) public onlyOwner returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BarterswapRouter.sol\":6016:6253  function setRouterAddreAll(uint256 index ,address _routeraddre) public onlyOwner returns(bool){... */\n    tag_73:\n        /* \"BarterswapRouter.sol\":6105:6109  bool */\n      0x00\n        /* \"BarterswapRouter.sol\":1309:1319  feeToAdmin */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BarterswapRouter.sol\":1295:1319  msg.sender == feeToAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BarterswapRouter.sol\":1295:1305  msg.sender */\n      caller\n        /* \"BarterswapRouter.sol\":1295:1319  msg.sender == feeToAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BarterswapRouter.sol\":1287:1350  require(msg.sender == feeToAdmin,\"BarterswapV2Router: EXPIRED\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_159\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"BarterswapRouter.sol\":6152:6153  0 */\n      0x00\n        /* \"BarterswapRouter.sol\":6128:6154  _routeraddre != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BarterswapRouter.sol\":6128:6140  _routeraddre */\n      dup3\n        /* \"BarterswapRouter.sol\":6128:6154  _routeraddre != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BarterswapRouter.sol\":6120:6179  require(_routeraddre != address(0),'Barterswap: FORBIDDEN') */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_163\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"BarterswapRouter.sol\":6213:6225  _routeraddre */\n      dup2\n        /* \"BarterswapRouter.sol\":6189:6203  routerAddreAll */\n      0x03\n        /* \"BarterswapRouter.sol\":6189:6210  routerAddreAll[index] */\n      0x00\n        /* \"BarterswapRouter.sol\":6204:6209  index */\n      dup6\n        /* \"BarterswapRouter.sol\":6189:6210  routerAddreAll[index] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"BarterswapRouter.sol\":6189:6225  routerAddreAll[index] = _routeraddre */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BarterswapRouter.sol\":6242:6246  true */\n      0x01\n        /* \"BarterswapRouter.sol\":6235:6246  return true */\n      swap1\n      pop\n        /* \"BarterswapRouter.sol\":6016:6253  function setRouterAddreAll(uint256 index ,address _routeraddre) public onlyOwner returns(bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BarterswapRouter.sol\":4759:5014  function getAmountInAll(uint256[] memory  amountInArr) public pure returns(uint256){... */\n    tag_79:\n        /* \"BarterswapRouter.sol\":4834:4841  uint256 */\n      0x00\n        /* \"BarterswapRouter.sol\":4852:4869  uint amountInArrs */\n      dup1\n        /* \"BarterswapRouter.sol\":4883:4889  uint i */\n      0x00\n        /* \"BarterswapRouter.sol\":4879:4978  for(uint i = 0; i < amountInArr.length; i++){... */\n    tag_201:\n        /* \"BarterswapRouter.sol\":4899:4910  amountInArr */\n      dup4\n        /* \"BarterswapRouter.sol\":4899:4917  amountInArr.length */\n      mload\n        /* \"BarterswapRouter.sol\":4895:4896  i */\n      dup2\n        /* \"BarterswapRouter.sol\":4895:4917  i < amountInArr.length */\n      lt\n        /* \"BarterswapRouter.sol\":4879:4978  for(uint i = 0; i < amountInArr.length; i++){... */\n      iszero\n      tag_202\n      jumpi\n        /* \"BarterswapRouter.sol\":4953:4964  amountInArr */\n      dup4\n        /* \"BarterswapRouter.sol\":4965:4966  i */\n      dup2\n        /* \"BarterswapRouter.sol\":4953:4967  amountInArr[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_204\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_204:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"BarterswapRouter.sol\":4937:4967  amountInArrs += amountInArr[i] */\n      dup3\n      tag_205\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_205:\n      swap2\n      pop\n        /* \"BarterswapRouter.sol\":4919:4922  i++ */\n      dup1\n      dup1\n      tag_206\n      swap1\n      tag_155\n      jump\t// in\n    tag_206:\n      swap2\n      pop\n      pop\n        /* \"BarterswapRouter.sol\":4879:4978  for(uint i = 0; i < amountInArr.length; i++){... */\n      jump(tag_201)\n    tag_202:\n      pop\n        /* \"BarterswapRouter.sol\":4994:5006  amountInArrs */\n      dup1\n        /* \"BarterswapRouter.sol\":4987:5006  return amountInArrs */\n      swap2\n      pop\n      pop\n        /* \"BarterswapRouter.sol\":4759:5014  function getAmountInAll(uint256[] memory  amountInArr) public pure returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"libs/SafeMath.sol\":1618:2077  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_87:\n        /* \"libs/SafeMath.sol\":1676:1683  uint256 */\n      0x00\n        /* \"libs/SafeMath.sol\":1922:1923  0 */\n      dup1\n        /* \"libs/SafeMath.sol\":1917:1918  a */\n      dup4\n        /* \"libs/SafeMath.sol\":1917:1923  a == 0 */\n      eq\n        /* \"libs/SafeMath.sol\":1913:1958  if (a == 0) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"libs/SafeMath.sol\":1946:1947  0 */\n      0x00\n        /* \"libs/SafeMath.sol\":1939:1947  return 0 */\n      swap1\n      pop\n      jump(tag_207)\n        /* \"libs/SafeMath.sol\":1913:1958  if (a == 0) {... */\n    tag_208:\n        /* \"libs/SafeMath.sol\":1968:1977  uint256 c */\n      0x00\n        /* \"libs/SafeMath.sol\":1984:1985  b */\n      dup3\n        /* \"libs/SafeMath.sol\":1980:1981  a */\n      dup5\n        /* \"libs/SafeMath.sol\":1980:1985  a * b */\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"libs/SafeMath.sol\":1968:1985  uint256 c = a * b */\n      swap1\n      pop\n        /* \"libs/SafeMath.sol\":2012:2013  b */\n      dup3\n        /* \"libs/SafeMath.sol\":2007:2008  a */\n      dup5\n        /* \"libs/SafeMath.sol\":2003:2004  c */\n      dup3\n        /* \"libs/SafeMath.sol\":2003:2008  c / a */\n      tag_211\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"libs/SafeMath.sol\":2003:2013  c / a == b */\n      eq\n        /* \"libs/SafeMath.sol\":1995:2051  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"libs/SafeMath.sol\":2069:2070  c */\n      dup1\n        /* \"libs/SafeMath.sol\":2062:2070  return c */\n      swap2\n      pop\n      pop\n        /* \"libs/SafeMath.sol\":1618:2077  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_207:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"libs/SafeMath.sol\":2539:2669  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_88:\n        /* \"libs/SafeMath.sol\":2597:2604  uint256 */\n      0x00\n        /* \"libs/SafeMath.sol\":2623:2662  div(a, b, \"SafeMath: division by zero\") */\n      tag_217\n        /* \"libs/SafeMath.sol\":2627:2628  a */\n      dup4\n        /* \"libs/SafeMath.sol\":2630:2631  b */\n      dup4\n        /* \"libs/SafeMath.sol\":2623:2662  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"libs/SafeMath.sol\":2623:2626  div */\n      tag_218\n        /* \"libs/SafeMath.sol\":2623:2662  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_217:\n        /* \"libs/SafeMath.sol\":2616:2662  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"libs/SafeMath.sol\":2539:2669  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"libs/TransferHelper.sol\":1529:1743  function safeTransferETH(address to, uint256 value) internal {... */\n    tag_97:\n        /* \"libs/TransferHelper.sol\":1601:1613  bool success */\n      0x00\n        /* \"libs/TransferHelper.sol\":1619:1621  to */\n      dup3\n        /* \"libs/TransferHelper.sol\":1619:1626  to.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"libs/TransferHelper.sol\":1634:1639  value */\n      dup3\n        /* \"libs/TransferHelper.sol\":1651:1652  0 */\n      0x00\n        /* \"libs/TransferHelper.sol\":1641:1653  new bytes(0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_220\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_220:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_221\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_221:\n      pop\n        /* \"libs/TransferHelper.sol\":1619:1654  to.call{value: value}(new bytes(0)) */\n      mload(0x40)\n      tag_222\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_226\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_225)\n    tag_226:\n      0x60\n      swap2\n      pop\n    tag_225:\n      pop\n        /* \"libs/TransferHelper.sol\":1600:1654  (bool success, ) = to.call{value: value}(new bytes(0)) */\n      pop\n      swap1\n      pop\n        /* \"libs/TransferHelper.sol\":1672:1679  success */\n      dup1\n        /* \"libs/TransferHelper.sol\":1664:1736  require(success, 'TransferHelper::safeTransferETH: ETH transfer failed') */\n      tag_227\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_227:\n        /* \"libs/TransferHelper.sol\":1529:1743  function safeTransferETH(address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libs/TransferHelper.sol\":1033:1519  function safeTransferFrom(... */\n    tag_101:\n        /* \"libs/TransferHelper.sol\":1251:1263  bool success */\n      0x00\n        /* \"libs/TransferHelper.sol\":1265:1282  bytes memory data */\n      dup1\n        /* \"libs/TransferHelper.sol\":1286:1291  token */\n      dup6\n        /* \"libs/TransferHelper.sol\":1286:1296  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"libs/TransferHelper.sol\":1320:1330  0x23b872dd */\n      0x23b872dd\n        /* \"libs/TransferHelper.sol\":1332:1336  from */\n      dup7\n        /* \"libs/TransferHelper.sol\":1338:1340  to */\n      dup7\n        /* \"libs/TransferHelper.sol\":1342:1347  value */\n      dup7\n        /* \"libs/TransferHelper.sol\":1297:1348  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_231\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"libs/TransferHelper.sol\":1286:1349  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      mload(0x40)\n      tag_233\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_233:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_236\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_235)\n    tag_236:\n      0x60\n      swap2\n      pop\n    tag_235:\n      pop\n        /* \"libs/TransferHelper.sol\":1250:1349  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"libs/TransferHelper.sol\":1380:1387  success */\n      dup2\n        /* \"libs/TransferHelper.sol\":1380:1437  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_237\n      jumpi\n      pop\n        /* \"libs/TransferHelper.sol\":1407:1408  0 */\n      0x00\n        /* \"libs/TransferHelper.sol\":1392:1396  data */\n      dup2\n        /* \"libs/TransferHelper.sol\":1392:1403  data.length */\n      mload\n        /* \"libs/TransferHelper.sol\":1392:1408  data.length == 0 */\n      eq\n        /* \"libs/TransferHelper.sol\":1392:1436  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_238\n      jumpi\n      pop\n        /* \"libs/TransferHelper.sol\":1423:1427  data */\n      dup1\n        /* \"libs/TransferHelper.sol\":1412:1436  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_239\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"libs/TransferHelper.sol\":1392:1436  data.length == 0 || abi.decode(data, (bool)) */\n    tag_238:\n        /* \"libs/TransferHelper.sol\":1380:1437  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_237:\n        /* \"libs/TransferHelper.sol\":1359:1512  require(... */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"libs/TransferHelper.sol\":1033:1519  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BarterswapRouter.sol\":3639:3951  function crvSwap(address _inputAddre,address _rindex,address _to,uint256 _dx,uint256[] memory parameterList) internal{... */\n    tag_119:\n        /* \"BarterswapRouter.sol\":3773:3784  _inputAddre */\n      dup5\n        /* \"BarterswapRouter.sol\":3766:3793  IERC20(_inputAddre).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"BarterswapRouter.sol\":3794:3801  _rindex */\n      dup6\n        /* \"BarterswapRouter.sol\":3802:3805  _dx */\n      dup5\n        /* \"BarterswapRouter.sol\":3766:3806  IERC20(_inputAddre).approve(_rindex,_dx) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap3\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_247:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_249\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_249:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_250\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_250:\n      pop\n        /* \"BarterswapRouter.sol\":3816:3868  TransferHelper.safeTransfer(_inputAddre,_rindex,_dx) */\n      tag_251\n        /* \"BarterswapRouter.sol\":3844:3855  _inputAddre */\n      dup6\n        /* \"BarterswapRouter.sol\":3856:3863  _rindex */\n      dup6\n        /* \"BarterswapRouter.sol\":3864:3867  _dx */\n      dup5\n        /* \"BarterswapRouter.sol\":3816:3843  TransferHelper.safeTransfer */\n      tag_187\n        /* \"BarterswapRouter.sol\":3816:3868  TransferHelper.safeTransfer(_inputAddre,_rindex,_dx) */\n      jump\t// in\n    tag_251:\n        /* \"BarterswapRouter.sol\":3884:3891  _rindex */\n      dup4\n        /* \"BarterswapRouter.sol\":3878:3904  ISwap(_rindex).filterCurve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3502eea8\n        /* \"BarterswapRouter.sol\":3905:3908  _to */\n      dup5\n        /* \"BarterswapRouter.sol\":3909:3920  _inputAddre */\n      dup8\n        /* \"BarterswapRouter.sol\":3921:3934  parameterList */\n      dup5\n        /* \"BarterswapRouter.sol\":3878:3935  ISwap(_rindex).filterCurve(_to,_inputAddre,parameterList) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_254\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_254:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_256\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_256:\n      pop\n      pop\n      pop\n      pop\n        /* \"BarterswapRouter.sol\":3639:3951  function crvSwap(address _inputAddre,address _rindex,address _to,uint256 _dx,uint256[] memory parameterList) internal{... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BarterswapRouter.sol\":2923:3616  function balancerSwap(IVault.SwapKind _kind, address _inputAddre,address _rindex,IVault.BatchSwapStep[] memory _swaps,IVault.FundManagement memory _funds, IAsset[] memory  _assets, int256[]  memory _limit,uint256 _deadLine) internal{... */\n    tag_138:\n        /* \"BarterswapRouter.sol\":3191:3192  0 */\n      0x00\n        /* \"BarterswapRouter.sol\":3168:3193  _inputAddre == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BarterswapRouter.sol\":3168:3179  _inputAddre */\n      dup8\n        /* \"BarterswapRouter.sol\":3168:3193  _inputAddre == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BarterswapRouter.sol\":3165:3610  if(_inputAddre == address(0)){... */\n      iszero\n      tag_258\n      jumpi\n        /* \"BarterswapRouter.sol\":3208:3264  TransferHelper.safeTransferETH(_rindex,_swaps[0].amount) */\n      tag_259\n        /* \"BarterswapRouter.sol\":3239:3246  _rindex */\n      dup7\n        /* \"BarterswapRouter.sol\":3247:3253  _swaps */\n      dup7\n        /* \"BarterswapRouter.sol\":3254:3255  0 */\n      0x00\n        /* \"BarterswapRouter.sol\":3247:3256  _swaps[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_260\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_260:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"BarterswapRouter.sol\":3247:3263  _swaps[0].amount */\n      0x60\n      add\n      mload\n        /* \"BarterswapRouter.sol\":3208:3238  TransferHelper.safeTransferETH */\n      tag_97\n        /* \"BarterswapRouter.sol\":3208:3264  TransferHelper.safeTransferETH(_rindex,_swaps[0].amount) */\n      jump\t// in\n    tag_259:\n        /* \"BarterswapRouter.sol\":3284:3291  _rindex */\n      dup6\n        /* \"BarterswapRouter.sol\":3278:3307  ISwap(_rindex).filterBalancer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1738b50e\n        /* \"BarterswapRouter.sol\":3308:3313  _kind */\n      dup10\n        /* \"BarterswapRouter.sol\":3314:3320  _swaps */\n      dup8\n        /* \"BarterswapRouter.sol\":3321:3327  _funds */\n      dup8\n        /* \"BarterswapRouter.sol\":3328:3335  _assets */\n      dup8\n        /* \"BarterswapRouter.sol\":3336:3342  _limit */\n      dup8\n        /* \"BarterswapRouter.sol\":3343:3352  _deadLine */\n      dup8\n        /* \"BarterswapRouter.sol\":3278:3353  ISwap(_rindex).filterBalancer(_kind,_swaps,_funds,_assets,_limit,_deadLine) */\n      mload(0x40)\n      dup8\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_263\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_263:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_265\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_265:\n      pop\n      pop\n      pop\n      pop\n        /* \"BarterswapRouter.sol\":3165:3610  if(_inputAddre == address(0)){... */\n      jump(tag_266)\n    tag_258:\n        /* \"BarterswapRouter.sol\":3389:3396  _rindex */\n      dup6\n        /* \"BarterswapRouter.sol\":3382:3405  IERC20(_rindex).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"BarterswapRouter.sol\":3406:3413  _rindex */\n      dup8\n        /* \"BarterswapRouter.sol\":3414:3420  _swaps */\n      dup8\n        /* \"BarterswapRouter.sol\":3421:3422  0 */\n      0x00\n        /* \"BarterswapRouter.sol\":3414:3423  _swaps[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_267\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_267:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"BarterswapRouter.sol\":3414:3430  _swaps[0].amount */\n      0x60\n      add\n      mload\n        /* \"BarterswapRouter.sol\":3382:3431  IERC20(_rindex).approve(_rindex,_swaps[0].amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap3\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_268:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_269\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_269:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_271\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_271:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_272\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_272:\n      pop\n        /* \"BarterswapRouter.sol\":3445:3510  TransferHelper.safeTransfer(_inputAddre,_rindex,_swaps[0].amount) */\n      tag_273\n        /* \"BarterswapRouter.sol\":3473:3484  _inputAddre */\n      dup8\n        /* \"BarterswapRouter.sol\":3485:3492  _rindex */\n      dup8\n        /* \"BarterswapRouter.sol\":3493:3499  _swaps */\n      dup8\n        /* \"BarterswapRouter.sol\":3500:3501  0 */\n      0x00\n        /* \"BarterswapRouter.sol\":3493:3502  _swaps[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_274\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_274:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"BarterswapRouter.sol\":3493:3509  _swaps[0].amount */\n      0x60\n      add\n      mload\n        /* \"BarterswapRouter.sol\":3445:3472  TransferHelper.safeTransfer */\n      tag_187\n        /* \"BarterswapRouter.sol\":3445:3510  TransferHelper.safeTransfer(_inputAddre,_rindex,_swaps[0].amount) */\n      jump\t// in\n    tag_273:\n        /* \"BarterswapRouter.sol\":3530:3537  _rindex */\n      dup6\n        /* \"BarterswapRouter.sol\":3524:3553  ISwap(_rindex).filterBalancer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1738b50e\n        /* \"BarterswapRouter.sol\":3554:3559  _kind */\n      dup10\n        /* \"BarterswapRouter.sol\":3560:3566  _swaps */\n      dup8\n        /* \"BarterswapRouter.sol\":3567:3573  _funds */\n      dup8\n        /* \"BarterswapRouter.sol\":3574:3581  _assets */\n      dup8\n        /* \"BarterswapRouter.sol\":3582:3588  _limit */\n      dup8\n        /* \"BarterswapRouter.sol\":3589:3598  _deadLine */\n      dup8\n        /* \"BarterswapRouter.sol\":3524:3599  ISwap(_rindex).filterBalancer(_kind,_swaps,_funds,_assets,_limit,_deadLine) */\n      mload(0x40)\n      dup8\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_275:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_276\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_276:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_278\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_278:\n      pop\n      pop\n      pop\n      pop\n        /* \"BarterswapRouter.sol\":3165:3610  if(_inputAddre == address(0)){... */\n    tag_266:\n        /* \"BarterswapRouter.sol\":2923:3616  function balancerSwap(IVault.SwapKind _kind, address _inputAddre,address _rindex,IVault.BatchSwapStep[] memory _swaps,IVault.FundManagement memory _funds, IAsset[] memory  _assets, int256[]  memory _limit,uint256 _deadLine) internal{... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BarterswapRouter.sol\":3974:4729  function AmmSeriSwap(address _rindex,uint256 _amountInArr,uint256 _amountOutMinArr,bytes memory _pathArr,address _to,uint256 _deadLine,address _inputAddre,address _outAddre) internal {... */\n    tag_153:\n        /* \"BarterswapRouter.sol\":4197:4198  0 */\n      0x00\n        /* \"BarterswapRouter.sol\":4174:4199  _inputAddre == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BarterswapRouter.sol\":4174:4185  _inputAddre */\n      dup3\n        /* \"BarterswapRouter.sol\":4174:4199  _inputAddre == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BarterswapRouter.sol\":4171:4723  if(_inputAddre == address(0)){... */\n      iszero\n      tag_280\n      jumpi\n        /* \"BarterswapRouter.sol\":4222:4274  TransferHelper.safeTransferETH(_rindex,_amountInArr) */\n      tag_281\n        /* \"BarterswapRouter.sol\":4253:4260  _rindex */\n      dup9\n        /* \"BarterswapRouter.sol\":4261:4273  _amountInArr */\n      dup9\n        /* \"BarterswapRouter.sol\":4222:4252  TransferHelper.safeTransferETH */\n      tag_97\n        /* \"BarterswapRouter.sol\":4222:4274  TransferHelper.safeTransferETH(_rindex,_amountInArr) */\n      jump\t// in\n    tag_281:\n        /* \"BarterswapRouter.sol\":4302:4309  _rindex */\n      dup8\n        /* \"BarterswapRouter.sol\":4296:4321  ISwap(_rindex).filterSwap */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb1a271d4\n        /* \"BarterswapRouter.sol\":4322:4334  _amountInArr */\n      dup9\n        /* \"BarterswapRouter.sol\":4335:4351  _amountOutMinArr */\n      dup9\n        /* \"BarterswapRouter.sol\":4352:4360  _pathArr */\n      dup9\n        /* \"BarterswapRouter.sol\":4361:4364  _to */\n      dup9\n        /* \"BarterswapRouter.sol\":4365:4374  _deadLine */\n      dup9\n        /* \"BarterswapRouter.sol\":4375:4386  _inputAddre */\n      dup9\n        /* \"BarterswapRouter.sol\":4387:4396  _outAddre */\n      dup9\n        /* \"BarterswapRouter.sol\":4296:4397  ISwap(_rindex).filterSwap(_amountInArr,_amountOutMinArr,_pathArr,_to,_deadLine,_inputAddre,_outAddre) */\n      mload(0x40)\n      dup9\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_284\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_284:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_286\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_286:\n      pop\n      pop\n      pop\n      pop\n        /* \"BarterswapRouter.sol\":4171:4723  if(_inputAddre == address(0)){... */\n      jump(tag_287)\n    tag_280:\n        /* \"BarterswapRouter.sol\":4455:4462  _rindex */\n      dup8\n        /* \"BarterswapRouter.sol\":4448:4471  IERC20(_rindex).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"BarterswapRouter.sol\":4472:4479  _rindex */\n      dup10\n        /* \"BarterswapRouter.sol\":4480:4492  _amountInArr */\n      dup10\n        /* \"BarterswapRouter.sol\":4448:4493  IERC20(_rindex).approve(_rindex,_amountInArr) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap3\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_288:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_289\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_289:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_291\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_291:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_292\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_292:\n      pop\n        /* \"BarterswapRouter.sol\":4515:4576  TransferHelper.safeTransfer(_inputAddre,_rindex,_amountInArr) */\n      tag_293\n        /* \"BarterswapRouter.sol\":4543:4554  _inputAddre */\n      dup3\n        /* \"BarterswapRouter.sol\":4555:4562  _rindex */\n      dup10\n        /* \"BarterswapRouter.sol\":4563:4575  _amountInArr */\n      dup10\n        /* \"BarterswapRouter.sol\":4515:4542  TransferHelper.safeTransfer */\n      tag_187\n        /* \"BarterswapRouter.sol\":4515:4576  TransferHelper.safeTransfer(_inputAddre,_rindex,_amountInArr) */\n      jump\t// in\n    tag_293:\n        /* \"BarterswapRouter.sol\":4604:4611  _rindex */\n      dup8\n        /* \"BarterswapRouter.sol\":4598:4623  ISwap(_rindex).filterSwap */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb1a271d4\n        /* \"BarterswapRouter.sol\":4624:4636  _amountInArr */\n      dup9\n        /* \"BarterswapRouter.sol\":4637:4653  _amountOutMinArr */\n      dup9\n        /* \"BarterswapRouter.sol\":4654:4662  _pathArr */\n      dup9\n        /* \"BarterswapRouter.sol\":4663:4666  _to */\n      dup9\n        /* \"BarterswapRouter.sol\":4667:4676  _deadLine */\n      dup9\n        /* \"BarterswapRouter.sol\":4677:4688  _inputAddre */\n      dup9\n        /* \"BarterswapRouter.sol\":4689:4698  _outAddre */\n      dup9\n        /* \"BarterswapRouter.sol\":4598:4699  ISwap(_rindex).filterSwap(_amountInArr,_amountOutMinArr,_pathArr,_to,_deadLine,_inputAddre,_outAddre) */\n      mload(0x40)\n      dup9\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_294:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_295\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_295:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_297\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_297:\n      pop\n      pop\n      pop\n      pop\n        /* \"BarterswapRouter.sol\":4171:4723  if(_inputAddre == address(0)){... */\n    tag_287:\n        /* \"BarterswapRouter.sol\":3974:4729  function AmmSeriSwap(address _rindex,uint256 _amountInArr,uint256 _amountOutMinArr,bytes memory _pathArr,address _to,uint256 _deadLine,address _inputAddre,address _outAddre) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libs/TransferHelper.sol\":589:1027  function safeTransfer(... */\n    tag_187:\n        /* \"libs/TransferHelper.sol\":769:781  bool success */\n      0x00\n        /* \"libs/TransferHelper.sol\":783:800  bytes memory data */\n      dup1\n        /* \"libs/TransferHelper.sol\":804:809  token */\n      dup5\n        /* \"libs/TransferHelper.sol\":804:814  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"libs/TransferHelper.sol\":838:848  0xa9059cbb */\n      0xa9059cbb\n        /* \"libs/TransferHelper.sol\":850:852  to */\n      dup6\n        /* \"libs/TransferHelper.sol\":854:859  value */\n      dup6\n        /* \"libs/TransferHelper.sol\":815:860  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      add(0x24, mload(0x40))\n      tag_299\n      swap3\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"libs/TransferHelper.sol\":804:861  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      mload(0x40)\n      tag_300\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_300:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_303\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_302)\n    tag_303:\n      0x60\n      swap2\n      pop\n    tag_302:\n      pop\n        /* \"libs/TransferHelper.sol\":768:861  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"libs/TransferHelper.sol\":892:899  success */\n      dup2\n        /* \"libs/TransferHelper.sol\":892:949  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_304\n      jumpi\n      pop\n        /* \"libs/TransferHelper.sol\":919:920  0 */\n      0x00\n        /* \"libs/TransferHelper.sol\":904:908  data */\n      dup2\n        /* \"libs/TransferHelper.sol\":904:915  data.length */\n      mload\n        /* \"libs/TransferHelper.sol\":904:920  data.length == 0 */\n      eq\n        /* \"libs/TransferHelper.sol\":904:948  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_305\n      jumpi\n      pop\n        /* \"libs/TransferHelper.sol\":935:939  data */\n      dup1\n        /* \"libs/TransferHelper.sol\":924:948  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_306\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_306:\n        /* \"libs/TransferHelper.sol\":904:948  data.length == 0 || abi.decode(data, (bool)) */\n    tag_305:\n        /* \"libs/TransferHelper.sol\":892:949  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_304:\n        /* \"libs/TransferHelper.sol\":871:1020  require(... */\n      tag_307\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap1\n      tag_309\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_307:\n        /* \"libs/TransferHelper.sol\":589:1027  function safeTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libs/SafeMath.sol\":3151:3423  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_218:\n        /* \"libs/SafeMath.sol\":3237:3244  uint256 */\n      0x00\n        /* \"libs/SafeMath.sol\":3268:3269  0 */\n      dup1\n        /* \"libs/SafeMath.sol\":3264:3265  b */\n      dup4\n        /* \"libs/SafeMath.sol\":3264:3269  b > 0 */\n      gt\n        /* \"libs/SafeMath.sol\":3271:3283  errorMessage */\n      dup3\n        /* \"libs/SafeMath.sol\":3256:3284  require(b > 0, errorMessage) */\n      swap1\n      tag_311\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_312\n      swap2\n      swap1\n      tag_313\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_311:\n      pop\n        /* \"libs/SafeMath.sol\":3294:3303  uint256 c */\n      0x00\n        /* \"libs/SafeMath.sol\":3310:3311  b */\n      dup4\n        /* \"libs/SafeMath.sol\":3306:3307  a */\n      dup6\n        /* \"libs/SafeMath.sol\":3306:3311  a / b */\n      tag_314\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_314:\n        /* \"libs/SafeMath.sol\":3294:3311  uint256 c = a / b */\n      swap1\n      pop\n        /* \"libs/SafeMath.sol\":3415:3416  c */\n      dup1\n        /* \"libs/SafeMath.sol\":3408:3416  return c */\n      swap2\n      pop\n      pop\n        /* \"libs/SafeMath.sol\":3151:3423  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":44:722   */\n    tag_316:\n      0x00\n        /* \"#utility.yul\":196:307   */\n      tag_318\n        /* \"#utility.yul\":211:306   */\n      tag_319\n        /* \"#utility.yul\":299:305   */\n      dup5\n        /* \"#utility.yul\":211:306   */\n      tag_320\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":196:307   */\n      tag_321\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":187:307   */\n      swap1\n      pop\n        /* \"#utility.yul\":327:332   */\n      dup1\n        /* \"#utility.yul\":355:361   */\n      dup4\n        /* \"#utility.yul\":348:353   */\n      dup3\n        /* \"#utility.yul\":341:362   */\n      mstore\n        /* \"#utility.yul\":381:385   */\n      0x20\n        /* \"#utility.yul\":374:379   */\n      dup3\n        /* \"#utility.yul\":370:386   */\n      add\n        /* \"#utility.yul\":363:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":406:412   */\n      dup3\n        /* \"#utility.yul\":437:438   */\n      0x00\n        /* \"#utility.yul\":422:716   */\n    tag_322:\n        /* \"#utility.yul\":447:453   */\n      dup6\n        /* \"#utility.yul\":444:445   */\n      dup2\n        /* \"#utility.yul\":441:454   */\n      lt\n        /* \"#utility.yul\":422:716   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":539:542   */\n      dup2\n        /* \"#utility.yul\":526:543   */\n      calldataload\n        /* \"#utility.yul\":518:524   */\n      dup6\n        /* \"#utility.yul\":514:544   */\n      add\n        /* \"#utility.yul\":569:637   */\n      tag_325\n        /* \"#utility.yul\":633:636   */\n      dup9\n        /* \"#utility.yul\":621:631   */\n      dup3\n        /* \"#utility.yul\":569:637   */\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":564:567   */\n      dup5\n        /* \"#utility.yul\":557:638   */\n      mstore\n        /* \"#utility.yul\":667:671   */\n      0x20\n        /* \"#utility.yul\":662:665   */\n      dup5\n        /* \"#utility.yul\":658:672   */\n      add\n        /* \"#utility.yul\":651:672   */\n      swap4\n      pop\n        /* \"#utility.yul\":701:705   */\n      0x20\n        /* \"#utility.yul\":696:699   */\n      dup4\n        /* \"#utility.yul\":692:706   */\n      add\n        /* \"#utility.yul\":685:706   */\n      swap3\n      pop\n        /* \"#utility.yul\":482:716   */\n      pop\n        /* \"#utility.yul\":469:470   */\n      0x01\n        /* \"#utility.yul\":466:467   */\n      dup2\n        /* \"#utility.yul\":462:471   */\n      add\n        /* \"#utility.yul\":457:471   */\n      swap1\n      pop\n        /* \"#utility.yul\":422:716   */\n      jump(tag_322)\n    tag_324:\n        /* \"#utility.yul\":426:440   */\n      pop\n        /* \"#utility.yul\":177:722   */\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:1367   */\n    tag_327:\n      0x00\n        /* \"#utility.yul\":866:946   */\n      tag_329\n        /* \"#utility.yul\":881:945   */\n      tag_330\n        /* \"#utility.yul\":938:944   */\n      dup5\n        /* \"#utility.yul\":881:945   */\n      tag_331\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":866:946   */\n      tag_321\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":857:946   */\n      swap1\n      pop\n        /* \"#utility.yul\":966:971   */\n      dup1\n        /* \"#utility.yul\":994:1000   */\n      dup4\n        /* \"#utility.yul\":987:992   */\n      dup3\n        /* \"#utility.yul\":980:1001   */\n      mstore\n        /* \"#utility.yul\":1020:1024   */\n      0x20\n        /* \"#utility.yul\":1013:1018   */\n      dup3\n        /* \"#utility.yul\":1009:1025   */\n      add\n        /* \"#utility.yul\":1002:1025   */\n      swap1\n      pop\n        /* \"#utility.yul\":1045:1051   */\n      dup3\n        /* \"#utility.yul\":1095:1098   */\n      dup6\n        /* \"#utility.yul\":1087:1091   */\n      0x20\n        /* \"#utility.yul\":1079:1085   */\n      dup7\n        /* \"#utility.yul\":1075:1092   */\n      mul\n        /* \"#utility.yul\":1070:1073   */\n      dup3\n        /* \"#utility.yul\":1066:1093   */\n      add\n        /* \"#utility.yul\":1063:1099   */\n      gt\n        /* \"#utility.yul\":1060:1062   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":1112:1113   */\n      0x00\n        /* \"#utility.yul\":1109:1110   */\n      dup1\n        /* \"#utility.yul\":1102:1114   */\n      revert\n        /* \"#utility.yul\":1060:1062   */\n    tag_332:\n        /* \"#utility.yul\":1140:1141   */\n      0x00\n        /* \"#utility.yul\":1125:1361   */\n    tag_333:\n        /* \"#utility.yul\":1150:1156   */\n      dup6\n        /* \"#utility.yul\":1147:1148   */\n      dup2\n        /* \"#utility.yul\":1144:1157   */\n      lt\n        /* \"#utility.yul\":1125:1361   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":1217:1220   */\n      dup2\n        /* \"#utility.yul\":1245:1282   */\n      tag_336\n        /* \"#utility.yul\":1278:1281   */\n      dup9\n        /* \"#utility.yul\":1266:1276   */\n      dup3\n        /* \"#utility.yul\":1245:1282   */\n      tag_337\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":1240:1243   */\n      dup5\n        /* \"#utility.yul\":1233:1283   */\n      mstore\n        /* \"#utility.yul\":1312:1316   */\n      0x20\n        /* \"#utility.yul\":1307:1310   */\n      dup5\n        /* \"#utility.yul\":1303:1317   */\n      add\n        /* \"#utility.yul\":1296:1317   */\n      swap4\n      pop\n        /* \"#utility.yul\":1346:1350   */\n      0x20\n        /* \"#utility.yul\":1341:1344   */\n      dup4\n        /* \"#utility.yul\":1337:1351   */\n      add\n        /* \"#utility.yul\":1330:1351   */\n      swap3\n      pop\n        /* \"#utility.yul\":1185:1361   */\n      pop\n        /* \"#utility.yul\":1172:1173   */\n      0x01\n        /* \"#utility.yul\":1169:1170   */\n      dup2\n        /* \"#utility.yul\":1165:1174   */\n      add\n        /* \"#utility.yul\":1160:1174   */\n      swap1\n      pop\n        /* \"#utility.yul\":1125:1361   */\n      jump(tag_333)\n    tag_335:\n        /* \"#utility.yul\":1129:1143   */\n      pop\n        /* \"#utility.yul\":847:1367   */\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1373:1715   */\n    tag_338:\n      0x00\n        /* \"#utility.yul\":1475:1539   */\n      tag_340\n        /* \"#utility.yul\":1490:1538   */\n      tag_341\n        /* \"#utility.yul\":1531:1537   */\n      dup5\n        /* \"#utility.yul\":1490:1538   */\n      tag_342\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":1475:1539   */\n      tag_321\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":1466:1539   */\n      swap1\n      pop\n        /* \"#utility.yul\":1562:1568   */\n      dup3\n        /* \"#utility.yul\":1555:1560   */\n      dup2\n        /* \"#utility.yul\":1548:1569   */\n      mstore\n        /* \"#utility.yul\":1600:1604   */\n      0x20\n        /* \"#utility.yul\":1593:1598   */\n      dup2\n        /* \"#utility.yul\":1589:1605   */\n      add\n        /* \"#utility.yul\":1638:1641   */\n      dup5\n        /* \"#utility.yul\":1629:1635   */\n      dup5\n        /* \"#utility.yul\":1624:1627   */\n      dup5\n        /* \"#utility.yul\":1620:1636   */\n      add\n        /* \"#utility.yul\":1617:1642   */\n      gt\n        /* \"#utility.yul\":1614:1616   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":1655:1656   */\n      0x00\n        /* \"#utility.yul\":1652:1653   */\n      dup1\n        /* \"#utility.yul\":1645:1657   */\n      revert\n        /* \"#utility.yul\":1614:1616   */\n    tag_343:\n        /* \"#utility.yul\":1668:1709   */\n      tag_344\n        /* \"#utility.yul\":1702:1708   */\n      dup5\n        /* \"#utility.yul\":1697:1700   */\n      dup3\n        /* \"#utility.yul\":1692:1695   */\n      dup6\n        /* \"#utility.yul\":1668:1709   */\n      tag_345\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":1456:1715   */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1721:1860   */\n    tag_346:\n      0x00\n        /* \"#utility.yul\":1805:1811   */\n      dup2\n        /* \"#utility.yul\":1792:1812   */\n      calldataload\n        /* \"#utility.yul\":1783:1812   */\n      swap1\n      pop\n        /* \"#utility.yul\":1821:1854   */\n      tag_348\n        /* \"#utility.yul\":1848:1853   */\n      dup2\n        /* \"#utility.yul\":1821:1854   */\n      tag_349\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":1773:1860   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1866:2009   */\n    tag_350:\n      0x00\n        /* \"#utility.yul\":1954:1960   */\n      dup2\n        /* \"#utility.yul\":1948:1961   */\n      mload\n        /* \"#utility.yul\":1939:1961   */\n      swap1\n      pop\n        /* \"#utility.yul\":1970:2003   */\n      tag_352\n        /* \"#utility.yul\":1997:2002   */\n      dup2\n        /* \"#utility.yul\":1970:2003   */\n      tag_349\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":1929:2009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2015:2170   */\n    tag_353:\n      0x00\n        /* \"#utility.yul\":2107:2113   */\n      dup2\n        /* \"#utility.yul\":2094:2114   */\n      calldataload\n        /* \"#utility.yul\":2085:2114   */\n      swap1\n      pop\n        /* \"#utility.yul\":2123:2164   */\n      tag_355\n        /* \"#utility.yul\":2158:2163   */\n      dup2\n        /* \"#utility.yul\":2123:2164   */\n      tag_356\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":2075:2170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2193:2496   */\n    tag_357:\n      0x00\n        /* \"#utility.yul\":2313:2316   */\n      dup3\n        /* \"#utility.yul\":2306:2310   */\n      0x1f\n        /* \"#utility.yul\":2298:2304   */\n      dup4\n        /* \"#utility.yul\":2294:2311   */\n      add\n        /* \"#utility.yul\":2290:2317   */\n      slt\n        /* \"#utility.yul\":2280:2282   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":2331:2332   */\n      0x00\n        /* \"#utility.yul\":2328:2329   */\n      dup1\n        /* \"#utility.yul\":2321:2333   */\n      revert\n        /* \"#utility.yul\":2280:2282   */\n    tag_359:\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2396:2490   */\n      tag_360\n        /* \"#utility.yul\":2486:2489   */\n      dup5\n        /* \"#utility.yul\":2478:2484   */\n      dup3\n        /* \"#utility.yul\":2471:2475   */\n      0x20\n        /* \"#utility.yul\":2463:2469   */\n      dup7\n        /* \"#utility.yul\":2459:2476   */\n      add\n        /* \"#utility.yul\":2396:2490   */\n      tag_327\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":2387:2490   */\n      swap2\n      pop\n        /* \"#utility.yul\":2270:2496   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2502:2635   */\n    tag_361:\n      0x00\n        /* \"#utility.yul\":2583:2589   */\n      dup2\n        /* \"#utility.yul\":2570:2590   */\n      calldataload\n        /* \"#utility.yul\":2561:2590   */\n      swap1\n      pop\n        /* \"#utility.yul\":2599:2629   */\n      tag_363\n        /* \"#utility.yul\":2623:2628   */\n      dup2\n        /* \"#utility.yul\":2599:2629   */\n      tag_364\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":2551:2635   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2641:2778   */\n    tag_365:\n      0x00\n        /* \"#utility.yul\":2726:2732   */\n      dup2\n        /* \"#utility.yul\":2720:2733   */\n      mload\n        /* \"#utility.yul\":2711:2733   */\n      swap1\n      pop\n        /* \"#utility.yul\":2742:2772   */\n      tag_367\n        /* \"#utility.yul\":2766:2771   */\n      dup2\n        /* \"#utility.yul\":2742:2772   */\n      tag_364\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":2701:2778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2784:2923   */\n    tag_368:\n      0x00\n        /* \"#utility.yul\":2868:2874   */\n      dup2\n        /* \"#utility.yul\":2855:2875   */\n      calldataload\n        /* \"#utility.yul\":2846:2875   */\n      swap1\n      pop\n        /* \"#utility.yul\":2884:2917   */\n      tag_370\n        /* \"#utility.yul\":2911:2916   */\n      dup2\n        /* \"#utility.yul\":2884:2917   */\n      tag_371\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":2836:2923   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2942:3213   */\n    tag_372:\n      0x00\n        /* \"#utility.yul\":3046:3049   */\n      dup3\n        /* \"#utility.yul\":3039:3043   */\n      0x1f\n        /* \"#utility.yul\":3031:3037   */\n      dup4\n        /* \"#utility.yul\":3027:3044   */\n      add\n        /* \"#utility.yul\":3023:3050   */\n      slt\n        /* \"#utility.yul\":3013:3015   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":3064:3065   */\n      0x00\n        /* \"#utility.yul\":3061:3062   */\n      dup1\n        /* \"#utility.yul\":3054:3066   */\n      revert\n        /* \"#utility.yul\":3013:3015   */\n    tag_374:\n        /* \"#utility.yul\":3104:3110   */\n      dup2\n        /* \"#utility.yul\":3091:3111   */\n      calldataload\n        /* \"#utility.yul\":3129:3207   */\n      tag_375\n        /* \"#utility.yul\":3203:3206   */\n      dup5\n        /* \"#utility.yul\":3195:3201   */\n      dup3\n        /* \"#utility.yul\":3188:3192   */\n      0x20\n        /* \"#utility.yul\":3180:3186   */\n      dup7\n        /* \"#utility.yul\":3176:3193   */\n      add\n        /* \"#utility.yul\":3129:3207   */\n      tag_338\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":3120:3207   */\n      swap2\n      pop\n        /* \"#utility.yul\":3003:3213   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3219:3384   */\n    tag_376:\n      0x00\n        /* \"#utility.yul\":3316:3322   */\n      dup2\n        /* \"#utility.yul\":3303:3323   */\n      calldataload\n        /* \"#utility.yul\":3294:3323   */\n      swap1\n      pop\n        /* \"#utility.yul\":3332:3378   */\n      tag_378\n        /* \"#utility.yul\":3372:3377   */\n      dup2\n        /* \"#utility.yul\":3332:3378   */\n      tag_379\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":3284:3384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3436:3604   */\n    tag_380:\n      0x00\n        /* \"#utility.yul\":3553:3556   */\n      0x0220\n        /* \"#utility.yul\":3544:3550   */\n      dup3\n        /* \"#utility.yul\":3539:3542   */\n      dup5\n        /* \"#utility.yul\":3535:3551   */\n      sub\n        /* \"#utility.yul\":3531:3557   */\n      slt\n        /* \"#utility.yul\":3528:3530   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":3570:3571   */\n      0x00\n        /* \"#utility.yul\":3567:3568   */\n      dup1\n        /* \"#utility.yul\":3560:3572   */\n      revert\n        /* \"#utility.yul\":3528:3530   */\n    tag_382:\n        /* \"#utility.yul\":3592:3598   */\n      dup2\n        /* \"#utility.yul\":3583:3598   */\n      swap1\n      pop\n        /* \"#utility.yul\":3518:3604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3645:4768   */\n    tag_326:\n      0x00\n        /* \"#utility.yul\":3769:3773   */\n      0xa0\n        /* \"#utility.yul\":3757:3766   */\n      dup3\n        /* \"#utility.yul\":3752:3755   */\n      dup5\n        /* \"#utility.yul\":3748:3767   */\n      sub\n        /* \"#utility.yul\":3744:3774   */\n      slt\n        /* \"#utility.yul\":3741:3743   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":3787:3788   */\n      0x00\n        /* \"#utility.yul\":3784:3785   */\n      dup1\n        /* \"#utility.yul\":3777:3789   */\n      revert\n        /* \"#utility.yul\":3741:3743   */\n    tag_384:\n        /* \"#utility.yul\":3809:3829   */\n      tag_385\n        /* \"#utility.yul\":3824:3828   */\n      0xa0\n        /* \"#utility.yul\":3809:3829   */\n      tag_321\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3800:3829   */\n      swap1\n      pop\n        /* \"#utility.yul\":3890:3891   */\n      0x00\n        /* \"#utility.yul\":3930:3979   */\n      tag_386\n        /* \"#utility.yul\":3975:3978   */\n      dup5\n        /* \"#utility.yul\":3966:3972   */\n      dup3\n        /* \"#utility.yul\":3955:3964   */\n      dup6\n        /* \"#utility.yul\":3951:3973   */\n      add\n        /* \"#utility.yul\":3930:3979   */\n      tag_368\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3923:3927   */\n      0x00\n        /* \"#utility.yul\":3916:3921   */\n      dup4\n        /* \"#utility.yul\":3912:3928   */\n      add\n        /* \"#utility.yul\":3905:3980   */\n      mstore\n        /* \"#utility.yul\":3839:3991   */\n      pop\n        /* \"#utility.yul\":4058:4060   */\n      0x20\n        /* \"#utility.yul\":4099:4148   */\n      tag_387\n        /* \"#utility.yul\":4144:4147   */\n      dup5\n        /* \"#utility.yul\":4135:4141   */\n      dup3\n        /* \"#utility.yul\":4124:4133   */\n      dup6\n        /* \"#utility.yul\":4120:4142   */\n      add\n        /* \"#utility.yul\":4099:4148   */\n      tag_337\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":4092:4096   */\n      0x20\n        /* \"#utility.yul\":4085:4090   */\n      dup4\n        /* \"#utility.yul\":4081:4097   */\n      add\n        /* \"#utility.yul\":4074:4149   */\n      mstore\n        /* \"#utility.yul\":4001:4160   */\n      pop\n        /* \"#utility.yul\":4228:4230   */\n      0x40\n        /* \"#utility.yul\":4269:4318   */\n      tag_388\n        /* \"#utility.yul\":4314:4317   */\n      dup5\n        /* \"#utility.yul\":4305:4311   */\n      dup3\n        /* \"#utility.yul\":4294:4303   */\n      dup6\n        /* \"#utility.yul\":4290:4312   */\n      add\n        /* \"#utility.yul\":4269:4318   */\n      tag_337\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":4262:4266   */\n      0x40\n        /* \"#utility.yul\":4255:4260   */\n      dup4\n        /* \"#utility.yul\":4251:4267   */\n      add\n        /* \"#utility.yul\":4244:4319   */\n      mstore\n        /* \"#utility.yul\":4170:4330   */\n      pop\n        /* \"#utility.yul\":4391:4393   */\n      0x60\n        /* \"#utility.yul\":4432:4481   */\n      tag_389\n        /* \"#utility.yul\":4477:4480   */\n      dup5\n        /* \"#utility.yul\":4468:4474   */\n      dup3\n        /* \"#utility.yul\":4457:4466   */\n      dup6\n        /* \"#utility.yul\":4453:4475   */\n      add\n        /* \"#utility.yul\":4432:4481   */\n      tag_337\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":4425:4429   */\n      0x60\n        /* \"#utility.yul\":4418:4423   */\n      dup4\n        /* \"#utility.yul\":4414:4430   */\n      add\n        /* \"#utility.yul\":4407:4482   */\n      mstore\n        /* \"#utility.yul\":4340:4493   */\n      pop\n        /* \"#utility.yul\":4584:4587   */\n      0x80\n        /* \"#utility.yul\":4573:4582   */\n      dup3\n        /* \"#utility.yul\":4569:4588   */\n      add\n        /* \"#utility.yul\":4556:4589   */\n      calldataload\n        /* \"#utility.yul\":4616:4634   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4608:4614   */\n      dup2\n        /* \"#utility.yul\":4605:4635   */\n      gt\n        /* \"#utility.yul\":4602:4604   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":4648:4649   */\n      0x00\n        /* \"#utility.yul\":4645:4646   */\n      dup1\n        /* \"#utility.yul\":4638:4650   */\n      revert\n        /* \"#utility.yul\":4602:4604   */\n    tag_390:\n        /* \"#utility.yul\":4691:4749   */\n      tag_391\n        /* \"#utility.yul\":4745:4748   */\n      dup5\n        /* \"#utility.yul\":4736:4742   */\n      dup3\n        /* \"#utility.yul\":4725:4734   */\n      dup6\n        /* \"#utility.yul\":4721:4743   */\n      add\n        /* \"#utility.yul\":4691:4749   */\n      tag_372\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":4684:4688   */\n      0x80\n        /* \"#utility.yul\":4677:4682   */\n      dup4\n        /* \"#utility.yul\":4673:4689   */\n      add\n        /* \"#utility.yul\":4666:4750   */\n      mstore\n        /* \"#utility.yul\":4503:4761   */\n      pop\n        /* \"#utility.yul\":3731:4768   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4810:5682   */\n    tag_392:\n      0x00\n        /* \"#utility.yul\":4935:4939   */\n      0x80\n        /* \"#utility.yul\":4923:4932   */\n      dup3\n        /* \"#utility.yul\":4918:4921   */\n      dup5\n        /* \"#utility.yul\":4914:4933   */\n      sub\n        /* \"#utility.yul\":4910:4940   */\n      slt\n        /* \"#utility.yul\":4907:4909   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":4953:4954   */\n      0x00\n        /* \"#utility.yul\":4950:4951   */\n      dup1\n        /* \"#utility.yul\":4943:4955   */\n      revert\n        /* \"#utility.yul\":4907:4909   */\n    tag_394:\n        /* \"#utility.yul\":4975:4995   */\n      tag_395\n        /* \"#utility.yul\":4990:4994   */\n      0x80\n        /* \"#utility.yul\":4975:4995   */\n      tag_321\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":4966:4995   */\n      swap1\n      pop\n        /* \"#utility.yul\":5056:5057   */\n      0x00\n        /* \"#utility.yul\":5096:5145   */\n      tag_396\n        /* \"#utility.yul\":5141:5144   */\n      dup5\n        /* \"#utility.yul\":5132:5138   */\n      dup3\n        /* \"#utility.yul\":5121:5130   */\n      dup6\n        /* \"#utility.yul\":5117:5139   */\n      add\n        /* \"#utility.yul\":5096:5145   */\n      tag_346\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":5089:5093   */\n      0x00\n        /* \"#utility.yul\":5082:5087   */\n      dup4\n        /* \"#utility.yul\":5078:5094   */\n      add\n        /* \"#utility.yul\":5071:5146   */\n      mstore\n        /* \"#utility.yul\":5005:5157   */\n      pop\n        /* \"#utility.yul\":5231:5233   */\n      0x20\n        /* \"#utility.yul\":5272:5318   */\n      tag_397\n        /* \"#utility.yul\":5314:5317   */\n      dup5\n        /* \"#utility.yul\":5305:5311   */\n      dup3\n        /* \"#utility.yul\":5294:5303   */\n      dup6\n        /* \"#utility.yul\":5290:5312   */\n      add\n        /* \"#utility.yul\":5272:5318   */\n      tag_361\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":5265:5269   */\n      0x20\n        /* \"#utility.yul\":5258:5263   */\n      dup4\n        /* \"#utility.yul\":5254:5270   */\n      add\n        /* \"#utility.yul\":5247:5319   */\n      mstore\n        /* \"#utility.yul\":5167:5330   */\n      pop\n        /* \"#utility.yul\":5394:5396   */\n      0x40\n        /* \"#utility.yul\":5435:5492   */\n      tag_398\n        /* \"#utility.yul\":5488:5491   */\n      dup5\n        /* \"#utility.yul\":5479:5485   */\n      dup3\n        /* \"#utility.yul\":5468:5477   */\n      dup6\n        /* \"#utility.yul\":5464:5486   */\n      add\n        /* \"#utility.yul\":5435:5492   */\n      tag_353\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":5428:5432   */\n      0x40\n        /* \"#utility.yul\":5421:5426   */\n      dup4\n        /* \"#utility.yul\":5417:5433   */\n      add\n        /* \"#utility.yul\":5410:5493   */\n      mstore\n        /* \"#utility.yul\":5340:5504   */\n      pop\n        /* \"#utility.yul\":5576:5578   */\n      0x60\n        /* \"#utility.yul\":5617:5663   */\n      tag_399\n        /* \"#utility.yul\":5659:5662   */\n      dup5\n        /* \"#utility.yul\":5650:5656   */\n      dup3\n        /* \"#utility.yul\":5639:5648   */\n      dup6\n        /* \"#utility.yul\":5635:5657   */\n      add\n        /* \"#utility.yul\":5617:5663   */\n      tag_361\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":5610:5614   */\n      0x60\n        /* \"#utility.yul\":5603:5608   */\n      dup4\n        /* \"#utility.yul\":5599:5615   */\n      add\n        /* \"#utility.yul\":5592:5664   */\n      mstore\n        /* \"#utility.yul\":5514:5675   */\n      pop\n        /* \"#utility.yul\":4897:5682   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5688:5827   */\n    tag_337:\n      0x00\n        /* \"#utility.yul\":5772:5778   */\n      dup2\n        /* \"#utility.yul\":5759:5779   */\n      calldataload\n        /* \"#utility.yul\":5750:5779   */\n      swap1\n      pop\n        /* \"#utility.yul\":5788:5821   */\n      tag_401\n        /* \"#utility.yul\":5815:5820   */\n      dup2\n        /* \"#utility.yul\":5788:5821   */\n      tag_402\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":5740:5827   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5833:6095   */\n    tag_43:\n      0x00\n        /* \"#utility.yul\":5941:5943   */\n      0x20\n        /* \"#utility.yul\":5929:5938   */\n      dup3\n        /* \"#utility.yul\":5920:5927   */\n      dup5\n        /* \"#utility.yul\":5916:5939   */\n      sub\n        /* \"#utility.yul\":5912:5944   */\n      slt\n        /* \"#utility.yul\":5909:5911   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":5957:5958   */\n      0x00\n        /* \"#utility.yul\":5954:5955   */\n      dup1\n        /* \"#utility.yul\":5947:5959   */\n      revert\n        /* \"#utility.yul\":5909:5911   */\n    tag_404:\n        /* \"#utility.yul\":6000:6001   */\n      0x00\n        /* \"#utility.yul\":6025:6078   */\n      tag_405\n        /* \"#utility.yul\":6070:6077   */\n      dup5\n        /* \"#utility.yul\":6061:6067   */\n      dup3\n        /* \"#utility.yul\":6050:6059   */\n      dup6\n        /* \"#utility.yul\":6046:6068   */\n      add\n        /* \"#utility.yul\":6025:6078   */\n      tag_346\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":6015:6078   */\n      swap2\n      pop\n        /* \"#utility.yul\":5971:6088   */\n      pop\n        /* \"#utility.yul\":5899:6095   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6101:6385   */\n    tag_169:\n      0x00\n        /* \"#utility.yul\":6220:6222   */\n      0x20\n        /* \"#utility.yul\":6208:6217   */\n      dup3\n        /* \"#utility.yul\":6199:6206   */\n      dup5\n        /* \"#utility.yul\":6195:6218   */\n      sub\n        /* \"#utility.yul\":6191:6223   */\n      slt\n        /* \"#utility.yul\":6188:6190   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":6236:6237   */\n      0x00\n        /* \"#utility.yul\":6233:6234   */\n      dup1\n        /* \"#utility.yul\":6226:6238   */\n      revert\n        /* \"#utility.yul\":6188:6190   */\n    tag_407:\n        /* \"#utility.yul\":6279:6280   */\n      0x00\n        /* \"#utility.yul\":6304:6368   */\n      tag_408\n        /* \"#utility.yul\":6360:6367   */\n      dup5\n        /* \"#utility.yul\":6351:6357   */\n      dup3\n        /* \"#utility.yul\":6340:6349   */\n      dup6\n        /* \"#utility.yul\":6336:6358   */\n      add\n        /* \"#utility.yul\":6304:6368   */\n      tag_350\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":6294:6368   */\n      swap2\n      pop\n        /* \"#utility.yul\":6250:6378   */\n      pop\n        /* \"#utility.yul\":6178:6385   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6391:6669   */\n    tag_67:\n      0x00\n        /* \"#utility.yul\":6507:6509   */\n      0x20\n        /* \"#utility.yul\":6495:6504   */\n      dup3\n        /* \"#utility.yul\":6486:6493   */\n      dup5\n        /* \"#utility.yul\":6482:6505   */\n      sub\n        /* \"#utility.yul\":6478:6510   */\n      slt\n        /* \"#utility.yul\":6475:6477   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":6523:6524   */\n      0x00\n        /* \"#utility.yul\":6520:6521   */\n      dup1\n        /* \"#utility.yul\":6513:6525   */\n      revert\n        /* \"#utility.yul\":6475:6477   */\n    tag_410:\n        /* \"#utility.yul\":6566:6567   */\n      0x00\n        /* \"#utility.yul\":6591:6652   */\n      tag_411\n        /* \"#utility.yul\":6644:6651   */\n      dup5\n        /* \"#utility.yul\":6635:6641   */\n      dup3\n        /* \"#utility.yul\":6624:6633   */\n      dup6\n        /* \"#utility.yul\":6620:6642   */\n      add\n        /* \"#utility.yul\":6591:6652   */\n      tag_353\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":6581:6652   */\n      swap2\n      pop\n        /* \"#utility.yul\":6537:6662   */\n      pop\n        /* \"#utility.yul\":6465:6669   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6675:7080   */\n    tag_78:\n      0x00\n        /* \"#utility.yul\":6808:6810   */\n      0x20\n        /* \"#utility.yul\":6796:6805   */\n      dup3\n        /* \"#utility.yul\":6787:6794   */\n      dup5\n        /* \"#utility.yul\":6783:6806   */\n      sub\n        /* \"#utility.yul\":6779:6811   */\n      slt\n        /* \"#utility.yul\":6776:6778   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":6824:6825   */\n      0x00\n        /* \"#utility.yul\":6821:6822   */\n      dup1\n        /* \"#utility.yul\":6814:6826   */\n      revert\n        /* \"#utility.yul\":6776:6778   */\n    tag_413:\n        /* \"#utility.yul\":6895:6896   */\n      0x00\n        /* \"#utility.yul\":6884:6893   */\n      dup3\n        /* \"#utility.yul\":6880:6897   */\n      add\n        /* \"#utility.yul\":6867:6898   */\n      calldataload\n        /* \"#utility.yul\":6925:6943   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6917:6923   */\n      dup2\n        /* \"#utility.yul\":6914:6944   */\n      gt\n        /* \"#utility.yul\":6911:6913   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":6957:6958   */\n      0x00\n        /* \"#utility.yul\":6954:6955   */\n      dup1\n        /* \"#utility.yul\":6947:6959   */\n      revert\n        /* \"#utility.yul\":6911:6913   */\n    tag_414:\n        /* \"#utility.yul\":6985:7063   */\n      tag_415\n        /* \"#utility.yul\":7055:7062   */\n      dup5\n        /* \"#utility.yul\":7046:7052   */\n      dup3\n        /* \"#utility.yul\":7035:7044   */\n      dup6\n        /* \"#utility.yul\":7031:7053   */\n      add\n        /* \"#utility.yul\":6985:7063   */\n      tag_357\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":6975:7063   */\n      swap2\n      pop\n        /* \"#utility.yul\":6838:7073   */\n      pop\n        /* \"#utility.yul\":6766:7080   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7086:7364   */\n    tag_240:\n      0x00\n        /* \"#utility.yul\":7202:7204   */\n      0x20\n        /* \"#utility.yul\":7190:7199   */\n      dup3\n        /* \"#utility.yul\":7181:7188   */\n      dup5\n        /* \"#utility.yul\":7177:7200   */\n      sub\n        /* \"#utility.yul\":7173:7205   */\n      slt\n        /* \"#utility.yul\":7170:7172   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":7218:7219   */\n      0x00\n        /* \"#utility.yul\":7215:7216   */\n      dup1\n        /* \"#utility.yul\":7208:7220   */\n      revert\n        /* \"#utility.yul\":7170:7172   */\n    tag_417:\n        /* \"#utility.yul\":7261:7262   */\n      0x00\n        /* \"#utility.yul\":7286:7347   */\n      tag_418\n        /* \"#utility.yul\":7339:7346   */\n      dup5\n        /* \"#utility.yul\":7330:7336   */\n      dup3\n        /* \"#utility.yul\":7319:7328   */\n      dup6\n        /* \"#utility.yul\":7315:7337   */\n      add\n        /* \"#utility.yul\":7286:7347   */\n      tag_365\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":7276:7347   */\n      swap2\n      pop\n        /* \"#utility.yul\":7232:7357   */\n      pop\n        /* \"#utility.yul\":7160:7364   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7370:7658   */\n    tag_127:\n      0x00\n        /* \"#utility.yul\":7491:7493   */\n      0x20\n        /* \"#utility.yul\":7479:7488   */\n      dup3\n        /* \"#utility.yul\":7470:7477   */\n      dup5\n        /* \"#utility.yul\":7466:7489   */\n      sub\n        /* \"#utility.yul\":7462:7494   */\n      slt\n        /* \"#utility.yul\":7459:7461   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":7507:7508   */\n      0x00\n        /* \"#utility.yul\":7504:7505   */\n      dup1\n        /* \"#utility.yul\":7497:7509   */\n      revert\n        /* \"#utility.yul\":7459:7461   */\n    tag_420:\n        /* \"#utility.yul\":7550:7551   */\n      0x00\n        /* \"#utility.yul\":7575:7641   */\n      tag_421\n        /* \"#utility.yul\":7633:7640   */\n      dup5\n        /* \"#utility.yul\":7624:7630   */\n      dup3\n        /* \"#utility.yul\":7613:7622   */\n      dup6\n        /* \"#utility.yul\":7609:7631   */\n      add\n        /* \"#utility.yul\":7575:7641   */\n      tag_376\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":7565:7641   */\n      swap2\n      pop\n        /* \"#utility.yul\":7521:7651   */\n      pop\n        /* \"#utility.yul\":7449:7658   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7664:8079   */\n    tag_25:\n      0x00\n        /* \"#utility.yul\":7802:7804   */\n      0x20\n        /* \"#utility.yul\":7790:7799   */\n      dup3\n        /* \"#utility.yul\":7781:7788   */\n      dup5\n        /* \"#utility.yul\":7777:7800   */\n      sub\n        /* \"#utility.yul\":7773:7805   */\n      slt\n        /* \"#utility.yul\":7770:7772   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":7818:7819   */\n      0x00\n        /* \"#utility.yul\":7815:7816   */\n      dup1\n        /* \"#utility.yul\":7808:7820   */\n      revert\n        /* \"#utility.yul\":7770:7772   */\n    tag_423:\n        /* \"#utility.yul\":7889:7890   */\n      0x00\n        /* \"#utility.yul\":7878:7887   */\n      dup3\n        /* \"#utility.yul\":7874:7891   */\n      add\n        /* \"#utility.yul\":7861:7892   */\n      calldataload\n        /* \"#utility.yul\":7919:7937   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7911:7917   */\n      dup2\n        /* \"#utility.yul\":7908:7938   */\n      gt\n        /* \"#utility.yul\":7905:7907   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":7951:7952   */\n      0x00\n        /* \"#utility.yul\":7948:7949   */\n      dup1\n        /* \"#utility.yul\":7941:7953   */\n      revert\n        /* \"#utility.yul\":7905:7907   */\n    tag_424:\n        /* \"#utility.yul\":7979:8062   */\n      tag_425\n        /* \"#utility.yul\":8054:8061   */\n      dup5\n        /* \"#utility.yul\":8045:8051   */\n      dup3\n        /* \"#utility.yul\":8034:8043   */\n      dup6\n        /* \"#utility.yul\":8030:8052   */\n      add\n        /* \"#utility.yul\":7979:8062   */\n      tag_380\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":7969:8062   */\n      swap2\n      pop\n        /* \"#utility.yul\":7832:8072   */\n      pop\n        /* \"#utility.yul\":7760:8079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8085:8412   */\n    tag_134:\n      0x00\n        /* \"#utility.yul\":8225:8228   */\n      0x80\n        /* \"#utility.yul\":8213:8222   */\n      dup3\n        /* \"#utility.yul\":8204:8211   */\n      dup5\n        /* \"#utility.yul\":8200:8223   */\n      sub\n        /* \"#utility.yul\":8196:8229   */\n      slt\n        /* \"#utility.yul\":8193:8195   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8239:8240   */\n      dup1\n        /* \"#utility.yul\":8232:8244   */\n      revert\n        /* \"#utility.yul\":8193:8195   */\n    tag_427:\n        /* \"#utility.yul\":8285:8286   */\n      0x00\n        /* \"#utility.yul\":8310:8395   */\n      tag_428\n        /* \"#utility.yul\":8387:8394   */\n      dup5\n        /* \"#utility.yul\":8378:8384   */\n      dup3\n        /* \"#utility.yul\":8367:8376   */\n      dup6\n        /* \"#utility.yul\":8363:8385   */\n      add\n        /* \"#utility.yul\":8310:8395   */\n      tag_392\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":8300:8395   */\n      swap2\n      pop\n        /* \"#utility.yul\":8256:8405   */\n      pop\n        /* \"#utility.yul\":8183:8412   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8418:8680   */\n    tag_30:\n      0x00\n        /* \"#utility.yul\":8526:8528   */\n      0x20\n        /* \"#utility.yul\":8514:8523   */\n      dup3\n        /* \"#utility.yul\":8505:8512   */\n      dup5\n        /* \"#utility.yul\":8501:8524   */\n      sub\n        /* \"#utility.yul\":8497:8529   */\n      slt\n        /* \"#utility.yul\":8494:8496   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":8542:8543   */\n      0x00\n        /* \"#utility.yul\":8539:8540   */\n      dup1\n        /* \"#utility.yul\":8532:8544   */\n      revert\n        /* \"#utility.yul\":8494:8496   */\n    tag_430:\n        /* \"#utility.yul\":8585:8586   */\n      0x00\n        /* \"#utility.yul\":8610:8663   */\n      tag_431\n        /* \"#utility.yul\":8655:8662   */\n      dup5\n        /* \"#utility.yul\":8646:8652   */\n      dup3\n        /* \"#utility.yul\":8635:8644   */\n      dup6\n        /* \"#utility.yul\":8631:8653   */\n      add\n        /* \"#utility.yul\":8610:8663   */\n      tag_337\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":8600:8663   */\n      swap2\n      pop\n        /* \"#utility.yul\":8556:8673   */\n      pop\n        /* \"#utility.yul\":8484:8680   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8686:9093   */\n    tag_62:\n      0x00\n      dup1\n        /* \"#utility.yul\":8811:8813   */\n      0x40\n        /* \"#utility.yul\":8799:8808   */\n      dup4\n        /* \"#utility.yul\":8790:8797   */\n      dup6\n        /* \"#utility.yul\":8786:8809   */\n      sub\n        /* \"#utility.yul\":8782:8814   */\n      slt\n        /* \"#utility.yul\":8779:8781   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":8827:8828   */\n      0x00\n        /* \"#utility.yul\":8824:8825   */\n      dup1\n        /* \"#utility.yul\":8817:8829   */\n      revert\n        /* \"#utility.yul\":8779:8781   */\n    tag_433:\n        /* \"#utility.yul\":8870:8871   */\n      0x00\n        /* \"#utility.yul\":8895:8948   */\n      tag_434\n        /* \"#utility.yul\":8940:8947   */\n      dup6\n        /* \"#utility.yul\":8931:8937   */\n      dup3\n        /* \"#utility.yul\":8920:8929   */\n      dup7\n        /* \"#utility.yul\":8916:8938   */\n      add\n        /* \"#utility.yul\":8895:8948   */\n      tag_337\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":8885:8948   */\n      swap3\n      pop\n        /* \"#utility.yul\":8841:8958   */\n      pop\n        /* \"#utility.yul\":8997:8999   */\n      0x20\n        /* \"#utility.yul\":9023:9076   */\n      tag_435\n        /* \"#utility.yul\":9068:9075   */\n      dup6\n        /* \"#utility.yul\":9059:9065   */\n      dup3\n        /* \"#utility.yul\":9048:9057   */\n      dup7\n        /* \"#utility.yul\":9044:9066   */\n      add\n        /* \"#utility.yul\":9023:9076   */\n      tag_346\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":9013:9076   */\n      swap2\n      pop\n        /* \"#utility.yul\":8968:9086   */\n      pop\n        /* \"#utility.yul\":8769:9093   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9099:9306   */\n    tag_436:\n      0x00\n        /* \"#utility.yul\":9203:9263   */\n      tag_438\n        /* \"#utility.yul\":9259:9262   */\n      dup4\n        /* \"#utility.yul\":9251:9257   */\n      dup4\n        /* \"#utility.yul\":9203:9263   */\n      tag_439\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":9295:9299   */\n      0x20\n        /* \"#utility.yul\":9290:9293   */\n      dup4\n        /* \"#utility.yul\":9286:9300   */\n      add\n        /* \"#utility.yul\":9272:9300   */\n      swap1\n      pop\n        /* \"#utility.yul\":9193:9306   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9312:9487   */\n    tag_440:\n      0x00\n        /* \"#utility.yul\":9400:9444   */\n      tag_442\n        /* \"#utility.yul\":9440:9443   */\n      dup4\n        /* \"#utility.yul\":9432:9438   */\n      dup4\n        /* \"#utility.yul\":9400:9444   */\n      tag_443\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":9476:9480   */\n      0x20\n        /* \"#utility.yul\":9471:9474   */\n      dup4\n        /* \"#utility.yul\":9467:9481   */\n      add\n        /* \"#utility.yul\":9453:9481   */\n      swap1\n      pop\n        /* \"#utility.yul\":9390:9487   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9493:9773   */\n    tag_444:\n      0x00\n        /* \"#utility.yul\":9659:9767   */\n      tag_446\n        /* \"#utility.yul\":9763:9766   */\n      dup4\n        /* \"#utility.yul\":9755:9761   */\n      dup4\n        /* \"#utility.yul\":9659:9767   */\n      tag_447\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":9645:9767   */\n      swap1\n      pop\n        /* \"#utility.yul\":9635:9773   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9779:9958   */\n    tag_448:\n      0x00\n        /* \"#utility.yul\":9869:9915   */\n      tag_450\n        /* \"#utility.yul\":9911:9914   */\n      dup4\n        /* \"#utility.yul\":9903:9909   */\n      dup4\n        /* \"#utility.yul\":9869:9915   */\n      tag_451\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":9947:9951   */\n      0x20\n        /* \"#utility.yul\":9942:9945   */\n      dup4\n        /* \"#utility.yul\":9938:9952   */\n      add\n        /* \"#utility.yul\":9924:9952   */\n      swap1\n      pop\n        /* \"#utility.yul\":9859:9958   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9964:10096   */\n    tag_452:\n        /* \"#utility.yul\":10057:10089   */\n      tag_454\n        /* \"#utility.yul\":10083:10088   */\n      dup2\n        /* \"#utility.yul\":10057:10089   */\n      tag_455\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":10052:10055   */\n      dup3\n        /* \"#utility.yul\":10045:10090   */\n      mstore\n        /* \"#utility.yul\":10035:10096   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10102:10244   */\n    tag_456:\n        /* \"#utility.yul\":10205:10237   */\n      tag_458\n        /* \"#utility.yul\":10231:10236   */\n      dup2\n        /* \"#utility.yul\":10205:10237   */\n      tag_455\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":10200:10203   */\n      dup3\n        /* \"#utility.yul\":10193:10238   */\n      mstore\n        /* \"#utility.yul\":10183:10244   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10250:10358   */\n    tag_459:\n        /* \"#utility.yul\":10327:10351   */\n      tag_461\n        /* \"#utility.yul\":10345:10350   */\n      dup2\n        /* \"#utility.yul\":10327:10351   */\n      tag_462\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10322:10325   */\n      dup3\n        /* \"#utility.yul\":10315:10352   */\n      mstore\n        /* \"#utility.yul\":10305:10358   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10364:10482   */\n    tag_463:\n        /* \"#utility.yul\":10451:10475   */\n      tag_465\n        /* \"#utility.yul\":10469:10474   */\n      dup2\n        /* \"#utility.yul\":10451:10475   */\n      tag_462\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":10446:10449   */\n      dup3\n        /* \"#utility.yul\":10439:10476   */\n      mstore\n        /* \"#utility.yul\":10429:10482   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10526:11328   */\n    tag_466:\n      0x00\n        /* \"#utility.yul\":10688:10756   */\n      tag_468\n        /* \"#utility.yul\":10750:10755   */\n      dup3\n        /* \"#utility.yul\":10688:10756   */\n      tag_469\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":10772:10858   */\n      tag_470\n        /* \"#utility.yul\":10851:10857   */\n      dup2\n        /* \"#utility.yul\":10846:10849   */\n      dup6\n        /* \"#utility.yul\":10772:10858   */\n      tag_471\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":10765:10858   */\n      swap4\n      pop\n        /* \"#utility.yul\":10882:10952   */\n      tag_472\n        /* \"#utility.yul\":10946:10951   */\n      dup4\n        /* \"#utility.yul\":10882:10952   */\n      tag_473\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":10975:10982   */\n      dup1\n        /* \"#utility.yul\":11006:11007   */\n      0x00\n        /* \"#utility.yul\":10991:11303   */\n    tag_474:\n        /* \"#utility.yul\":11016:11022   */\n      dup4\n        /* \"#utility.yul\":11013:11014   */\n      dup2\n        /* \"#utility.yul\":11010:11023   */\n      lt\n        /* \"#utility.yul\":10991:11303   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":11092:11098   */\n      dup2\n        /* \"#utility.yul\":11086:11099   */\n      mload\n        /* \"#utility.yul\":11119:11196   */\n      tag_477\n        /* \"#utility.yul\":11192:11195   */\n      dup9\n        /* \"#utility.yul\":11177:11190   */\n      dup3\n        /* \"#utility.yul\":11119:11196   */\n      tag_436\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":11112:11196   */\n      swap8\n      pop\n        /* \"#utility.yul\":11219:11293   */\n      tag_478\n        /* \"#utility.yul\":11286:11292   */\n      dup4\n        /* \"#utility.yul\":11219:11293   */\n      tag_479\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":11209:11293   */\n      swap3\n      pop\n        /* \"#utility.yul\":11051:11303   */\n      pop\n        /* \"#utility.yul\":11038:11039   */\n      0x01\n        /* \"#utility.yul\":11035:11036   */\n      dup2\n        /* \"#utility.yul\":11031:11040   */\n      add\n        /* \"#utility.yul\":11026:11040   */\n      swap1\n      pop\n        /* \"#utility.yul\":10991:11303   */\n      jump(tag_474)\n    tag_476:\n        /* \"#utility.yul\":10995:11009   */\n      pop\n        /* \"#utility.yul\":11319:11322   */\n      dup6\n        /* \"#utility.yul\":11312:11322   */\n      swap4\n      pop\n        /* \"#utility.yul\":10664:11328   */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11362:12086   */\n    tag_480:\n      0x00\n        /* \"#utility.yul\":11508:11561   */\n      tag_482\n        /* \"#utility.yul\":11555:11560   */\n      dup3\n        /* \"#utility.yul\":11508:11561   */\n      tag_483\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":11577:11662   */\n      tag_484\n        /* \"#utility.yul\":11655:11661   */\n      dup2\n        /* \"#utility.yul\":11650:11653   */\n      dup6\n        /* \"#utility.yul\":11577:11662   */\n      tag_485\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":11570:11662   */\n      swap4\n      pop\n        /* \"#utility.yul\":11686:11741   */\n      tag_486\n        /* \"#utility.yul\":11735:11740   */\n      dup4\n        /* \"#utility.yul\":11686:11741   */\n      tag_487\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":11764:11771   */\n      dup1\n        /* \"#utility.yul\":11795:11796   */\n      0x00\n        /* \"#utility.yul\":11780:12061   */\n    tag_488:\n        /* \"#utility.yul\":11805:11811   */\n      dup4\n        /* \"#utility.yul\":11802:11803   */\n      dup2\n        /* \"#utility.yul\":11799:11812   */\n      lt\n        /* \"#utility.yul\":11780:12061   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":11881:11887   */\n      dup2\n        /* \"#utility.yul\":11875:11888   */\n      mload\n        /* \"#utility.yul\":11908:11969   */\n      tag_491\n        /* \"#utility.yul\":11965:11968   */\n      dup9\n        /* \"#utility.yul\":11950:11963   */\n      dup3\n        /* \"#utility.yul\":11908:11969   */\n      tag_440\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":11901:11969   */\n      swap8\n      pop\n        /* \"#utility.yul\":11992:12051   */\n      tag_492\n        /* \"#utility.yul\":12044:12050   */\n      dup4\n        /* \"#utility.yul\":11992:12051   */\n      tag_493\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":11982:12051   */\n      swap3\n      pop\n        /* \"#utility.yul\":11840:12061   */\n      pop\n        /* \"#utility.yul\":11827:11828   */\n      0x01\n        /* \"#utility.yul\":11824:11825   */\n      dup2\n        /* \"#utility.yul\":11820:11829   */\n      add\n        /* \"#utility.yul\":11815:11829   */\n      swap1\n      pop\n        /* \"#utility.yul\":11780:12061   */\n      jump(tag_488)\n    tag_490:\n        /* \"#utility.yul\":11784:11798   */\n      pop\n        /* \"#utility.yul\":12077:12080   */\n      dup6\n        /* \"#utility.yul\":12070:12080   */\n      swap4\n      pop\n        /* \"#utility.yul\":11484:12086   */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12162:13321   */\n    tag_494:\n      0x00\n        /* \"#utility.yul\":12372:12457   */\n      tag_496\n        /* \"#utility.yul\":12451:12456   */\n      dup3\n        /* \"#utility.yul\":12372:12457   */\n      tag_497\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":12473:12590   */\n      tag_498\n        /* \"#utility.yul\":12583:12589   */\n      dup2\n        /* \"#utility.yul\":12578:12581   */\n      dup6\n        /* \"#utility.yul\":12473:12590   */\n      tag_499\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":12466:12590   */\n      swap4\n      pop\n        /* \"#utility.yul\":12616:12619   */\n      dup4\n        /* \"#utility.yul\":12661:12665   */\n      0x20\n        /* \"#utility.yul\":12653:12659   */\n      dup3\n        /* \"#utility.yul\":12649:12666   */\n      mul\n        /* \"#utility.yul\":12644:12647   */\n      dup6\n        /* \"#utility.yul\":12640:12667   */\n      add\n        /* \"#utility.yul\":12691:12778   */\n      tag_500\n        /* \"#utility.yul\":12772:12777   */\n      dup6\n        /* \"#utility.yul\":12691:12778   */\n      tag_501\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":12801:12808   */\n      dup1\n        /* \"#utility.yul\":12832:12833   */\n      0x00\n        /* \"#utility.yul\":12817:13276   */\n    tag_502:\n        /* \"#utility.yul\":12842:12848   */\n      dup6\n        /* \"#utility.yul\":12839:12840   */\n      dup2\n        /* \"#utility.yul\":12836:12849   */\n      lt\n        /* \"#utility.yul\":12817:13276   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":12913:12922   */\n      dup5\n        /* \"#utility.yul\":12907:12911   */\n      dup5\n        /* \"#utility.yul\":12903:12923   */\n      sub\n        /* \"#utility.yul\":12898:12901   */\n      dup10\n        /* \"#utility.yul\":12891:12924   */\n      mstore\n        /* \"#utility.yul\":12964:12970   */\n      dup2\n        /* \"#utility.yul\":12958:12971   */\n      mload\n        /* \"#utility.yul\":12992:13118   */\n      tag_505\n        /* \"#utility.yul\":13113:13117   */\n      dup6\n        /* \"#utility.yul\":13098:13111   */\n      dup3\n        /* \"#utility.yul\":12992:13118   */\n      tag_444\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":12984:13118   */\n      swap5\n      pop\n        /* \"#utility.yul\":13141:13232   */\n      tag_506\n        /* \"#utility.yul\":13225:13231   */\n      dup4\n        /* \"#utility.yul\":13141:13232   */\n      tag_507\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":13131:13232   */\n      swap3\n      pop\n        /* \"#utility.yul\":13261:13265   */\n      0x20\n        /* \"#utility.yul\":13256:13259   */\n      dup11\n        /* \"#utility.yul\":13252:13266   */\n      add\n        /* \"#utility.yul\":13245:13266   */\n      swap10\n      pop\n        /* \"#utility.yul\":12877:13276   */\n      pop\n        /* \"#utility.yul\":12864:12865   */\n      0x01\n        /* \"#utility.yul\":12861:12862   */\n      dup2\n        /* \"#utility.yul\":12857:12866   */\n      add\n        /* \"#utility.yul\":12852:12866   */\n      swap1\n      pop\n        /* \"#utility.yul\":12817:13276   */\n      jump(tag_502)\n    tag_504:\n        /* \"#utility.yul\":12821:12835   */\n      pop\n        /* \"#utility.yul\":13292:13296   */\n      dup3\n        /* \"#utility.yul\":13285:13296   */\n      swap8\n      pop\n        /* \"#utility.yul\":13312:13315   */\n      dup8\n        /* \"#utility.yul\":13305:13315   */\n      swap6\n      pop\n        /* \"#utility.yul\":12348:13321   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13357:14089   */\n    tag_508:\n      0x00\n        /* \"#utility.yul\":13505:13559   */\n      tag_510\n        /* \"#utility.yul\":13553:13558   */\n      dup3\n        /* \"#utility.yul\":13505:13559   */\n      tag_511\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":13575:13661   */\n      tag_512\n        /* \"#utility.yul\":13654:13660   */\n      dup2\n        /* \"#utility.yul\":13649:13652   */\n      dup6\n        /* \"#utility.yul\":13575:13661   */\n      tag_513\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":13568:13661   */\n      swap4\n      pop\n        /* \"#utility.yul\":13685:13741   */\n      tag_514\n        /* \"#utility.yul\":13735:13740   */\n      dup4\n        /* \"#utility.yul\":13685:13741   */\n      tag_515\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":13764:13771   */\n      dup1\n        /* \"#utility.yul\":13795:13796   */\n      0x00\n        /* \"#utility.yul\":13780:14064   */\n    tag_516:\n        /* \"#utility.yul\":13805:13811   */\n      dup4\n        /* \"#utility.yul\":13802:13803   */\n      dup2\n        /* \"#utility.yul\":13799:13812   */\n      lt\n        /* \"#utility.yul\":13780:14064   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":13881:13887   */\n      dup2\n        /* \"#utility.yul\":13875:13888   */\n      mload\n        /* \"#utility.yul\":13908:13971   */\n      tag_519\n        /* \"#utility.yul\":13967:13970   */\n      dup9\n        /* \"#utility.yul\":13952:13965   */\n      dup3\n        /* \"#utility.yul\":13908:13971   */\n      tag_448\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":13901:13971   */\n      swap8\n      pop\n        /* \"#utility.yul\":13994:14054   */\n      tag_520\n        /* \"#utility.yul\":14047:14053   */\n      dup4\n        /* \"#utility.yul\":13994:14054   */\n      tag_521\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":13984:14054   */\n      swap3\n      pop\n        /* \"#utility.yul\":13840:14064   */\n      pop\n        /* \"#utility.yul\":13827:13828   */\n      0x01\n        /* \"#utility.yul\":13824:13825   */\n      dup2\n        /* \"#utility.yul\":13820:13829   */\n      add\n        /* \"#utility.yul\":13815:13829   */\n      swap1\n      pop\n        /* \"#utility.yul\":13780:14064   */\n      jump(tag_516)\n    tag_518:\n        /* \"#utility.yul\":13784:13798   */\n      pop\n        /* \"#utility.yul\":14080:14083   */\n      dup6\n        /* \"#utility.yul\":14073:14083   */\n      swap4\n      pop\n        /* \"#utility.yul\":13481:14089   */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14095:14194   */\n    tag_522:\n        /* \"#utility.yul\":14166:14187   */\n      tag_524\n        /* \"#utility.yul\":14181:14186   */\n      dup2\n        /* \"#utility.yul\":14166:14187   */\n      tag_525\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":14161:14164   */\n      dup3\n        /* \"#utility.yul\":14154:14188   */\n      mstore\n        /* \"#utility.yul\":14144:14194   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14200:14309   */\n    tag_526:\n        /* \"#utility.yul\":14281:14302   */\n      tag_528\n        /* \"#utility.yul\":14296:14301   */\n      dup2\n        /* \"#utility.yul\":14281:14302   */\n      tag_525\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":14276:14279   */\n      dup3\n        /* \"#utility.yul\":14269:14303   */\n      mstore\n        /* \"#utility.yul\":14259:14309   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14315:14423   */\n    tag_529:\n        /* \"#utility.yul\":14392:14416   */\n      tag_531\n        /* \"#utility.yul\":14410:14415   */\n      dup2\n        /* \"#utility.yul\":14392:14416   */\n      tag_532\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":14387:14390   */\n      dup3\n        /* \"#utility.yul\":14380:14417   */\n      mstore\n        /* \"#utility.yul\":14370:14423   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14429:14769   */\n    tag_533:\n      0x00\n        /* \"#utility.yul\":14533:14571   */\n      tag_535\n        /* \"#utility.yul\":14565:14570   */\n      dup3\n        /* \"#utility.yul\":14533:14571   */\n      tag_536\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":14587:14647   */\n      tag_537\n        /* \"#utility.yul\":14640:14646   */\n      dup2\n        /* \"#utility.yul\":14635:14638   */\n      dup6\n        /* \"#utility.yul\":14587:14647   */\n      tag_538\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":14580:14647   */\n      swap4\n      pop\n        /* \"#utility.yul\":14656:14708   */\n      tag_539\n        /* \"#utility.yul\":14701:14707   */\n      dup2\n        /* \"#utility.yul\":14696:14699   */\n      dup6\n        /* \"#utility.yul\":14689:14693   */\n      0x20\n        /* \"#utility.yul\":14682:14687   */\n      dup7\n        /* \"#utility.yul\":14678:14694   */\n      add\n        /* \"#utility.yul\":14656:14708   */\n      tag_540\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":14733:14762   */\n      tag_541\n        /* \"#utility.yul\":14755:14761   */\n      dup2\n        /* \"#utility.yul\":14733:14762   */\n      tag_542\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":14728:14731   */\n      dup5\n        /* \"#utility.yul\":14724:14763   */\n      add\n        /* \"#utility.yul\":14717:14763   */\n      swap2\n      pop\n        /* \"#utility.yul\":14509:14769   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14775:15135   */\n    tag_543:\n      0x00\n        /* \"#utility.yul\":14889:14927   */\n      tag_545\n        /* \"#utility.yul\":14921:14926   */\n      dup3\n        /* \"#utility.yul\":14889:14927   */\n      tag_536\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":14943:15013   */\n      tag_546\n        /* \"#utility.yul\":15006:15012   */\n      dup2\n        /* \"#utility.yul\":15001:15004   */\n      dup6\n        /* \"#utility.yul\":14943:15013   */\n      tag_547\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":14936:15013   */\n      swap4\n      pop\n        /* \"#utility.yul\":15022:15074   */\n      tag_548\n        /* \"#utility.yul\":15067:15073   */\n      dup2\n        /* \"#utility.yul\":15062:15065   */\n      dup6\n        /* \"#utility.yul\":15055:15059   */\n      0x20\n        /* \"#utility.yul\":15048:15053   */\n      dup7\n        /* \"#utility.yul\":15044:15060   */\n      add\n        /* \"#utility.yul\":15022:15074   */\n      tag_540\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":15099:15128   */\n      tag_549\n        /* \"#utility.yul\":15121:15127   */\n      dup2\n        /* \"#utility.yul\":15099:15128   */\n      tag_542\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":15094:15097   */\n      dup5\n        /* \"#utility.yul\":15090:15129   */\n      add\n        /* \"#utility.yul\":15083:15129   */\n      swap2\n      pop\n        /* \"#utility.yul\":14865:15135   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15141:15514   */\n    tag_550:\n      0x00\n        /* \"#utility.yul\":15273:15311   */\n      tag_552\n        /* \"#utility.yul\":15305:15310   */\n      dup3\n        /* \"#utility.yul\":15273:15311   */\n      tag_536\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":15327:15415   */\n      tag_553\n        /* \"#utility.yul\":15408:15414   */\n      dup2\n        /* \"#utility.yul\":15403:15406   */\n      dup6\n        /* \"#utility.yul\":15327:15415   */\n      tag_554\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":15320:15415   */\n      swap4\n      pop\n        /* \"#utility.yul\":15424:15476   */\n      tag_555\n        /* \"#utility.yul\":15469:15475   */\n      dup2\n        /* \"#utility.yul\":15464:15467   */\n      dup6\n        /* \"#utility.yul\":15457:15461   */\n      0x20\n        /* \"#utility.yul\":15450:15455   */\n      dup7\n        /* \"#utility.yul\":15446:15462   */\n      add\n        /* \"#utility.yul\":15424:15476   */\n      tag_540\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":15501:15507   */\n      dup1\n        /* \"#utility.yul\":15496:15499   */\n      dup5\n        /* \"#utility.yul\":15492:15508   */\n      add\n        /* \"#utility.yul\":15485:15508   */\n      swap2\n      pop\n        /* \"#utility.yul\":15249:15514   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15520:15669   */\n    tag_439:\n        /* \"#utility.yul\":15611:15662   */\n      tag_557\n        /* \"#utility.yul\":15656:15661   */\n      dup2\n        /* \"#utility.yul\":15611:15662   */\n      tag_558\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":15606:15609   */\n      dup3\n        /* \"#utility.yul\":15599:15663   */\n      mstore\n        /* \"#utility.yul\":15589:15669   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15675:15828   */\n    tag_559:\n        /* \"#utility.yul\":15773:15821   */\n      tag_561\n        /* \"#utility.yul\":15815:15820   */\n      dup2\n        /* \"#utility.yul\":15773:15821   */\n      tag_562\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":15768:15771   */\n      dup3\n        /* \"#utility.yul\":15761:15822   */\n      mstore\n        /* \"#utility.yul\":15751:15828   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15834:15939   */\n    tag_443:\n        /* \"#utility.yul\":15909:15932   */\n      tag_564\n        /* \"#utility.yul\":15926:15931   */\n      dup2\n        /* \"#utility.yul\":15909:15932   */\n      tag_565\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":15904:15907   */\n      dup3\n        /* \"#utility.yul\":15897:15933   */\n      mstore\n        /* \"#utility.yul\":15887:15939   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15945:16309   */\n    tag_566:\n      0x00\n        /* \"#utility.yul\":16061:16100   */\n      tag_568\n        /* \"#utility.yul\":16094:16099   */\n      dup3\n        /* \"#utility.yul\":16061:16100   */\n      tag_569\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":16116:16187   */\n      tag_570\n        /* \"#utility.yul\":16180:16186   */\n      dup2\n        /* \"#utility.yul\":16175:16178   */\n      dup6\n        /* \"#utility.yul\":16116:16187   */\n      tag_571\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":16109:16187   */\n      swap4\n      pop\n        /* \"#utility.yul\":16196:16248   */\n      tag_572\n        /* \"#utility.yul\":16241:16247   */\n      dup2\n        /* \"#utility.yul\":16236:16239   */\n      dup6\n        /* \"#utility.yul\":16229:16233   */\n      0x20\n        /* \"#utility.yul\":16222:16227   */\n      dup7\n        /* \"#utility.yul\":16218:16234   */\n      add\n        /* \"#utility.yul\":16196:16248   */\n      tag_540\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":16273:16302   */\n      tag_573\n        /* \"#utility.yul\":16295:16301   */\n      dup2\n        /* \"#utility.yul\":16273:16302   */\n      tag_542\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":16268:16271   */\n      dup5\n        /* \"#utility.yul\":16264:16303   */\n      add\n        /* \"#utility.yul\":16257:16303   */\n      swap2\n      pop\n        /* \"#utility.yul\":16037:16309   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16315:16696   */\n    tag_574:\n      0x00\n        /* \"#utility.yul\":16478:16545   */\n      tag_576\n        /* \"#utility.yul\":16542:16544   */\n      0x31\n        /* \"#utility.yul\":16537:16540   */\n      dup4\n        /* \"#utility.yul\":16478:16545   */\n      tag_571\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":16471:16545   */\n      swap2\n      pop\n        /* \"#utility.yul\":16575:16609   */\n      0x5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472\n        /* \"#utility.yul\":16571:16572   */\n      0x00\n        /* \"#utility.yul\":16566:16569   */\n      dup4\n        /* \"#utility.yul\":16562:16573   */\n      add\n        /* \"#utility.yul\":16555:16610   */\n      mstore\n        /* \"#utility.yul\":16641:16660   */\n      0x616e7366657246726f6d206661696c6564000000000000000000000000000000\n        /* \"#utility.yul\":16636:16638   */\n      0x20\n        /* \"#utility.yul\":16631:16634   */\n      dup4\n        /* \"#utility.yul\":16627:16639   */\n      add\n        /* \"#utility.yul\":16620:16661   */\n      mstore\n        /* \"#utility.yul\":16687:16689   */\n      0x40\n        /* \"#utility.yul\":16682:16685   */\n      dup3\n        /* \"#utility.yul\":16678:16690   */\n      add\n        /* \"#utility.yul\":16671:16690   */\n      swap1\n      pop\n        /* \"#utility.yul\":16461:16696   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16702:17086   */\n    tag_577:\n      0x00\n        /* \"#utility.yul\":16865:16932   */\n      tag_579\n        /* \"#utility.yul\":16929:16931   */\n      0x34\n        /* \"#utility.yul\":16924:16927   */\n      dup4\n        /* \"#utility.yul\":16865:16932   */\n      tag_571\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":16858:16932   */\n      swap2\n      pop\n        /* \"#utility.yul\":16962:16996   */\n      0x5472616e7366657248656c7065723a3a736166655472616e736665724554483a\n        /* \"#utility.yul\":16958:16959   */\n      0x00\n        /* \"#utility.yul\":16953:16956   */\n      dup4\n        /* \"#utility.yul\":16949:16960   */\n      add\n        /* \"#utility.yul\":16942:16997   */\n      mstore\n        /* \"#utility.yul\":17028:17050   */\n      0x20455448207472616e73666572206661696c6564000000000000000000000000\n        /* \"#utility.yul\":17023:17025   */\n      0x20\n        /* \"#utility.yul\":17018:17021   */\n      dup4\n        /* \"#utility.yul\":17014:17026   */\n      add\n        /* \"#utility.yul\":17007:17051   */\n      mstore\n        /* \"#utility.yul\":17077:17079   */\n      0x40\n        /* \"#utility.yul\":17072:17075   */\n      dup3\n        /* \"#utility.yul\":17068:17080   */\n      add\n        /* \"#utility.yul\":17061:17080   */\n      swap1\n      pop\n        /* \"#utility.yul\":16848:17086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17092:17457   */\n    tag_580:\n      0x00\n        /* \"#utility.yul\":17255:17322   */\n      tag_582\n        /* \"#utility.yul\":17319:17321   */\n      0x21\n        /* \"#utility.yul\":17314:17317   */\n      dup4\n        /* \"#utility.yul\":17255:17322   */\n      tag_571\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":17248:17322   */\n      swap2\n      pop\n        /* \"#utility.yul\":17352:17386   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":17348:17349   */\n      0x00\n        /* \"#utility.yul\":17343:17346   */\n      dup4\n        /* \"#utility.yul\":17339:17350   */\n      add\n        /* \"#utility.yul\":17332:17387   */\n      mstore\n        /* \"#utility.yul\":17418:17421   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17413:17415   */\n      0x20\n        /* \"#utility.yul\":17408:17411   */\n      dup4\n        /* \"#utility.yul\":17404:17416   */\n      add\n        /* \"#utility.yul\":17397:17422   */\n      mstore\n        /* \"#utility.yul\":17448:17450   */\n      0x40\n        /* \"#utility.yul\":17443:17446   */\n      dup3\n        /* \"#utility.yul\":17439:17451   */\n      add\n        /* \"#utility.yul\":17432:17451   */\n      swap1\n      pop\n        /* \"#utility.yul\":17238:17457   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17463:17788   */\n    tag_583:\n      0x00\n        /* \"#utility.yul\":17626:17693   */\n      tag_585\n        /* \"#utility.yul\":17690:17692   */\n      0x1b\n        /* \"#utility.yul\":17685:17688   */\n      dup4\n        /* \"#utility.yul\":17626:17693   */\n      tag_571\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":17619:17693   */\n      swap2\n      pop\n        /* \"#utility.yul\":17723:17752   */\n      0x426172746572737761705632526f757465723a20455850495245440000000000\n        /* \"#utility.yul\":17719:17720   */\n      0x00\n        /* \"#utility.yul\":17714:17717   */\n      dup4\n        /* \"#utility.yul\":17710:17721   */\n      add\n        /* \"#utility.yul\":17703:17753   */\n      mstore\n        /* \"#utility.yul\":17779:17781   */\n      0x20\n        /* \"#utility.yul\":17774:17777   */\n      dup3\n        /* \"#utility.yul\":17770:17782   */\n      add\n        /* \"#utility.yul\":17763:17782   */\n      swap1\n      pop\n        /* \"#utility.yul\":17609:17788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17794:18171   */\n    tag_586:\n      0x00\n        /* \"#utility.yul\":17957:18024   */\n      tag_588\n        /* \"#utility.yul\":18021:18023   */\n      0x2d\n        /* \"#utility.yul\":18016:18019   */\n      dup4\n        /* \"#utility.yul\":17957:18024   */\n      tag_571\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":17950:18024   */\n      swap2\n      pop\n        /* \"#utility.yul\":18054:18088   */\n      0x5472616e7366657248656c7065723a3a736166655472616e736665723a207472\n        /* \"#utility.yul\":18050:18051   */\n      0x00\n        /* \"#utility.yul\":18045:18048   */\n      dup4\n        /* \"#utility.yul\":18041:18052   */\n      add\n        /* \"#utility.yul\":18034:18089   */\n      mstore\n        /* \"#utility.yul\":18120:18135   */\n      0x616e73666572206661696c656400000000000000000000000000000000000000\n        /* \"#utility.yul\":18115:18117   */\n      0x20\n        /* \"#utility.yul\":18110:18113   */\n      dup4\n        /* \"#utility.yul\":18106:18118   */\n      add\n        /* \"#utility.yul\":18099:18136   */\n      mstore\n        /* \"#utility.yul\":18162:18164   */\n      0x40\n        /* \"#utility.yul\":18157:18160   */\n      dup3\n        /* \"#utility.yul\":18153:18165   */\n      add\n        /* \"#utility.yul\":18146:18165   */\n      swap1\n      pop\n        /* \"#utility.yul\":17940:18171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18177:18496   */\n    tag_589:\n      0x00\n        /* \"#utility.yul\":18340:18407   */\n      tag_591\n        /* \"#utility.yul\":18404:18406   */\n      0x15\n        /* \"#utility.yul\":18399:18402   */\n      dup4\n        /* \"#utility.yul\":18340:18407   */\n      tag_571\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":18333:18407   */\n      swap2\n      pop\n        /* \"#utility.yul\":18437:18460   */\n      0x426172746572737761703a20464f5242494444454e0000000000000000000000\n        /* \"#utility.yul\":18433:18434   */\n      0x00\n        /* \"#utility.yul\":18428:18431   */\n      dup4\n        /* \"#utility.yul\":18424:18435   */\n      add\n        /* \"#utility.yul\":18417:18461   */\n      mstore\n        /* \"#utility.yul\":18487:18489   */\n      0x20\n        /* \"#utility.yul\":18482:18485   */\n      dup3\n        /* \"#utility.yul\":18478:18490   */\n      add\n        /* \"#utility.yul\":18471:18490   */\n      swap1\n      pop\n        /* \"#utility.yul\":18323:18496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18502:18814   */\n    tag_592:\n      0x00\n        /* \"#utility.yul\":18665:18732   */\n      tag_594\n        /* \"#utility.yul\":18729:18731   */\n      0x0e\n        /* \"#utility.yul\":18724:18727   */\n      dup4\n        /* \"#utility.yul\":18665:18732   */\n      tag_571\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":18658:18732   */\n      swap2\n      pop\n        /* \"#utility.yul\":18762:18778   */\n      0x50726963652069732077726f6e67000000000000000000000000000000000000\n        /* \"#utility.yul\":18758:18759   */\n      0x00\n        /* \"#utility.yul\":18753:18756   */\n      dup4\n        /* \"#utility.yul\":18749:18760   */\n      add\n        /* \"#utility.yul\":18742:18779   */\n      mstore\n        /* \"#utility.yul\":18805:18807   */\n      0x20\n        /* \"#utility.yul\":18800:18803   */\n      dup3\n        /* \"#utility.yul\":18796:18808   */\n      add\n        /* \"#utility.yul\":18789:18808   */\n      swap1\n      pop\n        /* \"#utility.yul\":18648:18814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18886:20039   */\n    tag_447:\n      0x00\n        /* \"#utility.yul\":19043:19047   */\n      0xa0\n        /* \"#utility.yul\":19038:19041   */\n      dup4\n        /* \"#utility.yul\":19034:19048   */\n      add\n        /* \"#utility.yul\":19132:19136   */\n      0x00\n        /* \"#utility.yul\":19125:19130   */\n      dup4\n        /* \"#utility.yul\":19121:19137   */\n      add\n        /* \"#utility.yul\":19115:19138   */\n      mload\n        /* \"#utility.yul\":19151:19214   */\n      tag_596\n        /* \"#utility.yul\":19208:19212   */\n      0x00\n        /* \"#utility.yul\":19203:19206   */\n      dup7\n        /* \"#utility.yul\":19199:19213   */\n      add\n        /* \"#utility.yul\":19185:19197   */\n      dup3\n        /* \"#utility.yul\":19151:19214   */\n      tag_529\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":19058:19224   */\n      pop\n        /* \"#utility.yul\":19314:19318   */\n      0x20\n        /* \"#utility.yul\":19307:19312   */\n      dup4\n        /* \"#utility.yul\":19303:19319   */\n      add\n        /* \"#utility.yul\":19297:19320   */\n      mload\n        /* \"#utility.yul\":19333:19396   */\n      tag_597\n        /* \"#utility.yul\":19390:19394   */\n      0x20\n        /* \"#utility.yul\":19385:19388   */\n      dup7\n        /* \"#utility.yul\":19381:19395   */\n      add\n        /* \"#utility.yul\":19367:19379   */\n      dup3\n        /* \"#utility.yul\":19333:19396   */\n      tag_451\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":19234:19406   */\n      pop\n        /* \"#utility.yul\":19497:19501   */\n      0x40\n        /* \"#utility.yul\":19490:19495   */\n      dup4\n        /* \"#utility.yul\":19486:19502   */\n      add\n        /* \"#utility.yul\":19480:19503   */\n      mload\n        /* \"#utility.yul\":19516:19579   */\n      tag_598\n        /* \"#utility.yul\":19573:19577   */\n      0x40\n        /* \"#utility.yul\":19568:19571   */\n      dup7\n        /* \"#utility.yul\":19564:19578   */\n      add\n        /* \"#utility.yul\":19550:19562   */\n      dup3\n        /* \"#utility.yul\":19516:19579   */\n      tag_451\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":19416:19589   */\n      pop\n        /* \"#utility.yul\":19673:19677   */\n      0x60\n        /* \"#utility.yul\":19666:19671   */\n      dup4\n        /* \"#utility.yul\":19662:19678   */\n      add\n        /* \"#utility.yul\":19656:19679   */\n      mload\n        /* \"#utility.yul\":19692:19755   */\n      tag_599\n        /* \"#utility.yul\":19749:19753   */\n      0x60\n        /* \"#utility.yul\":19744:19747   */\n      dup7\n        /* \"#utility.yul\":19740:19754   */\n      add\n        /* \"#utility.yul\":19726:19738   */\n      dup3\n        /* \"#utility.yul\":19692:19755   */\n      tag_451\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":19599:19765   */\n      pop\n        /* \"#utility.yul\":19851:19855   */\n      0x80\n        /* \"#utility.yul\":19844:19849   */\n      dup4\n        /* \"#utility.yul\":19840:19856   */\n      add\n        /* \"#utility.yul\":19834:19857   */\n      mload\n        /* \"#utility.yul\":19904:19907   */\n      dup5\n        /* \"#utility.yul\":19898:19902   */\n      dup3\n        /* \"#utility.yul\":19894:19908   */\n      sub\n        /* \"#utility.yul\":19887:19891   */\n      0x80\n        /* \"#utility.yul\":19882:19885   */\n      dup7\n        /* \"#utility.yul\":19878:19892   */\n      add\n        /* \"#utility.yul\":19871:19909   */\n      mstore\n        /* \"#utility.yul\":19930:20001   */\n      tag_600\n        /* \"#utility.yul\":19996:20000   */\n      dup3\n        /* \"#utility.yul\":19982:19994   */\n      dup3\n        /* \"#utility.yul\":19930:20001   */\n      tag_533\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":19922:20001   */\n      swap2\n      pop\n        /* \"#utility.yul\":19775:20012   */\n      pop\n        /* \"#utility.yul\":20029:20033   */\n      dup1\n        /* \"#utility.yul\":20022:20033   */\n      swap2\n      pop\n        /* \"#utility.yul\":19012:20039   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20113:21021   */\n    tag_601:\n        /* \"#utility.yul\":20274:20278   */\n      0x80\n        /* \"#utility.yul\":20269:20272   */\n      dup3\n        /* \"#utility.yul\":20265:20279   */\n      add\n        /* \"#utility.yul\":20363:20367   */\n      0x00\n        /* \"#utility.yul\":20356:20361   */\n      dup3\n        /* \"#utility.yul\":20352:20368   */\n      add\n        /* \"#utility.yul\":20346:20369   */\n      mload\n        /* \"#utility.yul\":20382:20445   */\n      tag_603\n        /* \"#utility.yul\":20439:20443   */\n      0x00\n        /* \"#utility.yul\":20434:20437   */\n      dup6\n        /* \"#utility.yul\":20430:20444   */\n      add\n        /* \"#utility.yul\":20416:20428   */\n      dup3\n        /* \"#utility.yul\":20382:20445   */\n      tag_459\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":20289:20455   */\n      pop\n        /* \"#utility.yul\":20552:20556   */\n      0x20\n        /* \"#utility.yul\":20545:20550   */\n      dup3\n        /* \"#utility.yul\":20541:20557   */\n      add\n        /* \"#utility.yul\":20535:20558   */\n      mload\n        /* \"#utility.yul\":20571:20628   */\n      tag_604\n        /* \"#utility.yul\":20622:20626   */\n      0x20\n        /* \"#utility.yul\":20617:20620   */\n      dup6\n        /* \"#utility.yul\":20613:20627   */\n      add\n        /* \"#utility.yul\":20599:20611   */\n      dup3\n        /* \"#utility.yul\":20571:20628   */\n      tag_522\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":20465:20638   */\n      pop\n        /* \"#utility.yul\":20725:20729   */\n      0x40\n        /* \"#utility.yul\":20718:20723   */\n      dup3\n        /* \"#utility.yul\":20714:20730   */\n      add\n        /* \"#utility.yul\":20708:20731   */\n      mload\n        /* \"#utility.yul\":20744:20823   */\n      tag_605\n        /* \"#utility.yul\":20817:20821   */\n      0x40\n        /* \"#utility.yul\":20812:20815   */\n      dup6\n        /* \"#utility.yul\":20808:20822   */\n      add\n        /* \"#utility.yul\":20794:20806   */\n      dup3\n        /* \"#utility.yul\":20744:20823   */\n      tag_452\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":20648:20833   */\n      pop\n        /* \"#utility.yul\":20928:20932   */\n      0x60\n        /* \"#utility.yul\":20921:20926   */\n      dup3\n        /* \"#utility.yul\":20917:20933   */\n      add\n        /* \"#utility.yul\":20911:20934   */\n      mload\n        /* \"#utility.yul\":20947:21004   */\n      tag_606\n        /* \"#utility.yul\":20998:21002   */\n      0x60\n        /* \"#utility.yul\":20993:20996   */\n      dup6\n        /* \"#utility.yul\":20989:21003   */\n      add\n        /* \"#utility.yul\":20975:20987   */\n      dup3\n        /* \"#utility.yul\":20947:21004   */\n      tag_522\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":20843:21014   */\n      pop\n        /* \"#utility.yul\":20243:21021   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21027:21135   */\n    tag_451:\n        /* \"#utility.yul\":21104:21128   */\n      tag_608\n        /* \"#utility.yul\":21122:21127   */\n      dup2\n        /* \"#utility.yul\":21104:21128   */\n      tag_609\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":21099:21102   */\n      dup3\n        /* \"#utility.yul\":21092:21129   */\n      mstore\n        /* \"#utility.yul\":21082:21135   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21141:21259   */\n    tag_610:\n        /* \"#utility.yul\":21228:21252   */\n      tag_612\n        /* \"#utility.yul\":21246:21251   */\n      dup2\n        /* \"#utility.yul\":21228:21252   */\n      tag_609\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":21223:21226   */\n      dup3\n        /* \"#utility.yul\":21216:21253   */\n      mstore\n        /* \"#utility.yul\":21206:21259   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21265:21536   */\n    tag_223:\n      0x00\n        /* \"#utility.yul\":21417:21510   */\n      tag_614\n        /* \"#utility.yul\":21506:21509   */\n      dup3\n        /* \"#utility.yul\":21497:21503   */\n      dup5\n        /* \"#utility.yul\":21417:21510   */\n      tag_550\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":21410:21510   */\n      swap2\n      pop\n        /* \"#utility.yul\":21527:21530   */\n      dup2\n        /* \"#utility.yul\":21520:21530   */\n      swap1\n      pop\n        /* \"#utility.yul\":21399:21536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21542:21764   */\n    tag_33:\n      0x00\n        /* \"#utility.yul\":21673:21675   */\n      0x20\n        /* \"#utility.yul\":21662:21671   */\n      dup3\n        /* \"#utility.yul\":21658:21676   */\n      add\n        /* \"#utility.yul\":21650:21676   */\n      swap1\n      pop\n        /* \"#utility.yul\":21686:21757   */\n      tag_616\n        /* \"#utility.yul\":21754:21755   */\n      0x00\n        /* \"#utility.yul\":21743:21752   */\n      dup4\n        /* \"#utility.yul\":21739:21756   */\n      add\n        /* \"#utility.yul\":21730:21736   */\n      dup5\n        /* \"#utility.yul\":21686:21757   */\n      tag_463\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":21640:21764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21770:22024   */\n    tag_22:\n      0x00\n        /* \"#utility.yul\":21917:21919   */\n      0x20\n        /* \"#utility.yul\":21906:21915   */\n      dup3\n        /* \"#utility.yul\":21902:21920   */\n      add\n        /* \"#utility.yul\":21894:21920   */\n      swap1\n      pop\n        /* \"#utility.yul\":21930:22017   */\n      tag_618\n        /* \"#utility.yul\":22014:22015   */\n      0x00\n        /* \"#utility.yul\":22003:22012   */\n      dup4\n        /* \"#utility.yul\":21999:22016   */\n      add\n        /* \"#utility.yul\":21990:21996   */\n      dup5\n        /* \"#utility.yul\":21930:22017   */\n      tag_456\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":21884:22024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22030:22623   */\n    tag_253:\n      0x00\n        /* \"#utility.yul\":22267:22269   */\n      0x60\n        /* \"#utility.yul\":22256:22265   */\n      dup3\n        /* \"#utility.yul\":22252:22270   */\n      add\n        /* \"#utility.yul\":22244:22270   */\n      swap1\n      pop\n        /* \"#utility.yul\":22280:22351   */\n      tag_620\n        /* \"#utility.yul\":22348:22349   */\n      0x00\n        /* \"#utility.yul\":22337:22346   */\n      dup4\n        /* \"#utility.yul\":22333:22350   */\n      add\n        /* \"#utility.yul\":22324:22330   */\n      dup7\n        /* \"#utility.yul\":22280:22351   */\n      tag_463\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":22361:22433   */\n      tag_621\n        /* \"#utility.yul\":22429:22431   */\n      0x20\n        /* \"#utility.yul\":22418:22427   */\n      dup4\n        /* \"#utility.yul\":22414:22432   */\n      add\n        /* \"#utility.yul\":22405:22411   */\n      dup6\n        /* \"#utility.yul\":22361:22433   */\n      tag_463\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":22480:22489   */\n      dup2\n        /* \"#utility.yul\":22474:22478   */\n      dup2\n        /* \"#utility.yul\":22470:22490   */\n      sub\n        /* \"#utility.yul\":22465:22467   */\n      0x40\n        /* \"#utility.yul\":22454:22463   */\n      dup4\n        /* \"#utility.yul\":22450:22468   */\n      add\n        /* \"#utility.yul\":22443:22491   */\n      mstore\n        /* \"#utility.yul\":22508:22616   */\n      tag_622\n        /* \"#utility.yul\":22611:22615   */\n      dup2\n        /* \"#utility.yul\":22602:22608   */\n      dup5\n        /* \"#utility.yul\":22508:22616   */\n      tag_508\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":22500:22616   */\n      swap1\n      pop\n        /* \"#utility.yul\":22234:22623   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22629:23071   */\n    tag_232:\n      0x00\n        /* \"#utility.yul\":22816:22818   */\n      0x60\n        /* \"#utility.yul\":22805:22814   */\n      dup3\n        /* \"#utility.yul\":22801:22819   */\n      add\n        /* \"#utility.yul\":22793:22819   */\n      swap1\n      pop\n        /* \"#utility.yul\":22829:22900   */\n      tag_624\n        /* \"#utility.yul\":22897:22898   */\n      0x00\n        /* \"#utility.yul\":22886:22895   */\n      dup4\n        /* \"#utility.yul\":22882:22899   */\n      add\n        /* \"#utility.yul\":22873:22879   */\n      dup7\n        /* \"#utility.yul\":22829:22900   */\n      tag_463\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":22910:22982   */\n      tag_625\n        /* \"#utility.yul\":22978:22980   */\n      0x20\n        /* \"#utility.yul\":22967:22976   */\n      dup4\n        /* \"#utility.yul\":22963:22981   */\n      add\n        /* \"#utility.yul\":22954:22960   */\n      dup6\n        /* \"#utility.yul\":22910:22982   */\n      tag_463\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":22992:23064   */\n      tag_626\n        /* \"#utility.yul\":23060:23062   */\n      0x40\n        /* \"#utility.yul\":23049:23058   */\n      dup4\n        /* \"#utility.yul\":23045:23063   */\n      add\n        /* \"#utility.yul\":23036:23042   */\n      dup5\n        /* \"#utility.yul\":22992:23064   */\n      tag_610\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":22783:23071   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23077:23409   */\n    tag_246:\n      0x00\n        /* \"#utility.yul\":23236:23238   */\n      0x40\n        /* \"#utility.yul\":23225:23234   */\n      dup3\n        /* \"#utility.yul\":23221:23239   */\n      add\n        /* \"#utility.yul\":23213:23239   */\n      swap1\n      pop\n        /* \"#utility.yul\":23249:23320   */\n      tag_628\n        /* \"#utility.yul\":23317:23318   */\n      0x00\n        /* \"#utility.yul\":23306:23315   */\n      dup4\n        /* \"#utility.yul\":23302:23319   */\n      add\n        /* \"#utility.yul\":23293:23299   */\n      dup6\n        /* \"#utility.yul\":23249:23320   */\n      tag_463\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":23330:23402   */\n      tag_629\n        /* \"#utility.yul\":23398:23400   */\n      0x20\n        /* \"#utility.yul\":23387:23396   */\n      dup4\n        /* \"#utility.yul\":23383:23401   */\n      add\n        /* \"#utility.yul\":23374:23380   */\n      dup5\n        /* \"#utility.yul\":23330:23402   */\n      tag_610\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":23203:23409   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23415:23625   */\n    tag_39:\n      0x00\n        /* \"#utility.yul\":23540:23542   */\n      0x20\n        /* \"#utility.yul\":23529:23538   */\n      dup3\n        /* \"#utility.yul\":23525:23543   */\n      add\n        /* \"#utility.yul\":23517:23543   */\n      swap1\n      pop\n        /* \"#utility.yul\":23553:23618   */\n      tag_631\n        /* \"#utility.yul\":23615:23616   */\n      0x00\n        /* \"#utility.yul\":23604:23613   */\n      dup4\n        /* \"#utility.yul\":23600:23617   */\n      add\n        /* \"#utility.yul\":23591:23597   */\n      dup5\n        /* \"#utility.yul\":23553:23618   */\n      tag_526\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":23507:23625   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23631:25158   */\n    tag_262:\n      0x00\n        /* \"#utility.yul\":24201:24204   */\n      0x0120\n        /* \"#utility.yul\":24190:24199   */\n      dup3\n        /* \"#utility.yul\":24186:24205   */\n      add\n        /* \"#utility.yul\":24178:24205   */\n      swap1\n      pop\n        /* \"#utility.yul\":24215:24297   */\n      tag_633\n        /* \"#utility.yul\":24294:24295   */\n      0x00\n        /* \"#utility.yul\":24283:24292   */\n      dup4\n        /* \"#utility.yul\":24279:24296   */\n      add\n        /* \"#utility.yul\":24270:24276   */\n      dup10\n        /* \"#utility.yul\":24215:24297   */\n      tag_559\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":24344:24353   */\n      dup2\n        /* \"#utility.yul\":24338:24342   */\n      dup2\n        /* \"#utility.yul\":24334:24354   */\n      sub\n        /* \"#utility.yul\":24329:24331   */\n      0x20\n        /* \"#utility.yul\":24318:24327   */\n      dup4\n        /* \"#utility.yul\":24314:24332   */\n      add\n        /* \"#utility.yul\":24307:24355   */\n      mstore\n        /* \"#utility.yul\":24372:24542   */\n      tag_634\n        /* \"#utility.yul\":24537:24541   */\n      dup2\n        /* \"#utility.yul\":24528:24534   */\n      dup9\n        /* \"#utility.yul\":24372:24542   */\n      tag_494\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":24364:24542   */\n      swap1\n      pop\n        /* \"#utility.yul\":24552:24688   */\n      tag_635\n        /* \"#utility.yul\":24684:24686   */\n      0x40\n        /* \"#utility.yul\":24673:24682   */\n      dup4\n        /* \"#utility.yul\":24669:24687   */\n      add\n        /* \"#utility.yul\":24660:24666   */\n      dup8\n        /* \"#utility.yul\":24552:24688   */\n      tag_601\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":24736:24745   */\n      dup2\n        /* \"#utility.yul\":24730:24734   */\n      dup2\n        /* \"#utility.yul\":24726:24746   */\n      sub\n        /* \"#utility.yul\":24720:24723   */\n      0xc0\n        /* \"#utility.yul\":24709:24718   */\n      dup4\n        /* \"#utility.yul\":24705:24724   */\n      add\n        /* \"#utility.yul\":24698:24747   */\n      mstore\n        /* \"#utility.yul\":24764:24886   */\n      tag_636\n        /* \"#utility.yul\":24881:24885   */\n      dup2\n        /* \"#utility.yul\":24872:24878   */\n      dup7\n        /* \"#utility.yul\":24764:24886   */\n      tag_466\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":24756:24886   */\n      swap1\n      pop\n        /* \"#utility.yul\":24934:24943   */\n      dup2\n        /* \"#utility.yul\":24928:24932   */\n      dup2\n        /* \"#utility.yul\":24924:24944   */\n      sub\n        /* \"#utility.yul\":24918:24921   */\n      0xe0\n        /* \"#utility.yul\":24907:24916   */\n      dup4\n        /* \"#utility.yul\":24903:24922   */\n      add\n        /* \"#utility.yul\":24896:24945   */\n      mstore\n        /* \"#utility.yul\":24962:25068   */\n      tag_637\n        /* \"#utility.yul\":25063:25067   */\n      dup2\n        /* \"#utility.yul\":25054:25060   */\n      dup6\n        /* \"#utility.yul\":24962:25068   */\n      tag_480\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":24954:25068   */\n      swap1\n      pop\n        /* \"#utility.yul\":25078:25151   */\n      tag_638\n        /* \"#utility.yul\":25146:25149   */\n      0x0100\n        /* \"#utility.yul\":25135:25144   */\n      dup4\n        /* \"#utility.yul\":25131:25150   */\n      add\n        /* \"#utility.yul\":25122:25128   */\n      dup5\n        /* \"#utility.yul\":25078:25151   */\n      tag_610\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":24168:25158   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25164:25477   */\n    tag_313:\n      0x00\n        /* \"#utility.yul\":25315:25317   */\n      0x20\n        /* \"#utility.yul\":25304:25313   */\n      dup3\n        /* \"#utility.yul\":25300:25318   */\n      add\n        /* \"#utility.yul\":25292:25318   */\n      swap1\n      pop\n        /* \"#utility.yul\":25364:25373   */\n      dup2\n        /* \"#utility.yul\":25358:25362   */\n      dup2\n        /* \"#utility.yul\":25354:25374   */\n      sub\n        /* \"#utility.yul\":25350:25351   */\n      0x00\n        /* \"#utility.yul\":25339:25348   */\n      dup4\n        /* \"#utility.yul\":25335:25352   */\n      add\n        /* \"#utility.yul\":25328:25375   */\n      mstore\n        /* \"#utility.yul\":25392:25470   */\n      tag_640\n        /* \"#utility.yul\":25465:25469   */\n      dup2\n        /* \"#utility.yul\":25456:25462   */\n      dup5\n        /* \"#utility.yul\":25392:25470   */\n      tag_566\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":25384:25470   */\n      swap1\n      pop\n        /* \"#utility.yul\":25282:25477   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25483:25902   */\n    tag_243:\n      0x00\n        /* \"#utility.yul\":25687:25689   */\n      0x20\n        /* \"#utility.yul\":25676:25685   */\n      dup3\n        /* \"#utility.yul\":25672:25690   */\n      add\n        /* \"#utility.yul\":25664:25690   */\n      swap1\n      pop\n        /* \"#utility.yul\":25736:25745   */\n      dup2\n        /* \"#utility.yul\":25730:25734   */\n      dup2\n        /* \"#utility.yul\":25726:25746   */\n      sub\n        /* \"#utility.yul\":25722:25723   */\n      0x00\n        /* \"#utility.yul\":25711:25720   */\n      dup4\n        /* \"#utility.yul\":25707:25724   */\n      add\n        /* \"#utility.yul\":25700:25747   */\n      mstore\n        /* \"#utility.yul\":25764:25895   */\n      tag_642\n        /* \"#utility.yul\":25890:25894   */\n      dup2\n        /* \"#utility.yul\":25764:25895   */\n      tag_574\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":25756:25895   */\n      swap1\n      pop\n        /* \"#utility.yul\":25654:25902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25908:26327   */\n    tag_229:\n      0x00\n        /* \"#utility.yul\":26112:26114   */\n      0x20\n        /* \"#utility.yul\":26101:26110   */\n      dup3\n        /* \"#utility.yul\":26097:26115   */\n      add\n        /* \"#utility.yul\":26089:26115   */\n      swap1\n      pop\n        /* \"#utility.yul\":26161:26170   */\n      dup2\n        /* \"#utility.yul\":26155:26159   */\n      dup2\n        /* \"#utility.yul\":26151:26171   */\n      sub\n        /* \"#utility.yul\":26147:26148   */\n      0x00\n        /* \"#utility.yul\":26136:26145   */\n      dup4\n        /* \"#utility.yul\":26132:26149   */\n      add\n        /* \"#utility.yul\":26125:26172   */\n      mstore\n        /* \"#utility.yul\":26189:26320   */\n      tag_644\n        /* \"#utility.yul\":26315:26319   */\n      dup2\n        /* \"#utility.yul\":26189:26320   */\n      tag_577\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":26181:26320   */\n      swap1\n      pop\n        /* \"#utility.yul\":26079:26327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26333:26752   */\n    tag_215:\n      0x00\n        /* \"#utility.yul\":26537:26539   */\n      0x20\n        /* \"#utility.yul\":26526:26535   */\n      dup3\n        /* \"#utility.yul\":26522:26540   */\n      add\n        /* \"#utility.yul\":26514:26540   */\n      swap1\n      pop\n        /* \"#utility.yul\":26586:26595   */\n      dup2\n        /* \"#utility.yul\":26580:26584   */\n      dup2\n        /* \"#utility.yul\":26576:26596   */\n      sub\n        /* \"#utility.yul\":26572:26573   */\n      0x00\n        /* \"#utility.yul\":26561:26570   */\n      dup4\n        /* \"#utility.yul\":26557:26574   */\n      add\n        /* \"#utility.yul\":26550:26597   */\n      mstore\n        /* \"#utility.yul\":26614:26745   */\n      tag_646\n        /* \"#utility.yul\":26740:26744   */\n      dup2\n        /* \"#utility.yul\":26614:26745   */\n      tag_580\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":26606:26745   */\n      swap1\n      pop\n        /* \"#utility.yul\":26504:26752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26758:27177   */\n    tag_159:\n      0x00\n        /* \"#utility.yul\":26962:26964   */\n      0x20\n        /* \"#utility.yul\":26951:26960   */\n      dup3\n        /* \"#utility.yul\":26947:26965   */\n      add\n        /* \"#utility.yul\":26939:26965   */\n      swap1\n      pop\n        /* \"#utility.yul\":27011:27020   */\n      dup2\n        /* \"#utility.yul\":27005:27009   */\n      dup2\n        /* \"#utility.yul\":27001:27021   */\n      sub\n        /* \"#utility.yul\":26997:26998   */\n      0x00\n        /* \"#utility.yul\":26986:26995   */\n      dup4\n        /* \"#utility.yul\":26982:26999   */\n      add\n        /* \"#utility.yul\":26975:27022   */\n      mstore\n        /* \"#utility.yul\":27039:27170   */\n      tag_648\n        /* \"#utility.yul\":27165:27169   */\n      dup2\n        /* \"#utility.yul\":27039:27170   */\n      tag_583\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":27031:27170   */\n      swap1\n      pop\n        /* \"#utility.yul\":26929:27177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27183:27602   */\n    tag_309:\n      0x00\n        /* \"#utility.yul\":27387:27389   */\n      0x20\n        /* \"#utility.yul\":27376:27385   */\n      dup3\n        /* \"#utility.yul\":27372:27390   */\n      add\n        /* \"#utility.yul\":27364:27390   */\n      swap1\n      pop\n        /* \"#utility.yul\":27436:27445   */\n      dup2\n        /* \"#utility.yul\":27430:27434   */\n      dup2\n        /* \"#utility.yul\":27426:27446   */\n      sub\n        /* \"#utility.yul\":27422:27423   */\n      0x00\n        /* \"#utility.yul\":27411:27420   */\n      dup4\n        /* \"#utility.yul\":27407:27424   */\n      add\n        /* \"#utility.yul\":27400:27447   */\n      mstore\n        /* \"#utility.yul\":27464:27595   */\n      tag_650\n        /* \"#utility.yul\":27590:27594   */\n      dup2\n        /* \"#utility.yul\":27464:27595   */\n      tag_586\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":27456:27595   */\n      swap1\n      pop\n        /* \"#utility.yul\":27354:27602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27608:28027   */\n    tag_163:\n      0x00\n        /* \"#utility.yul\":27812:27814   */\n      0x20\n        /* \"#utility.yul\":27801:27810   */\n      dup3\n        /* \"#utility.yul\":27797:27815   */\n      add\n        /* \"#utility.yul\":27789:27815   */\n      swap1\n      pop\n        /* \"#utility.yul\":27861:27870   */\n      dup2\n        /* \"#utility.yul\":27855:27859   */\n      dup2\n        /* \"#utility.yul\":27851:27871   */\n      sub\n        /* \"#utility.yul\":27847:27848   */\n      0x00\n        /* \"#utility.yul\":27836:27845   */\n      dup4\n        /* \"#utility.yul\":27832:27849   */\n      add\n        /* \"#utility.yul\":27825:27872   */\n      mstore\n        /* \"#utility.yul\":27889:28020   */\n      tag_652\n        /* \"#utility.yul\":28015:28019   */\n      dup2\n        /* \"#utility.yul\":27889:28020   */\n      tag_589\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":27881:28020   */\n      swap1\n      pop\n        /* \"#utility.yul\":27779:28027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28033:28452   */\n    tag_95:\n      0x00\n        /* \"#utility.yul\":28237:28239   */\n      0x20\n        /* \"#utility.yul\":28226:28235   */\n      dup3\n        /* \"#utility.yul\":28222:28240   */\n      add\n        /* \"#utility.yul\":28214:28240   */\n      swap1\n      pop\n        /* \"#utility.yul\":28286:28295   */\n      dup2\n        /* \"#utility.yul\":28280:28284   */\n      dup2\n        /* \"#utility.yul\":28276:28296   */\n      sub\n        /* \"#utility.yul\":28272:28273   */\n      0x00\n        /* \"#utility.yul\":28261:28270   */\n      dup4\n        /* \"#utility.yul\":28257:28274   */\n      add\n        /* \"#utility.yul\":28250:28297   */\n      mstore\n        /* \"#utility.yul\":28314:28445   */\n      tag_654\n        /* \"#utility.yul\":28440:28444   */\n      dup2\n        /* \"#utility.yul\":28314:28445   */\n      tag_592\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":28306:28445   */\n      swap1\n      pop\n        /* \"#utility.yul\":28204:28452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28458:28680   */\n    tag_54:\n      0x00\n        /* \"#utility.yul\":28589:28591   */\n      0x20\n        /* \"#utility.yul\":28578:28587   */\n      dup3\n        /* \"#utility.yul\":28574:28592   */\n      add\n        /* \"#utility.yul\":28566:28592   */\n      swap1\n      pop\n        /* \"#utility.yul\":28602:28673   */\n      tag_656\n        /* \"#utility.yul\":28670:28671   */\n      0x00\n        /* \"#utility.yul\":28659:28668   */\n      dup4\n        /* \"#utility.yul\":28655:28672   */\n      add\n        /* \"#utility.yul\":28646:28652   */\n      dup5\n        /* \"#utility.yul\":28602:28673   */\n      tag_610\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":28556:28680   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28686:29659   */\n    tag_283:\n      0x00\n        /* \"#utility.yul\":29003:29006   */\n      0xe0\n        /* \"#utility.yul\":28992:29001   */\n      dup3\n        /* \"#utility.yul\":28988:29007   */\n      add\n        /* \"#utility.yul\":28980:29007   */\n      swap1\n      pop\n        /* \"#utility.yul\":29017:29088   */\n      tag_658\n        /* \"#utility.yul\":29085:29086   */\n      0x00\n        /* \"#utility.yul\":29074:29083   */\n      dup4\n        /* \"#utility.yul\":29070:29087   */\n      add\n        /* \"#utility.yul\":29061:29067   */\n      dup11\n        /* \"#utility.yul\":29017:29088   */\n      tag_610\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":29098:29170   */\n      tag_659\n        /* \"#utility.yul\":29166:29168   */\n      0x20\n        /* \"#utility.yul\":29155:29164   */\n      dup4\n        /* \"#utility.yul\":29151:29169   */\n      add\n        /* \"#utility.yul\":29142:29148   */\n      dup10\n        /* \"#utility.yul\":29098:29170   */\n      tag_610\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":29217:29226   */\n      dup2\n        /* \"#utility.yul\":29211:29215   */\n      dup2\n        /* \"#utility.yul\":29207:29227   */\n      sub\n        /* \"#utility.yul\":29202:29204   */\n      0x40\n        /* \"#utility.yul\":29191:29200   */\n      dup4\n        /* \"#utility.yul\":29187:29205   */\n      add\n        /* \"#utility.yul\":29180:29228   */\n      mstore\n        /* \"#utility.yul\":29245:29321   */\n      tag_660\n        /* \"#utility.yul\":29316:29320   */\n      dup2\n        /* \"#utility.yul\":29307:29313   */\n      dup9\n        /* \"#utility.yul\":29245:29321   */\n      tag_543\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":29237:29321   */\n      swap1\n      pop\n        /* \"#utility.yul\":29331:29403   */\n      tag_661\n        /* \"#utility.yul\":29399:29401   */\n      0x60\n        /* \"#utility.yul\":29388:29397   */\n      dup4\n        /* \"#utility.yul\":29384:29402   */\n      add\n        /* \"#utility.yul\":29375:29381   */\n      dup8\n        /* \"#utility.yul\":29331:29403   */\n      tag_463\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":29413:29486   */\n      tag_662\n        /* \"#utility.yul\":29481:29484   */\n      0x80\n        /* \"#utility.yul\":29470:29479   */\n      dup4\n        /* \"#utility.yul\":29466:29485   */\n      add\n        /* \"#utility.yul\":29457:29463   */\n      dup7\n        /* \"#utility.yul\":29413:29486   */\n      tag_610\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":29496:29569   */\n      tag_663\n        /* \"#utility.yul\":29564:29567   */\n      0xa0\n        /* \"#utility.yul\":29553:29562   */\n      dup4\n        /* \"#utility.yul\":29549:29568   */\n      add\n        /* \"#utility.yul\":29540:29546   */\n      dup6\n        /* \"#utility.yul\":29496:29569   */\n      tag_463\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":29579:29652   */\n      tag_664\n        /* \"#utility.yul\":29647:29650   */\n      0xc0\n        /* \"#utility.yul\":29636:29645   */\n      dup4\n        /* \"#utility.yul\":29632:29651   */\n      add\n        /* \"#utility.yul\":29623:29629   */\n      dup5\n        /* \"#utility.yul\":29579:29652   */\n      tag_463\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":28970:29659   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29665:30215   */\n    tag_146:\n      0x00\n      dup1\n        /* \"#utility.yul\":29831:29842   */\n      dup4\n        /* \"#utility.yul\":29818:29843   */\n      calldataload\n        /* \"#utility.yul\":29931:29932   */\n      0x01\n        /* \"#utility.yul\":29925:29929   */\n      0x20\n        /* \"#utility.yul\":29921:29933   */\n      sub\n        /* \"#utility.yul\":29910:29918   */\n      dup5\n        /* \"#utility.yul\":29894:29908   */\n      calldatasize\n        /* \"#utility.yul\":29890:29919   */\n      sub\n        /* \"#utility.yul\":29886:29934   */\n      sub\n        /* \"#utility.yul\":29866:29884   */\n      dup2\n        /* \"#utility.yul\":29862:29935   */\n      slt\n        /* \"#utility.yul\":29852:29854   */\n      tag_666\n      jumpi\n        /* \"#utility.yul\":29949:29950   */\n      0x00\n        /* \"#utility.yul\":29946:29947   */\n      dup1\n        /* \"#utility.yul\":29939:29951   */\n      revert\n        /* \"#utility.yul\":29852:29854   */\n    tag_666:\n        /* \"#utility.yul\":29984:30002   */\n      dup1\n        /* \"#utility.yul\":29974:29982   */\n      dup5\n        /* \"#utility.yul\":29970:30003   */\n      add\n        /* \"#utility.yul\":29962:30003   */\n      swap3\n      pop\n        /* \"#utility.yul\":30036:30040   */\n      dup3\n        /* \"#utility.yul\":30023:30041   */\n      calldataload\n        /* \"#utility.yul\":30013:30041   */\n      swap2\n      pop\n        /* \"#utility.yul\":30064:30082   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":30056:30062   */\n      dup3\n        /* \"#utility.yul\":30053:30083   */\n      gt\n        /* \"#utility.yul\":30050:30052   */\n      iszero\n      tag_667\n      jumpi\n        /* \"#utility.yul\":30096:30097   */\n      0x00\n        /* \"#utility.yul\":30093:30094   */\n      dup1\n        /* \"#utility.yul\":30086:30098   */\n      revert\n        /* \"#utility.yul\":30050:30052   */\n    tag_667:\n        /* \"#utility.yul\":30127:30129   */\n      0x20\n        /* \"#utility.yul\":30121:30125   */\n      dup4\n        /* \"#utility.yul\":30117:30130   */\n      add\n        /* \"#utility.yul\":30109:30130   */\n      swap3\n      pop\n        /* \"#utility.yul\":30184:30188   */\n      0x20\n        /* \"#utility.yul\":30176:30182   */\n      dup3\n        /* \"#utility.yul\":30172:30189   */\n      mul\n        /* \"#utility.yul\":30156:30170   */\n      calldatasize\n        /* \"#utility.yul\":30152:30190   */\n      sub\n        /* \"#utility.yul\":30146:30150   */\n      dup4\n        /* \"#utility.yul\":30142:30191   */\n      sgt\n        /* \"#utility.yul\":30139:30141   */\n      iszero\n      tag_668\n      jumpi\n        /* \"#utility.yul\":30204:30205   */\n      0x00\n        /* \"#utility.yul\":30201:30202   */\n      dup1\n        /* \"#utility.yul\":30194:30206   */\n      revert\n        /* \"#utility.yul\":30139:30141   */\n    tag_668:\n        /* \"#utility.yul\":29782:30215   */\n      pop\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30221:30774   */\n    tag_136:\n      0x00\n      dup1\n        /* \"#utility.yul\":30390:30401   */\n      dup4\n        /* \"#utility.yul\":30377:30402   */\n      calldataload\n        /* \"#utility.yul\":30490:30491   */\n      0x01\n        /* \"#utility.yul\":30484:30488   */\n      0x20\n        /* \"#utility.yul\":30480:30492   */\n      sub\n        /* \"#utility.yul\":30469:30477   */\n      dup5\n        /* \"#utility.yul\":30453:30467   */\n      calldatasize\n        /* \"#utility.yul\":30449:30478   */\n      sub\n        /* \"#utility.yul\":30445:30493   */\n      sub\n        /* \"#utility.yul\":30425:30443   */\n      dup2\n        /* \"#utility.yul\":30421:30494   */\n      slt\n        /* \"#utility.yul\":30411:30413   */\n      tag_670\n      jumpi\n        /* \"#utility.yul\":30508:30509   */\n      0x00\n        /* \"#utility.yul\":30505:30506   */\n      dup1\n        /* \"#utility.yul\":30498:30510   */\n      revert\n        /* \"#utility.yul\":30411:30413   */\n    tag_670:\n        /* \"#utility.yul\":30543:30561   */\n      dup1\n        /* \"#utility.yul\":30533:30541   */\n      dup5\n        /* \"#utility.yul\":30529:30562   */\n      add\n        /* \"#utility.yul\":30521:30562   */\n      swap3\n      pop\n        /* \"#utility.yul\":30595:30599   */\n      dup3\n        /* \"#utility.yul\":30582:30600   */\n      calldataload\n        /* \"#utility.yul\":30572:30600   */\n      swap2\n      pop\n        /* \"#utility.yul\":30623:30641   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":30615:30621   */\n      dup3\n        /* \"#utility.yul\":30612:30642   */\n      gt\n        /* \"#utility.yul\":30609:30611   */\n      iszero\n      tag_671\n      jumpi\n        /* \"#utility.yul\":30655:30656   */\n      0x00\n        /* \"#utility.yul\":30652:30653   */\n      dup1\n        /* \"#utility.yul\":30645:30657   */\n      revert\n        /* \"#utility.yul\":30609:30611   */\n    tag_671:\n        /* \"#utility.yul\":30686:30688   */\n      0x20\n        /* \"#utility.yul\":30680:30684   */\n      dup4\n        /* \"#utility.yul\":30676:30689   */\n      add\n        /* \"#utility.yul\":30668:30689   */\n      swap3\n      pop\n        /* \"#utility.yul\":30743:30747   */\n      0x20\n        /* \"#utility.yul\":30735:30741   */\n      dup3\n        /* \"#utility.yul\":30731:30748   */\n      mul\n        /* \"#utility.yul\":30715:30729   */\n      calldatasize\n        /* \"#utility.yul\":30711:30749   */\n      sub\n        /* \"#utility.yul\":30705:30709   */\n      dup4\n        /* \"#utility.yul\":30701:30750   */\n      sgt\n        /* \"#utility.yul\":30698:30700   */\n      iszero\n      tag_672\n      jumpi\n        /* \"#utility.yul\":30763:30764   */\n      0x00\n        /* \"#utility.yul\":30760:30761   */\n      dup1\n        /* \"#utility.yul\":30753:30765   */\n      revert\n        /* \"#utility.yul\":30698:30700   */\n    tag_672:\n        /* \"#utility.yul\":30341:30774   */\n      pop\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30780:31318   */\n    tag_123:\n      0x00\n      dup1\n        /* \"#utility.yul\":30934:30945   */\n      dup4\n        /* \"#utility.yul\":30921:30946   */\n      calldataload\n        /* \"#utility.yul\":31034:31035   */\n      0x01\n        /* \"#utility.yul\":31028:31032   */\n      0x20\n        /* \"#utility.yul\":31024:31036   */\n      sub\n        /* \"#utility.yul\":31013:31021   */\n      dup5\n        /* \"#utility.yul\":30997:31011   */\n      calldatasize\n        /* \"#utility.yul\":30993:31022   */\n      sub\n        /* \"#utility.yul\":30989:31037   */\n      sub\n        /* \"#utility.yul\":30969:30987   */\n      dup2\n        /* \"#utility.yul\":30965:31038   */\n      slt\n        /* \"#utility.yul\":30955:30957   */\n      tag_674\n      jumpi\n        /* \"#utility.yul\":31052:31053   */\n      0x00\n        /* \"#utility.yul\":31049:31050   */\n      dup1\n        /* \"#utility.yul\":31042:31054   */\n      revert\n        /* \"#utility.yul\":30955:30957   */\n    tag_674:\n        /* \"#utility.yul\":31087:31105   */\n      dup1\n        /* \"#utility.yul\":31077:31085   */\n      dup5\n        /* \"#utility.yul\":31073:31106   */\n      add\n        /* \"#utility.yul\":31065:31106   */\n      swap3\n      pop\n        /* \"#utility.yul\":31139:31143   */\n      dup3\n        /* \"#utility.yul\":31126:31144   */\n      calldataload\n        /* \"#utility.yul\":31116:31144   */\n      swap2\n      pop\n        /* \"#utility.yul\":31167:31185   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":31159:31165   */\n      dup3\n        /* \"#utility.yul\":31156:31186   */\n      gt\n        /* \"#utility.yul\":31153:31155   */\n      iszero\n      tag_675\n      jumpi\n        /* \"#utility.yul\":31199:31200   */\n      0x00\n        /* \"#utility.yul\":31196:31197   */\n      dup1\n        /* \"#utility.yul\":31189:31201   */\n      revert\n        /* \"#utility.yul\":31153:31155   */\n    tag_675:\n        /* \"#utility.yul\":31230:31232   */\n      0x20\n        /* \"#utility.yul\":31224:31228   */\n      dup4\n        /* \"#utility.yul\":31220:31233   */\n      add\n        /* \"#utility.yul\":31212:31233   */\n      swap3\n      pop\n        /* \"#utility.yul\":31287:31291   */\n      0x20\n        /* \"#utility.yul\":31279:31285   */\n      dup3\n        /* \"#utility.yul\":31275:31292   */\n      mul\n        /* \"#utility.yul\":31259:31273   */\n      calldatasize\n        /* \"#utility.yul\":31255:31293   */\n      sub\n        /* \"#utility.yul\":31249:31253   */\n      dup4\n        /* \"#utility.yul\":31245:31294   */\n      sgt\n        /* \"#utility.yul\":31242:31244   */\n      iszero\n      tag_676\n      jumpi\n        /* \"#utility.yul\":31307:31308   */\n      0x00\n        /* \"#utility.yul\":31304:31305   */\n      dup1\n        /* \"#utility.yul\":31297:31309   */\n      revert\n        /* \"#utility.yul\":31242:31244   */\n    tag_676:\n        /* \"#utility.yul\":30885:31318   */\n      pop\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31324:31896   */\n    tag_130:\n      0x00\n      dup1\n        /* \"#utility.yul\":31512:31523   */\n      dup4\n        /* \"#utility.yul\":31499:31524   */\n      calldataload\n        /* \"#utility.yul\":31612:31613   */\n      0x01\n        /* \"#utility.yul\":31606:31610   */\n      0x20\n        /* \"#utility.yul\":31602:31614   */\n      sub\n        /* \"#utility.yul\":31591:31599   */\n      dup5\n        /* \"#utility.yul\":31575:31589   */\n      calldatasize\n        /* \"#utility.yul\":31571:31600   */\n      sub\n        /* \"#utility.yul\":31567:31615   */\n      sub\n        /* \"#utility.yul\":31547:31565   */\n      dup2\n        /* \"#utility.yul\":31543:31616   */\n      slt\n        /* \"#utility.yul\":31533:31535   */\n      tag_678\n      jumpi\n        /* \"#utility.yul\":31630:31631   */\n      0x00\n        /* \"#utility.yul\":31627:31628   */\n      dup1\n        /* \"#utility.yul\":31620:31632   */\n      revert\n        /* \"#utility.yul\":31533:31535   */\n    tag_678:\n        /* \"#utility.yul\":31665:31683   */\n      dup1\n        /* \"#utility.yul\":31655:31663   */\n      dup5\n        /* \"#utility.yul\":31651:31684   */\n      add\n        /* \"#utility.yul\":31643:31684   */\n      swap3\n      pop\n        /* \"#utility.yul\":31717:31721   */\n      dup3\n        /* \"#utility.yul\":31704:31722   */\n      calldataload\n        /* \"#utility.yul\":31694:31722   */\n      swap2\n      pop\n        /* \"#utility.yul\":31745:31763   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":31737:31743   */\n      dup3\n        /* \"#utility.yul\":31734:31764   */\n      gt\n        /* \"#utility.yul\":31731:31733   */\n      iszero\n      tag_679\n      jumpi\n        /* \"#utility.yul\":31777:31778   */\n      0x00\n        /* \"#utility.yul\":31774:31775   */\n      dup1\n        /* \"#utility.yul\":31767:31779   */\n      revert\n        /* \"#utility.yul\":31731:31733   */\n    tag_679:\n        /* \"#utility.yul\":31808:31810   */\n      0x20\n        /* \"#utility.yul\":31802:31806   */\n      dup4\n        /* \"#utility.yul\":31798:31811   */\n      add\n        /* \"#utility.yul\":31790:31811   */\n      swap3\n      pop\n        /* \"#utility.yul\":31865:31869   */\n      0x20\n        /* \"#utility.yul\":31857:31863   */\n      dup3\n        /* \"#utility.yul\":31853:31870   */\n      mul\n        /* \"#utility.yul\":31837:31851   */\n      calldatasize\n        /* \"#utility.yul\":31833:31871   */\n      sub\n        /* \"#utility.yul\":31827:31831   */\n      dup4\n        /* \"#utility.yul\":31823:31872   */\n      sgt\n        /* \"#utility.yul\":31820:31822   */\n      iszero\n      tag_680\n      jumpi\n        /* \"#utility.yul\":31885:31886   */\n      0x00\n        /* \"#utility.yul\":31882:31883   */\n      dup1\n        /* \"#utility.yul\":31875:31887   */\n      revert\n        /* \"#utility.yul\":31820:31822   */\n    tag_680:\n        /* \"#utility.yul\":31463:31896   */\n      pop\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31902:32441   */\n    tag_84:\n      0x00\n      dup1\n        /* \"#utility.yul\":32057:32068   */\n      dup4\n        /* \"#utility.yul\":32044:32069   */\n      calldataload\n        /* \"#utility.yul\":32157:32158   */\n      0x01\n        /* \"#utility.yul\":32151:32155   */\n      0x20\n        /* \"#utility.yul\":32147:32159   */\n      sub\n        /* \"#utility.yul\":32136:32144   */\n      dup5\n        /* \"#utility.yul\":32120:32134   */\n      calldatasize\n        /* \"#utility.yul\":32116:32145   */\n      sub\n        /* \"#utility.yul\":32112:32160   */\n      sub\n        /* \"#utility.yul\":32092:32110   */\n      dup2\n        /* \"#utility.yul\":32088:32161   */\n      slt\n        /* \"#utility.yul\":32078:32080   */\n      tag_682\n      jumpi\n        /* \"#utility.yul\":32175:32176   */\n      0x00\n        /* \"#utility.yul\":32172:32173   */\n      dup1\n        /* \"#utility.yul\":32165:32177   */\n      revert\n        /* \"#utility.yul\":32078:32080   */\n    tag_682:\n        /* \"#utility.yul\":32210:32228   */\n      dup1\n        /* \"#utility.yul\":32200:32208   */\n      dup5\n        /* \"#utility.yul\":32196:32229   */\n      add\n        /* \"#utility.yul\":32188:32229   */\n      swap3\n      pop\n        /* \"#utility.yul\":32262:32266   */\n      dup3\n        /* \"#utility.yul\":32249:32267   */\n      calldataload\n        /* \"#utility.yul\":32239:32267   */\n      swap2\n      pop\n        /* \"#utility.yul\":32290:32308   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":32282:32288   */\n      dup3\n        /* \"#utility.yul\":32279:32309   */\n      gt\n        /* \"#utility.yul\":32276:32278   */\n      iszero\n      tag_683\n      jumpi\n        /* \"#utility.yul\":32322:32323   */\n      0x00\n        /* \"#utility.yul\":32319:32320   */\n      dup1\n        /* \"#utility.yul\":32312:32324   */\n      revert\n        /* \"#utility.yul\":32276:32278   */\n    tag_683:\n        /* \"#utility.yul\":32353:32355   */\n      0x20\n        /* \"#utility.yul\":32347:32351   */\n      dup4\n        /* \"#utility.yul\":32343:32356   */\n      add\n        /* \"#utility.yul\":32335:32356   */\n      swap3\n      pop\n        /* \"#utility.yul\":32410:32414   */\n      0x20\n        /* \"#utility.yul\":32402:32408   */\n      dup3\n        /* \"#utility.yul\":32398:32415   */\n      mul\n        /* \"#utility.yul\":32382:32396   */\n      calldatasize\n        /* \"#utility.yul\":32378:32416   */\n      sub\n        /* \"#utility.yul\":32372:32376   */\n      dup4\n        /* \"#utility.yul\":32368:32417   */\n      sgt\n        /* \"#utility.yul\":32365:32367   */\n      iszero\n      tag_684\n      jumpi\n        /* \"#utility.yul\":32430:32431   */\n      0x00\n        /* \"#utility.yul\":32427:32428   */\n      dup1\n        /* \"#utility.yul\":32420:32432   */\n      revert\n        /* \"#utility.yul\":32365:32367   */\n    tag_684:\n        /* \"#utility.yul\":32008:32441   */\n      pop\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32447:32970   */\n    tag_149:\n      0x00\n      dup1\n        /* \"#utility.yul\":32586:32597   */\n      dup4\n        /* \"#utility.yul\":32573:32598   */\n      calldataload\n        /* \"#utility.yul\":32686:32687   */\n      0x01\n        /* \"#utility.yul\":32680:32684   */\n      0x20\n        /* \"#utility.yul\":32676:32688   */\n      sub\n        /* \"#utility.yul\":32665:32673   */\n      dup5\n        /* \"#utility.yul\":32649:32663   */\n      calldatasize\n        /* \"#utility.yul\":32645:32674   */\n      sub\n        /* \"#utility.yul\":32641:32689   */\n      sub\n        /* \"#utility.yul\":32621:32639   */\n      dup2\n        /* \"#utility.yul\":32617:32690   */\n      slt\n        /* \"#utility.yul\":32607:32609   */\n      tag_686\n      jumpi\n        /* \"#utility.yul\":32704:32705   */\n      0x00\n        /* \"#utility.yul\":32701:32702   */\n      dup1\n        /* \"#utility.yul\":32694:32706   */\n      revert\n        /* \"#utility.yul\":32607:32609   */\n    tag_686:\n        /* \"#utility.yul\":32739:32757   */\n      dup1\n        /* \"#utility.yul\":32729:32737   */\n      dup5\n        /* \"#utility.yul\":32725:32758   */\n      add\n        /* \"#utility.yul\":32717:32758   */\n      swap3\n      pop\n        /* \"#utility.yul\":32791:32795   */\n      dup3\n        /* \"#utility.yul\":32778:32796   */\n      calldataload\n        /* \"#utility.yul\":32768:32796   */\n      swap2\n      pop\n        /* \"#utility.yul\":32819:32837   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":32811:32817   */\n      dup3\n        /* \"#utility.yul\":32808:32838   */\n      gt\n        /* \"#utility.yul\":32805:32807   */\n      iszero\n      tag_687\n      jumpi\n        /* \"#utility.yul\":32851:32852   */\n      0x00\n        /* \"#utility.yul\":32848:32849   */\n      dup1\n        /* \"#utility.yul\":32841:32853   */\n      revert\n        /* \"#utility.yul\":32805:32807   */\n    tag_687:\n        /* \"#utility.yul\":32882:32884   */\n      0x20\n        /* \"#utility.yul\":32876:32880   */\n      dup4\n        /* \"#utility.yul\":32872:32885   */\n      add\n        /* \"#utility.yul\":32864:32885   */\n      swap3\n      pop\n        /* \"#utility.yul\":32939:32943   */\n      0x01\n        /* \"#utility.yul\":32931:32937   */\n      dup3\n        /* \"#utility.yul\":32927:32944   */\n      mul\n        /* \"#utility.yul\":32911:32925   */\n      calldatasize\n        /* \"#utility.yul\":32907:32945   */\n      sub\n        /* \"#utility.yul\":32901:32905   */\n      dup4\n        /* \"#utility.yul\":32897:32946   */\n      sgt\n        /* \"#utility.yul\":32894:32896   */\n      iszero\n      tag_688\n      jumpi\n        /* \"#utility.yul\":32959:32960   */\n      0x00\n        /* \"#utility.yul\":32956:32957   */\n      dup1\n        /* \"#utility.yul\":32949:32961   */\n      revert\n        /* \"#utility.yul\":32894:32896   */\n    tag_688:\n        /* \"#utility.yul\":32537:32970   */\n      pop\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32976:33259   */\n    tag_321:\n      0x00\n        /* \"#utility.yul\":33042:33044   */\n      0x40\n        /* \"#utility.yul\":33036:33045   */\n      mload\n        /* \"#utility.yul\":33026:33045   */\n      swap1\n      pop\n        /* \"#utility.yul\":33084:33088   */\n      dup2\n        /* \"#utility.yul\":33076:33082   */\n      dup2\n        /* \"#utility.yul\":33072:33089   */\n      add\n        /* \"#utility.yul\":33191:33197   */\n      dup2\n        /* \"#utility.yul\":33179:33189   */\n      dup2\n        /* \"#utility.yul\":33176:33198   */\n      lt\n        /* \"#utility.yul\":33155:33173   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":33143:33153   */\n      dup3\n        /* \"#utility.yul\":33140:33174   */\n      gt\n        /* \"#utility.yul\":33137:33199   */\n      or\n        /* \"#utility.yul\":33134:33136   */\n      iszero\n      tag_690\n      jumpi\n        /* \"#utility.yul\":33202:33220   */\n      tag_691\n      tag_692\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":33134:33136   */\n    tag_690:\n        /* \"#utility.yul\":33242:33252   */\n      dup1\n        /* \"#utility.yul\":33238:33240   */\n      0x40\n        /* \"#utility.yul\":33231:33253   */\n      mstore\n        /* \"#utility.yul\":33016:33259   */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33265:33607   */\n    tag_320:\n      0x00\n        /* \"#utility.yul\":33463:33481   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":33455:33461   */\n      dup3\n        /* \"#utility.yul\":33452:33482   */\n      gt\n        /* \"#utility.yul\":33449:33451   */\n      iszero\n      tag_694\n      jumpi\n        /* \"#utility.yul\":33485:33503   */\n      tag_695\n      tag_692\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":33449:33451   */\n    tag_694:\n        /* \"#utility.yul\":33535:33539   */\n      0x20\n        /* \"#utility.yul\":33527:33533   */\n      dup3\n        /* \"#utility.yul\":33523:33540   */\n      mul\n        /* \"#utility.yul\":33515:33540   */\n      swap1\n      pop\n        /* \"#utility.yul\":33595:33599   */\n      0x20\n        /* \"#utility.yul\":33589:33593   */\n      dup2\n        /* \"#utility.yul\":33585:33600   */\n      add\n        /* \"#utility.yul\":33577:33600   */\n      swap1\n      pop\n        /* \"#utility.yul\":33378:33607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33613:33924   */\n    tag_331:\n      0x00\n        /* \"#utility.yul\":33780:33798   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":33772:33778   */\n      dup3\n        /* \"#utility.yul\":33769:33799   */\n      gt\n        /* \"#utility.yul\":33766:33768   */\n      iszero\n      tag_697\n      jumpi\n        /* \"#utility.yul\":33802:33820   */\n      tag_698\n      tag_692\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":33766:33768   */\n    tag_697:\n        /* \"#utility.yul\":33852:33856   */\n      0x20\n        /* \"#utility.yul\":33844:33850   */\n      dup3\n        /* \"#utility.yul\":33840:33857   */\n      mul\n        /* \"#utility.yul\":33832:33857   */\n      swap1\n      pop\n        /* \"#utility.yul\":33912:33916   */\n      0x20\n        /* \"#utility.yul\":33906:33910   */\n      dup2\n        /* \"#utility.yul\":33902:33917   */\n      add\n        /* \"#utility.yul\":33894:33917   */\n      swap1\n      pop\n        /* \"#utility.yul\":33695:33924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33930:34261   */\n    tag_342:\n      0x00\n        /* \"#utility.yul\":34081:34099   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":34073:34079   */\n      dup3\n        /* \"#utility.yul\":34070:34100   */\n      gt\n        /* \"#utility.yul\":34067:34069   */\n      iszero\n      tag_700\n      jumpi\n        /* \"#utility.yul\":34103:34121   */\n      tag_701\n      tag_692\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":34067:34069   */\n    tag_700:\n        /* \"#utility.yul\":34188:34192   */\n      0x1f\n        /* \"#utility.yul\":34184:34193   */\n      not\n        /* \"#utility.yul\":34177:34181   */\n      0x1f\n        /* \"#utility.yul\":34169:34175   */\n      dup4\n        /* \"#utility.yul\":34165:34182   */\n      add\n        /* \"#utility.yul\":34161:34194   */\n      and\n        /* \"#utility.yul\":34153:34194   */\n      swap1\n      pop\n        /* \"#utility.yul\":34249:34253   */\n      0x20\n        /* \"#utility.yul\":34243:34247   */\n      dup2\n        /* \"#utility.yul\":34239:34254   */\n      add\n        /* \"#utility.yul\":34231:34254   */\n      swap1\n      pop\n        /* \"#utility.yul\":33996:34261   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34267:34413   */\n    tag_473:\n      0x00\n        /* \"#utility.yul\":34371:34374   */\n      dup2\n        /* \"#utility.yul\":34363:34374   */\n      swap1\n      pop\n        /* \"#utility.yul\":34401:34405   */\n      0x20\n        /* \"#utility.yul\":34396:34399   */\n      dup3\n        /* \"#utility.yul\":34392:34406   */\n      add\n        /* \"#utility.yul\":34384:34406   */\n      swap1\n      pop\n        /* \"#utility.yul\":34353:34413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34419:34550   */\n    tag_487:\n      0x00\n        /* \"#utility.yul\":34508:34511   */\n      dup2\n        /* \"#utility.yul\":34500:34511   */\n      swap1\n      pop\n        /* \"#utility.yul\":34538:34542   */\n      0x20\n        /* \"#utility.yul\":34533:34536   */\n      dup3\n        /* \"#utility.yul\":34529:34543   */\n      add\n        /* \"#utility.yul\":34521:34543   */\n      swap1\n      pop\n        /* \"#utility.yul\":34490:34550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34556:34719   */\n    tag_501:\n      0x00\n        /* \"#utility.yul\":34677:34680   */\n      dup2\n        /* \"#utility.yul\":34669:34680   */\n      swap1\n      pop\n        /* \"#utility.yul\":34707:34711   */\n      0x20\n        /* \"#utility.yul\":34702:34705   */\n      dup3\n        /* \"#utility.yul\":34698:34712   */\n      add\n        /* \"#utility.yul\":34690:34712   */\n      swap1\n      pop\n        /* \"#utility.yul\":34659:34719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34725:34857   */\n    tag_515:\n      0x00\n        /* \"#utility.yul\":34815:34818   */\n      dup2\n        /* \"#utility.yul\":34807:34818   */\n      swap1\n      pop\n        /* \"#utility.yul\":34845:34849   */\n      0x20\n        /* \"#utility.yul\":34840:34843   */\n      dup3\n        /* \"#utility.yul\":34836:34850   */\n      add\n        /* \"#utility.yul\":34828:34850   */\n      swap1\n      pop\n        /* \"#utility.yul\":34797:34857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34863:34991   */\n    tag_469:\n      0x00\n        /* \"#utility.yul\":34978:34983   */\n      dup2\n        /* \"#utility.yul\":34972:34984   */\n      mload\n        /* \"#utility.yul\":34962:34984   */\n      swap1\n      pop\n        /* \"#utility.yul\":34951:34991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34997:35110   */\n    tag_483:\n      0x00\n        /* \"#utility.yul\":35097:35102   */\n      dup2\n        /* \"#utility.yul\":35091:35103   */\n      mload\n        /* \"#utility.yul\":35081:35103   */\n      swap1\n      pop\n        /* \"#utility.yul\":35070:35110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35116:35261   */\n    tag_497:\n      0x00\n        /* \"#utility.yul\":35248:35253   */\n      dup2\n        /* \"#utility.yul\":35242:35254   */\n      mload\n        /* \"#utility.yul\":35232:35254   */\n      swap1\n      pop\n        /* \"#utility.yul\":35221:35261   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35267:35381   */\n    tag_511:\n      0x00\n        /* \"#utility.yul\":35368:35373   */\n      dup2\n        /* \"#utility.yul\":35362:35374   */\n      mload\n        /* \"#utility.yul\":35352:35374   */\n      swap1\n      pop\n        /* \"#utility.yul\":35341:35381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35387:35485   */\n    tag_536:\n      0x00\n        /* \"#utility.yul\":35472:35477   */\n      dup2\n        /* \"#utility.yul\":35466:35478   */\n      mload\n        /* \"#utility.yul\":35456:35478   */\n      swap1\n      pop\n        /* \"#utility.yul\":35445:35485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35491:35590   */\n    tag_569:\n      0x00\n        /* \"#utility.yul\":35577:35582   */\n      dup2\n        /* \"#utility.yul\":35571:35583   */\n      mload\n        /* \"#utility.yul\":35561:35583   */\n      swap1\n      pop\n        /* \"#utility.yul\":35550:35590   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35596:35723   */\n    tag_479:\n      0x00\n        /* \"#utility.yul\":35712:35716   */\n      0x20\n        /* \"#utility.yul\":35707:35710   */\n      dup3\n        /* \"#utility.yul\":35703:35717   */\n      add\n        /* \"#utility.yul\":35695:35717   */\n      swap1\n      pop\n        /* \"#utility.yul\":35685:35723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35729:35841   */\n    tag_493:\n      0x00\n        /* \"#utility.yul\":35830:35834   */\n      0x20\n        /* \"#utility.yul\":35825:35828   */\n      dup3\n        /* \"#utility.yul\":35821:35835   */\n      add\n        /* \"#utility.yul\":35813:35835   */\n      swap1\n      pop\n        /* \"#utility.yul\":35803:35841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35847:35991   */\n    tag_507:\n      0x00\n        /* \"#utility.yul\":35980:35984   */\n      0x20\n        /* \"#utility.yul\":35975:35978   */\n      dup3\n        /* \"#utility.yul\":35971:35985   */\n      add\n        /* \"#utility.yul\":35963:35985   */\n      swap1\n      pop\n        /* \"#utility.yul\":35953:35991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35997:36110   */\n    tag_521:\n      0x00\n        /* \"#utility.yul\":36099:36103   */\n      0x20\n        /* \"#utility.yul\":36094:36097   */\n      dup3\n        /* \"#utility.yul\":36090:36104   */\n      add\n        /* \"#utility.yul\":36082:36104   */\n      swap1\n      pop\n        /* \"#utility.yul\":36072:36110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36116:36300   */\n    tag_471:\n      0x00\n        /* \"#utility.yul\":36249:36255   */\n      dup3\n        /* \"#utility.yul\":36244:36247   */\n      dup3\n        /* \"#utility.yul\":36237:36256   */\n      mstore\n        /* \"#utility.yul\":36289:36293   */\n      0x20\n        /* \"#utility.yul\":36284:36287   */\n      dup3\n        /* \"#utility.yul\":36280:36294   */\n      add\n        /* \"#utility.yul\":36265:36294   */\n      swap1\n      pop\n        /* \"#utility.yul\":36227:36300   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36306:36489   */\n    tag_485:\n      0x00\n        /* \"#utility.yul\":36438:36444   */\n      dup3\n        /* \"#utility.yul\":36433:36436   */\n      dup3\n        /* \"#utility.yul\":36426:36445   */\n      mstore\n        /* \"#utility.yul\":36478:36482   */\n      0x20\n        /* \"#utility.yul\":36473:36476   */\n      dup3\n        /* \"#utility.yul\":36469:36483   */\n      add\n        /* \"#utility.yul\":36454:36483   */\n      swap1\n      pop\n        /* \"#utility.yul\":36416:36489   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36495:36710   */\n    tag_499:\n      0x00\n        /* \"#utility.yul\":36659:36665   */\n      dup3\n        /* \"#utility.yul\":36654:36657   */\n      dup3\n        /* \"#utility.yul\":36647:36666   */\n      mstore\n        /* \"#utility.yul\":36699:36703   */\n      0x20\n        /* \"#utility.yul\":36694:36697   */\n      dup3\n        /* \"#utility.yul\":36690:36704   */\n      add\n        /* \"#utility.yul\":36675:36704   */\n      swap1\n      pop\n        /* \"#utility.yul\":36637:36710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36716:36900   */\n    tag_513:\n      0x00\n        /* \"#utility.yul\":36849:36855   */\n      dup3\n        /* \"#utility.yul\":36844:36847   */\n      dup3\n        /* \"#utility.yul\":36837:36856   */\n      mstore\n        /* \"#utility.yul\":36889:36893   */\n      0x20\n        /* \"#utility.yul\":36884:36887   */\n      dup3\n        /* \"#utility.yul\":36880:36894   */\n      add\n        /* \"#utility.yul\":36865:36894   */\n      swap1\n      pop\n        /* \"#utility.yul\":36827:36900   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36906:37064   */\n    tag_538:\n      0x00\n        /* \"#utility.yul\":37013:37019   */\n      dup3\n        /* \"#utility.yul\":37008:37011   */\n      dup3\n        /* \"#utility.yul\":37001:37020   */\n      mstore\n        /* \"#utility.yul\":37053:37057   */\n      0x20\n        /* \"#utility.yul\":37048:37051   */\n      dup3\n        /* \"#utility.yul\":37044:37058   */\n      add\n        /* \"#utility.yul\":37029:37058   */\n      swap1\n      pop\n        /* \"#utility.yul\":36991:37064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37070:37238   */\n    tag_547:\n      0x00\n        /* \"#utility.yul\":37187:37193   */\n      dup3\n        /* \"#utility.yul\":37182:37185   */\n      dup3\n        /* \"#utility.yul\":37175:37194   */\n      mstore\n        /* \"#utility.yul\":37227:37231   */\n      0x20\n        /* \"#utility.yul\":37222:37225   */\n      dup3\n        /* \"#utility.yul\":37218:37232   */\n      add\n        /* \"#utility.yul\":37203:37232   */\n      swap1\n      pop\n        /* \"#utility.yul\":37165:37238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37244:37391   */\n    tag_554:\n      0x00\n        /* \"#utility.yul\":37382:37385   */\n      dup2\n        /* \"#utility.yul\":37367:37385   */\n      swap1\n      pop\n        /* \"#utility.yul\":37357:37391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37397:37566   */\n    tag_571:\n      0x00\n        /* \"#utility.yul\":37515:37521   */\n      dup3\n        /* \"#utility.yul\":37510:37513   */\n      dup3\n        /* \"#utility.yul\":37503:37522   */\n      mstore\n        /* \"#utility.yul\":37555:37559   */\n      0x20\n        /* \"#utility.yul\":37550:37553   */\n      dup3\n        /* \"#utility.yul\":37546:37560   */\n      add\n        /* \"#utility.yul\":37531:37560   */\n      swap1\n      pop\n        /* \"#utility.yul\":37493:37566   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37572:37877   */\n    tag_92:\n      0x00\n        /* \"#utility.yul\":37631:37651   */\n      tag_725\n        /* \"#utility.yul\":37649:37650   */\n      dup3\n        /* \"#utility.yul\":37631:37651   */\n      tag_609\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":37626:37651   */\n      swap2\n      pop\n        /* \"#utility.yul\":37665:37685   */\n      tag_726\n        /* \"#utility.yul\":37683:37684   */\n      dup4\n        /* \"#utility.yul\":37665:37685   */\n      tag_609\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":37660:37685   */\n      swap3\n      pop\n        /* \"#utility.yul\":37819:37820   */\n      dup3\n        /* \"#utility.yul\":37751:37817   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":37747:37821   */\n      sub\n        /* \"#utility.yul\":37744:37745   */\n      dup3\n        /* \"#utility.yul\":37741:37822   */\n      gt\n        /* \"#utility.yul\":37738:37740   */\n      iszero\n      tag_727\n      jumpi\n        /* \"#utility.yul\":37825:37843   */\n      tag_728\n      tag_729\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":37738:37740   */\n    tag_727:\n        /* \"#utility.yul\":37869:37870   */\n      dup3\n        /* \"#utility.yul\":37866:37867   */\n      dup3\n        /* \"#utility.yul\":37862:37871   */\n      add\n        /* \"#utility.yul\":37855:37871   */\n      swap1\n      pop\n        /* \"#utility.yul\":37616:37877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37883:38068   */\n    tag_212:\n      0x00\n        /* \"#utility.yul\":37940:37960   */\n      tag_731\n        /* \"#utility.yul\":37958:37959   */\n      dup3\n        /* \"#utility.yul\":37940:37960   */\n      tag_609\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":37935:37960   */\n      swap2\n      pop\n        /* \"#utility.yul\":37974:37994   */\n      tag_732\n        /* \"#utility.yul\":37992:37993   */\n      dup4\n        /* \"#utility.yul\":37974:37994   */\n      tag_609\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":37969:37994   */\n      swap3\n      pop\n        /* \"#utility.yul\":38013:38014   */\n      dup3\n        /* \"#utility.yul\":38003:38005   */\n      tag_733\n      jumpi\n        /* \"#utility.yul\":38018:38036   */\n      tag_734\n      tag_735\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":38003:38005   */\n    tag_733:\n        /* \"#utility.yul\":38060:38061   */\n      dup3\n        /* \"#utility.yul\":38057:38058   */\n      dup3\n        /* \"#utility.yul\":38053:38062   */\n      div\n        /* \"#utility.yul\":38048:38062   */\n      swap1\n      pop\n        /* \"#utility.yul\":37925:38068   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":38074:38422   */\n    tag_210:\n      0x00\n        /* \"#utility.yul\":38137:38157   */\n      tag_737\n        /* \"#utility.yul\":38155:38156   */\n      dup3\n        /* \"#utility.yul\":38137:38157   */\n      tag_609\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":38132:38157   */\n      swap2\n      pop\n        /* \"#utility.yul\":38171:38191   */\n      tag_738\n        /* \"#utility.yul\":38189:38190   */\n      dup4\n        /* \"#utility.yul\":38171:38191   */\n      tag_609\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":38166:38191   */\n      swap3\n      pop\n        /* \"#utility.yul\":38359:38360   */\n      dup2\n        /* \"#utility.yul\":38291:38357   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":38287:38361   */\n      div\n        /* \"#utility.yul\":38284:38285   */\n      dup4\n        /* \"#utility.yul\":38281:38362   */\n      gt\n        /* \"#utility.yul\":38276:38277   */\n      dup3\n        /* \"#utility.yul\":38269:38278   */\n      iszero\n        /* \"#utility.yul\":38262:38279   */\n      iszero\n        /* \"#utility.yul\":38258:38363   */\n      and\n        /* \"#utility.yul\":38255:38257   */\n      iszero\n      tag_739\n      jumpi\n        /* \"#utility.yul\":38366:38384   */\n      tag_740\n      tag_729\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":38255:38257   */\n    tag_739:\n        /* \"#utility.yul\":38414:38415   */\n      dup3\n        /* \"#utility.yul\":38411:38412   */\n      dup3\n        /* \"#utility.yul\":38407:38416   */\n      mul\n        /* \"#utility.yul\":38396:38416   */\n      swap1\n      pop\n        /* \"#utility.yul\":38122:38422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":38428:38524   */\n    tag_462:\n      0x00\n        /* \"#utility.yul\":38494:38518   */\n      tag_742\n        /* \"#utility.yul\":38512:38517   */\n      dup3\n        /* \"#utility.yul\":38494:38518   */\n      tag_743\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":38483:38518   */\n      swap1\n      pop\n        /* \"#utility.yul\":38473:38524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":38530:38634   */\n    tag_455:\n      0x00\n        /* \"#utility.yul\":38604:38628   */\n      tag_745\n        /* \"#utility.yul\":38622:38627   */\n      dup3\n        /* \"#utility.yul\":38604:38628   */\n      tag_743\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":38593:38628   */\n      swap1\n      pop\n        /* \"#utility.yul\":38583:38634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":38640:38730   */\n    tag_525:\n      0x00\n        /* \"#utility.yul\":38717:38722   */\n      dup2\n        /* \"#utility.yul\":38710:38723   */\n      iszero\n        /* \"#utility.yul\":38703:38724   */\n      iszero\n        /* \"#utility.yul\":38692:38724   */\n      swap1\n      pop\n        /* \"#utility.yul\":38682:38730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":38736:38813   */\n    tag_532:\n      0x00\n        /* \"#utility.yul\":38802:38807   */\n      dup2\n        /* \"#utility.yul\":38791:38807   */\n      swap1\n      pop\n        /* \"#utility.yul\":38781:38813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":38819:38956   */\n    tag_748:\n      0x00\n        /* \"#utility.yul\":38898:38903   */\n      dup2\n        /* \"#utility.yul\":38887:38903   */\n      swap1\n      pop\n        /* \"#utility.yul\":38904:38950   */\n      tag_750\n        /* \"#utility.yul\":38944:38949   */\n      dup3\n        /* \"#utility.yul\":38904:38950   */\n      tag_751\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":38877:38956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":38962:39038   */\n    tag_565:\n      0x00\n        /* \"#utility.yul\":39027:39032   */\n      dup2\n        /* \"#utility.yul\":39016:39032   */\n      swap1\n      pop\n        /* \"#utility.yul\":39006:39038   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":39044:39170   */\n    tag_743:\n      0x00\n        /* \"#utility.yul\":39121:39163   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":39114:39119   */\n      dup3\n        /* \"#utility.yul\":39110:39164   */\n      and\n        /* \"#utility.yul\":39099:39164   */\n      swap1\n      pop\n        /* \"#utility.yul\":39089:39170   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":39176:39253   */\n    tag_609:\n      0x00\n        /* \"#utility.yul\":39242:39247   */\n      dup2\n        /* \"#utility.yul\":39231:39247   */\n      swap1\n      pop\n        /* \"#utility.yul\":39221:39253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":39259:39668   */\n    tag_132:\n      0x00\n        /* \"#utility.yul\":39537:39661   */\n      tag_756\n        /* \"#utility.yul\":39646:39660   */\n      calldatasize\n        /* \"#utility.yul\":39638:39644   */\n      dup5\n        /* \"#utility.yul\":39631:39636   */\n      dup5\n        /* \"#utility.yul\":39537:39661   */\n      tag_316\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":39515:39661   */\n      swap1\n      pop\n        /* \"#utility.yul\":39449:39668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":39674:39828   */\n    tag_558:\n      0x00\n        /* \"#utility.yul\":39771:39822   */\n      tag_758\n        /* \"#utility.yul\":39816:39821   */\n      dup3\n        /* \"#utility.yul\":39771:39822   */\n      tag_759\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":39758:39822   */\n      swap1\n      pop\n        /* \"#utility.yul\":39748:39828   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":39834:39961   */\n    tag_759:\n      0x00\n        /* \"#utility.yul\":39931:39955   */\n      tag_761\n        /* \"#utility.yul\":39949:39954   */\n      dup3\n        /* \"#utility.yul\":39931:39955   */\n      tag_743\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":39918:39955   */\n      swap1\n      pop\n        /* \"#utility.yul\":39908:39961   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":39967:40104   */\n    tag_562:\n      0x00\n        /* \"#utility.yul\":40061:40098   */\n      tag_763\n        /* \"#utility.yul\":40092:40097   */\n      dup3\n        /* \"#utility.yul\":40061:40098   */\n      tag_748\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":40048:40098   */\n      swap1\n      pop\n        /* \"#utility.yul\":40038:40104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":40110:40264   */\n    tag_345:\n        /* \"#utility.yul\":40194:40200   */\n      dup3\n        /* \"#utility.yul\":40189:40192   */\n      dup2\n        /* \"#utility.yul\":40184:40187   */\n      dup4\n        /* \"#utility.yul\":40171:40201   */\n      calldatacopy\n        /* \"#utility.yul\":40256:40257   */\n      0x00\n        /* \"#utility.yul\":40247:40253   */\n      dup4\n        /* \"#utility.yul\":40242:40245   */\n      dup4\n        /* \"#utility.yul\":40238:40254   */\n      add\n        /* \"#utility.yul\":40231:40258   */\n      mstore\n        /* \"#utility.yul\":40161:40264   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":40270:40577   */\n    tag_540:\n        /* \"#utility.yul\":40338:40339   */\n      0x00\n        /* \"#utility.yul\":40348:40461   */\n    tag_766:\n        /* \"#utility.yul\":40362:40368   */\n      dup4\n        /* \"#utility.yul\":40359:40360   */\n      dup2\n        /* \"#utility.yul\":40356:40369   */\n      lt\n        /* \"#utility.yul\":40348:40461   */\n      iszero\n      tag_768\n      jumpi\n        /* \"#utility.yul\":40447:40448   */\n      dup1\n        /* \"#utility.yul\":40442:40445   */\n      dup3\n        /* \"#utility.yul\":40438:40449   */\n      add\n        /* \"#utility.yul\":40432:40450   */\n      mload\n        /* \"#utility.yul\":40428:40429   */\n      dup2\n        /* \"#utility.yul\":40423:40426   */\n      dup5\n        /* \"#utility.yul\":40419:40430   */\n      add\n        /* \"#utility.yul\":40412:40451   */\n      mstore\n        /* \"#utility.yul\":40384:40386   */\n      0x20\n        /* \"#utility.yul\":40381:40382   */\n      dup2\n        /* \"#utility.yul\":40377:40387   */\n      add\n        /* \"#utility.yul\":40372:40387   */\n      swap1\n      pop\n        /* \"#utility.yul\":40348:40461   */\n      jump(tag_766)\n    tag_768:\n        /* \"#utility.yul\":40479:40485   */\n      dup4\n        /* \"#utility.yul\":40476:40477   */\n      dup2\n        /* \"#utility.yul\":40473:40486   */\n      gt\n        /* \"#utility.yul\":40470:40472   */\n      iszero\n      tag_769\n      jumpi\n        /* \"#utility.yul\":40559:40560   */\n      0x00\n        /* \"#utility.yul\":40550:40556   */\n      dup5\n        /* \"#utility.yul\":40545:40548   */\n      dup5\n        /* \"#utility.yul\":40541:40557   */\n      add\n        /* \"#utility.yul\":40534:40561   */\n      mstore\n        /* \"#utility.yul\":40470:40472   */\n    tag_769:\n        /* \"#utility.yul\":40319:40577   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":40583:40816   */\n    tag_155:\n      0x00\n        /* \"#utility.yul\":40645:40669   */\n      tag_771\n        /* \"#utility.yul\":40663:40668   */\n      dup3\n        /* \"#utility.yul\":40645:40669   */\n      tag_609\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":40636:40669   */\n      swap2\n      pop\n        /* \"#utility.yul\":40691:40757   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":40684:40689   */\n      dup3\n        /* \"#utility.yul\":40681:40758   */\n      eq\n        /* \"#utility.yul\":40678:40680   */\n      iszero\n      tag_772\n      jumpi\n        /* \"#utility.yul\":40761:40779   */\n      tag_773\n      tag_729\n      jump\t// in\n    tag_773:\n        /* \"#utility.yul\":40678:40680   */\n    tag_772:\n        /* \"#utility.yul\":40808:40809   */\n      0x01\n        /* \"#utility.yul\":40801:40806   */\n      dup3\n        /* \"#utility.yul\":40797:40810   */\n      add\n        /* \"#utility.yul\":40790:40810   */\n      swap1\n      pop\n        /* \"#utility.yul\":40626:40816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":40822:41002   */\n    tag_729:\n        /* \"#utility.yul\":40870:40947   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":40867:40868   */\n      0x00\n        /* \"#utility.yul\":40860:40948   */\n      mstore\n        /* \"#utility.yul\":40967:40971   */\n      0x11\n        /* \"#utility.yul\":40964:40965   */\n      0x04\n        /* \"#utility.yul\":40957:40972   */\n      mstore\n        /* \"#utility.yul\":40991:40995   */\n      0x24\n        /* \"#utility.yul\":40988:40989   */\n      0x00\n        /* \"#utility.yul\":40981:40996   */\n      revert\n        /* \"#utility.yul\":41008:41188   */\n    tag_735:\n        /* \"#utility.yul\":41056:41133   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":41053:41054   */\n      0x00\n        /* \"#utility.yul\":41046:41134   */\n      mstore\n        /* \"#utility.yul\":41153:41157   */\n      0x12\n        /* \"#utility.yul\":41150:41151   */\n      0x04\n        /* \"#utility.yul\":41143:41158   */\n      mstore\n        /* \"#utility.yul\":41177:41181   */\n      0x24\n        /* \"#utility.yul\":41174:41175   */\n      0x00\n        /* \"#utility.yul\":41167:41182   */\n      revert\n        /* \"#utility.yul\":41194:41374   */\n    tag_776:\n        /* \"#utility.yul\":41242:41319   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":41239:41240   */\n      0x00\n        /* \"#utility.yul\":41232:41320   */\n      mstore\n        /* \"#utility.yul\":41339:41343   */\n      0x21\n        /* \"#utility.yul\":41336:41337   */\n      0x04\n        /* \"#utility.yul\":41329:41344   */\n      mstore\n        /* \"#utility.yul\":41363:41367   */\n      0x24\n        /* \"#utility.yul\":41360:41361   */\n      0x00\n        /* \"#utility.yul\":41353:41368   */\n      revert\n        /* \"#utility.yul\":41380:41560   */\n    tag_692:\n        /* \"#utility.yul\":41428:41505   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":41425:41426   */\n      0x00\n        /* \"#utility.yul\":41418:41506   */\n      mstore\n        /* \"#utility.yul\":41525:41529   */\n      0x41\n        /* \"#utility.yul\":41522:41523   */\n      0x04\n        /* \"#utility.yul\":41515:41530   */\n      mstore\n        /* \"#utility.yul\":41549:41553   */\n      0x24\n        /* \"#utility.yul\":41546:41547   */\n      0x00\n        /* \"#utility.yul\":41539:41554   */\n      revert\n        /* \"#utility.yul\":41566:41668   */\n    tag_542:\n      0x00\n        /* \"#utility.yul\":41658:41660   */\n      0x1f\n        /* \"#utility.yul\":41654:41661   */\n      not\n        /* \"#utility.yul\":41649:41651   */\n      0x1f\n        /* \"#utility.yul\":41642:41647   */\n      dup4\n        /* \"#utility.yul\":41638:41652   */\n      add\n        /* \"#utility.yul\":41634:41662   */\n      and\n        /* \"#utility.yul\":41624:41662   */\n      swap1\n      pop\n        /* \"#utility.yul\":41614:41668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":41674:41792   */\n    tag_751:\n        /* \"#utility.yul\":41760:41761   */\n      0x02\n        /* \"#utility.yul\":41753:41758   */\n      dup2\n        /* \"#utility.yul\":41750:41762   */\n      lt\n        /* \"#utility.yul\":41740:41742   */\n      tag_781\n      jumpi\n        /* \"#utility.yul\":41766:41784   */\n      tag_782\n      tag_776\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":41740:41742   */\n    tag_781:\n        /* \"#utility.yul\":41730:41792   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":41798:41920   */\n    tag_349:\n        /* \"#utility.yul\":41871:41895   */\n      tag_784\n        /* \"#utility.yul\":41889:41894   */\n      dup2\n        /* \"#utility.yul\":41871:41895   */\n      tag_462\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":41864:41869   */\n      dup2\n        /* \"#utility.yul\":41861:41896   */\n      eq\n        /* \"#utility.yul\":41851:41853   */\n      tag_785\n      jumpi\n        /* \"#utility.yul\":41910:41911   */\n      0x00\n        /* \"#utility.yul\":41907:41908   */\n      dup1\n        /* \"#utility.yul\":41900:41912   */\n      revert\n        /* \"#utility.yul\":41851:41853   */\n    tag_785:\n        /* \"#utility.yul\":41841:41920   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":41926:42064   */\n    tag_356:\n        /* \"#utility.yul\":42007:42039   */\n      tag_787\n        /* \"#utility.yul\":42033:42038   */\n      dup2\n        /* \"#utility.yul\":42007:42039   */\n      tag_455\n      jump\t// in\n    tag_787:\n        /* \"#utility.yul\":42000:42005   */\n      dup2\n        /* \"#utility.yul\":41997:42040   */\n      eq\n        /* \"#utility.yul\":41987:41989   */\n      tag_788\n      jumpi\n        /* \"#utility.yul\":42054:42055   */\n      0x00\n        /* \"#utility.yul\":42051:42052   */\n      dup1\n        /* \"#utility.yul\":42044:42056   */\n      revert\n        /* \"#utility.yul\":41987:41989   */\n    tag_788:\n        /* \"#utility.yul\":41977:42064   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":42070:42186   */\n    tag_364:\n        /* \"#utility.yul\":42140:42161   */\n      tag_790\n        /* \"#utility.yul\":42155:42160   */\n      dup2\n        /* \"#utility.yul\":42140:42161   */\n      tag_525\n      jump\t// in\n    tag_790:\n        /* \"#utility.yul\":42133:42138   */\n      dup2\n        /* \"#utility.yul\":42130:42162   */\n      eq\n        /* \"#utility.yul\":42120:42122   */\n      tag_791\n      jumpi\n        /* \"#utility.yul\":42176:42177   */\n      0x00\n        /* \"#utility.yul\":42173:42174   */\n      dup1\n        /* \"#utility.yul\":42166:42178   */\n      revert\n        /* \"#utility.yul\":42120:42122   */\n    tag_791:\n        /* \"#utility.yul\":42110:42186   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":42192:42314   */\n    tag_371:\n        /* \"#utility.yul\":42265:42289   */\n      tag_793\n        /* \"#utility.yul\":42283:42288   */\n      dup2\n        /* \"#utility.yul\":42265:42289   */\n      tag_532\n      jump\t// in\n    tag_793:\n        /* \"#utility.yul\":42258:42263   */\n      dup2\n        /* \"#utility.yul\":42255:42290   */\n      eq\n        /* \"#utility.yul\":42245:42247   */\n      tag_794\n      jumpi\n        /* \"#utility.yul\":42304:42305   */\n      0x00\n        /* \"#utility.yul\":42301:42302   */\n      dup1\n        /* \"#utility.yul\":42294:42306   */\n      revert\n        /* \"#utility.yul\":42245:42247   */\n    tag_794:\n        /* \"#utility.yul\":42235:42314   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":42320:42432   */\n    tag_379:\n        /* \"#utility.yul\":42406:42407   */\n      0x02\n        /* \"#utility.yul\":42399:42404   */\n      dup2\n        /* \"#utility.yul\":42396:42408   */\n      lt\n        /* \"#utility.yul\":42386:42388   */\n      tag_796\n      jumpi\n        /* \"#utility.yul\":42422:42423   */\n      0x00\n        /* \"#utility.yul\":42419:42420   */\n      dup1\n        /* \"#utility.yul\":42412:42424   */\n      revert\n        /* \"#utility.yul\":42386:42388   */\n    tag_796:\n        /* \"#utility.yul\":42376:42432   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":42438:42560   */\n    tag_402:\n        /* \"#utility.yul\":42511:42535   */\n      tag_798\n        /* \"#utility.yul\":42529:42534   */\n      dup2\n        /* \"#utility.yul\":42511:42535   */\n      tag_609\n      jump\t// in\n    tag_798:\n        /* \"#utility.yul\":42504:42509   */\n      dup2\n        /* \"#utility.yul\":42501:42536   */\n      eq\n        /* \"#utility.yul\":42491:42493   */\n      tag_799\n      jumpi\n        /* \"#utility.yul\":42550:42551   */\n      0x00\n        /* \"#utility.yul\":42547:42548   */\n      dup1\n        /* \"#utility.yul\":42540:42552   */\n      revert\n        /* \"#utility.yul\":42491:42493   */\n    tag_799:\n        /* \"#utility.yul\":42481:42560   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a549b58b89159834cfedc8c81afbbb14db13da9de507e6aa715c9d7e64d6438e64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:805:15",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:15",
														"type": ""
													}
												],
												"src": "7:143:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:207:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:15"
															},
															"nodeType": "YulIf",
															"src": "243:2:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "305:128:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "320:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "324:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "349:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "395:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "406:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "415:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "359:31:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "359:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "349:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:15",
														"type": ""
													}
												],
												"src": "156:284:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "491:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "501:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "530:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "512:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "512:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "501:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "483:7:15",
														"type": ""
													}
												],
												"src": "446:96:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:81:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "603:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "618:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "625:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "614:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "603:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "575:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "585:7:15",
														"type": ""
													}
												],
												"src": "548:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "723:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "780:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "789:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "792:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "782:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "782:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "782:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "746:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "753:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "753:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "743:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "743:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "736:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:43:15"
															},
															"nodeType": "YulIf",
															"src": "733:2:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "716:5:15",
														"type": ""
													}
												],
												"src": "680:122:15"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620032c7380380620032c7833981810160405281019062000037919062000096565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000110565b6000815190506200009081620000f6565b92915050565b600060208284031215620000a957600080fd5b6000620000b9848285016200007f565b91505092915050565b6000620000cf82620000d6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200010181620000c2565b81146200010d57600080fd5b50565b6131a780620001206000396000f3fe6080604052600436106100ab5760003560e01c80639af1d35a116100645780639af1d35a146101e0578063a2e74af61461020b578063ef3858ab14610248578063f46901ed14610264578063f654df7a146102a1578063fd07291f146102de576100b2565b8063017e7e58146100b7578063239aad0a146100e2578063257b66b0146100fe5780633d18678e1461013b5780638ac051f2146101785780638e7fa96a146101b5576100b2565b366100b257005b600080fd5b3480156100c357600080fd5b506100cc61031b565b6040516100d991906126fb565b60405180910390f35b6100fc60048036038101906100f79190611f5c565b61033f565b005b34801561010a57600080fd5b5061012560048036038101906101209190611fc6565b61095a565b60405161013291906126e0565b60405180910390f35b34801561014757600080fd5b50610162600480360381019061015d9190611fc6565b61098d565b60405161016f91906127b4565b60405180910390f35b34801561018457600080fd5b5061019f600480360381019061019a9190611e4e565b610a73565b6040516101ac91906126e0565b60405180910390f35b3480156101c157600080fd5b506101ca610afa565b6040516101d791906126e0565b60405180910390f35b3480156101ec57600080fd5b506101f5610b20565b6040516102029190612949565b60405180910390f35b34801561021757600080fd5b50610232600480360381019061022d9190611e4e565b610b26565b60405161023f91906127b4565b60405180910390f35b610262600480360381019061025d9190611fef565b610c72565b005b34801561027057600080fd5b5061028b60048036038101906102869190611ea0565b610db5565b60405161029891906127b4565b60405180910390f35b3480156102ad57600080fd5b506102c860048036038101906102c39190611fef565b610f00565b6040516102d591906127b4565b60405180910390f35b3480156102ea57600080fd5b5061030560048036038101906103009190611ec9565b61105e565b6040516103129190612949565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006103998280600001906103549190612b36565b80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505061105e565b905060006103cc670de0b6b3a76400006103be600254856110d890919063ffffffff16565b61115390919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168360a00160208101906103f99190611e4e565b73ffffffffffffffffffffffffffffffffffffffff1614156104915780826104219190612dd5565b3414610462576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045990612929565b60405180910390fd5b61048c60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168261119d565b6104ee565b6104af8360a00160208101906104a79190611e4e565b3330856112c3565b6104ed8360a00160208101906104c59190611e4e565b3360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846112c3565b5b60005b838060e001906105019190612b36565b905081101561095457600060036000868060e001906105209190612b36565b85818110610557577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000821480156105b157506004858061010001906105ad9190612b36565b9050145b1561068b576106868560a00160208101906105cc9190611e4e565b828760600160208101906105e09190611ea0565b888061010001906105f19190612b36565b6002818110610629577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135898061010001906106419190612b36565b80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506113fc565b610940565b6001821480156106ad5750600185806101c001906106a99190612a88565b9050115b156107bf576107ba856102000160208101906106c99190611f33565b8660a00160208101906106dc9190611e4e565b83888061012001906106ee9190612adf565b906106f99190612f37565b896101400180360381019061070e9190611f9d565b8a806101e0019061071f9190612a31565b80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b806101c001906107709190612a88565b80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508c6080013561150b565b61093f565b61093e818680600001906107d39190612b36565b8581811061080a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201358780602001906108219190612b36565b86818110610858577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013588806040019061086f91906129da565b878181106108a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020028101906108b89190612b8d565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505089606001602081019061090e9190611ea0565b8a608001358b60a00160208101906109269190611e4e565b8c60c00160208101906109399190611e4e565b6117ac565b5b5b50808061094c90612fc4565b9150506104f1565b50505050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a16906128c9565b60405180910390fd5b6000821415610a63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5a90612909565b60405180910390fd5b8160028190555060019050919050565b60008173ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015610abb57600080fd5b505afa158015610acf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af39190611e77565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610baf906128c9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1f90612909565b60405180910390fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b6000610ca3670de0b6b3a7640000610c95600254866110d890919063ffffffff16565b61115390919063ffffffff16565b90508083610cb19190612dd5565b3414610cf2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce990612929565b60405180910390fd5b610d1c60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168261119d565b730d500b1d8e8ef31e21c99d1db9a6444d3adf127073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b158015610d7857600080fd5b505af1158015610d8c573d6000803e3d6000fd5b5050505050610db0730d500b1d8e8ef31e21c99d1db9a6444d3adf12708385611982565b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3e906128c9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610eb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eae90612909565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f89906128c9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611002576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff990612909565b60405180910390fd5b816003600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905092915050565b60008060005b83518110156110ce578381815181106110a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151826110b99190612dd5565b915080806110c690612fc4565b915050611064565b5080915050919050565b6000808314156110eb576000905061114d565b600082846110f99190612e5c565b90508284826111089190612e2b565b14611148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113f906128a9565b60405180910390fd5b809150505b92915050565b600061119583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611ab8565b905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff1682600067ffffffffffffffff8111156111f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561122a5781602001600182028036833780820191505090505b5060405161123891906126c9565b60006040518083038185875af1925050503d8060008114611275576040519150601f19603f3d011682016040523d82523d6000602084013e61127a565b606091505b50509050806112be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b590612889565b60405180910390fd5b505050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016112f793929190612754565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161134591906126c9565b6000604051808303816000865af19150503d8060008114611382576040519150601f19603f3d011682016040523d82523d6000602084013e611387565b606091505b50915091508180156113b557506000815114806113b45750808060200190518101906113b39190611f0a565b5b5b6113f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113eb90612869565b60405180910390fd5b505050505050565b8473ffffffffffffffffffffffffffffffffffffffff1663095ea7b385846040518363ffffffff1660e01b815260040161143792919061278b565b602060405180830381600087803b15801561145157600080fd5b505af1158015611465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114899190611f0a565b50611495858584611982565b8373ffffffffffffffffffffffffffffffffffffffff16633502eea88487846040518463ffffffff1660e01b81526004016114d293929190612716565b600060405180830381600087803b1580156114ec57600080fd5b505af1158015611500573d6000803e3d6000fd5b505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156116095761158f868660008151811061157e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516060015161119d565b8573ffffffffffffffffffffffffffffffffffffffff16631738b50e8987878787876040518763ffffffff1660e01b81526004016115d2969594939291906127cf565b600060405180830381600087803b1580156115ec57600080fd5b505af1158015611600573d6000803e3d6000fd5b505050506117a2565b8573ffffffffffffffffffffffffffffffffffffffff1663095ea7b38787600081518110611660577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151606001516040518363ffffffff1660e01b815260040161168992919061278b565b602060405180830381600087803b1580156116a357600080fd5b505af11580156116b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116db9190611f0a565b5061172c87878760008151811061171b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160600151611982565b8573ffffffffffffffffffffffffffffffffffffffff16631738b50e8987878787876040518763ffffffff1660e01b815260040161176f969594939291906127cf565b600060405180830381600087803b15801561178957600080fd5b505af115801561179d573d6000803e3d6000fd5b505050505b5050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611867576117eb888861119d565b8773ffffffffffffffffffffffffffffffffffffffff1663b1a271d4888888888888886040518863ffffffff1660e01b81526004016118309796959493929190612964565b600060405180830381600087803b15801561184a57600080fd5b505af115801561185e573d6000803e3d6000fd5b50505050611978565b8773ffffffffffffffffffffffffffffffffffffffff1663095ea7b389896040518363ffffffff1660e01b81526004016118a292919061278b565b602060405180830381600087803b1580156118bc57600080fd5b505af11580156118d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f49190611f0a565b50611900828989611982565b8773ffffffffffffffffffffffffffffffffffffffff1663b1a271d4888888888888886040518863ffffffff1660e01b81526004016119459796959493929190612964565b600060405180830381600087803b15801561195f57600080fd5b505af1158015611973573d6000803e3d6000fd5b505050505b5050505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016119b492919061278b565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611a0291906126c9565b6000604051808303816000865af19150503d8060008114611a3f576040519150601f19603f3d011682016040523d82523d6000602084013e611a44565b606091505b5091509150818015611a725750600081511480611a71575080806020019051810190611a709190611f0a565b5b5b611ab1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa8906128e9565b60405180910390fd5b5050505050565b60008083118290611aff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af69190612847565b60405180910390fd5b5060008385611b0e9190612e2b565b9050809150509392505050565b6000611b2e611b2984612c15565b612be4565b9050808382526020820190508260005b85811015611b6e5781358501611b548882611d25565b845260208401935060208301925050600181019050611b3e565b5050509392505050565b6000611b8b611b8684612c41565b612be4565b90508083825260208201905082856020860282011115611baa57600080fd5b60005b85811015611bda5781611bc08882611e39565b845260208401935060208301925050600181019050611bad565b5050509392505050565b6000611bf7611bf284612c6d565b612be4565b905082815260208101848484011115611c0f57600080fd5b611c1a848285612f82565b509392505050565b600081359050611c31816130ee565b92915050565b600081519050611c46816130ee565b92915050565b600081359050611c5b81613105565b92915050565b600082601f830112611c7257600080fd5b8135611c82848260208601611b78565b91505092915050565b600081359050611c9a8161311c565b92915050565b600081519050611caf8161311c565b92915050565b600081359050611cc481613133565b92915050565b600082601f830112611cdb57600080fd5b8135611ceb848260208601611be4565b91505092915050565b600081359050611d038161314a565b92915050565b60006102208284031215611d1c57600080fd5b81905092915050565b600060a08284031215611d3757600080fd5b611d4160a0612be4565b90506000611d5184828501611cb5565b6000830152506020611d6584828501611e39565b6020830152506040611d7984828501611e39565b6040830152506060611d8d84828501611e39565b606083015250608082013567ffffffffffffffff811115611dad57600080fd5b611db984828501611cca565b60808301525092915050565b600060808284031215611dd757600080fd5b611de16080612be4565b90506000611df184828501611c22565b6000830152506020611e0584828501611c8b565b6020830152506040611e1984828501611c4c565b6040830152506060611e2d84828501611c8b565b60608301525092915050565b600081359050611e488161315a565b92915050565b600060208284031215611e6057600080fd5b6000611e6e84828501611c22565b91505092915050565b600060208284031215611e8957600080fd5b6000611e9784828501611c37565b91505092915050565b600060208284031215611eb257600080fd5b6000611ec084828501611c4c565b91505092915050565b600060208284031215611edb57600080fd5b600082013567ffffffffffffffff811115611ef557600080fd5b611f0184828501611c61565b91505092915050565b600060208284031215611f1c57600080fd5b6000611f2a84828501611ca0565b91505092915050565b600060208284031215611f4557600080fd5b6000611f5384828501611cf4565b91505092915050565b600060208284031215611f6e57600080fd5b600082013567ffffffffffffffff811115611f8857600080fd5b611f9484828501611d09565b91505092915050565b600060808284031215611faf57600080fd5b6000611fbd84828501611dc5565b91505092915050565b600060208284031215611fd857600080fd5b6000611fe684828501611e39565b91505092915050565b6000806040838503121561200257600080fd5b600061201085828601611e39565b925050602061202185828601611c22565b9150509250929050565b60006120378383612322565b60208301905092915050565b600061204f8383612340565b60208301905092915050565b600061206783836125e0565b905092915050565b600061207b83836126ab565b60208301905092915050565b61209081612ec8565b82525050565b61209f81612ec8565b82525050565b6120ae81612eb6565b82525050565b6120bd81612eb6565b82525050565b60006120ce82612cdd565b6120d88185612d53565b93506120e383612c9d565b8060005b838110156121145781516120fb888261202b565b975061210683612d1f565b9250506001810190506120e7565b5085935050505092915050565b600061212c82612ce8565b6121368185612d64565b935061214183612cad565b8060005b838110156121725781516121598882612043565b975061216483612d2c565b925050600181019050612145565b5085935050505092915050565b600061218a82612cf3565b6121948185612d75565b9350836020820285016121a685612cbd565b8060005b858110156121e257848403895281516121c3858261205b565b94506121ce83612d39565b925060208a019950506001810190506121aa565b50829750879550505050505092915050565b60006121ff82612cfe565b6122098185612d86565b935061221483612ccd565b8060005b8381101561224557815161222c888261206f565b975061223783612d46565b925050600181019050612218565b5085935050505092915050565b61225b81612eda565b82525050565b61226a81612eda565b82525050565b61227981612ee6565b82525050565b600061228a82612d09565b6122948185612d97565b93506122a4818560208601612f91565b6122ad816130c9565b840191505092915050565b60006122c382612d09565b6122cd8185612da8565b93506122dd818560208601612f91565b6122e6816130c9565b840191505092915050565b60006122fc82612d09565b6123068185612db9565b9350612316818560208601612f91565b80840191505092915050565b61232b81612f4c565b82525050565b61233a81612f70565b82525050565b61234981612f03565b82525050565b600061235a82612d14565b6123648185612dc4565b9350612374818560208601612f91565b61237d816130c9565b840191505092915050565b6000612395603183612dc4565b91507f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260008301527f616e7366657246726f6d206661696c65640000000000000000000000000000006020830152604082019050919050565b60006123fb603483612dc4565b91507f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60008301527f20455448207472616e73666572206661696c65640000000000000000000000006020830152604082019050919050565b6000612461602183612dc4565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006124c7601b83612dc4565b91507f426172746572737761705632526f757465723a204558504952454400000000006000830152602082019050919050565b6000612507602d83612dc4565b91507f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260008301527f616e73666572206661696c6564000000000000000000000000000000000000006020830152604082019050919050565b600061256d601583612dc4565b91507f426172746572737761703a20464f5242494444454e00000000000000000000006000830152602082019050919050565b60006125ad600e83612dc4565b91507f50726963652069732077726f6e670000000000000000000000000000000000006000830152602082019050919050565b600060a0830160008301516125f86000860182612270565b50602083015161260b60208601826126ab565b50604083015161261e60408601826126ab565b50606083015161263160608601826126ab565b5060808301518482036080860152612649828261227f565b9150508091505092915050565b60808201600082015161266c60008501826120a5565b50602082015161267f6020850182612252565b5060408201516126926040850182612087565b5060608201516126a56060850182612252565b50505050565b6126b481612f2d565b82525050565b6126c381612f2d565b82525050565b60006126d582846122f1565b915081905092915050565b60006020820190506126f560008301846120b4565b92915050565b60006020820190506127106000830184612096565b92915050565b600060608201905061272b60008301866120b4565b61273860208301856120b4565b818103604083015261274a81846121f4565b9050949350505050565b600060608201905061276960008301866120b4565b61277660208301856120b4565b61278360408301846126ba565b949350505050565b60006040820190506127a060008301856120b4565b6127ad60208301846126ba565b9392505050565b60006020820190506127c96000830184612261565b92915050565b6000610120820190506127e56000830189612331565b81810360208301526127f7818861217f565b90506128066040830187612656565b81810360c083015261281881866120c3565b905081810360e083015261282c8185612121565b905061283c6101008301846126ba565b979650505050505050565b60006020820190508181036000830152612861818461234f565b905092915050565b6000602082019050818103600083015261288281612388565b9050919050565b600060208201905081810360008301526128a2816123ee565b9050919050565b600060208201905081810360008301526128c281612454565b9050919050565b600060208201905081810360008301526128e2816124ba565b9050919050565b60006020820190508181036000830152612902816124fa565b9050919050565b6000602082019050818103600083015261292281612560565b9050919050565b60006020820190508181036000830152612942816125a0565b9050919050565b600060208201905061295e60008301846126ba565b92915050565b600060e082019050612979600083018a6126ba565b61298660208301896126ba565b818103604083015261299881886122b8565b90506129a760608301876120b4565b6129b460808301866126ba565b6129c160a08301856120b4565b6129ce60c08301846120b4565b98975050505050505050565b600080833560016020038436030381126129f357600080fd5b80840192508235915067ffffffffffffffff821115612a1157600080fd5b602083019250602082023603831315612a2957600080fd5b509250929050565b60008083356001602003843603038112612a4a57600080fd5b80840192508235915067ffffffffffffffff821115612a6857600080fd5b602083019250602082023603831315612a8057600080fd5b509250929050565b60008083356001602003843603038112612aa157600080fd5b80840192508235915067ffffffffffffffff821115612abf57600080fd5b602083019250602082023603831315612ad757600080fd5b509250929050565b60008083356001602003843603038112612af857600080fd5b80840192508235915067ffffffffffffffff821115612b1657600080fd5b602083019250602082023603831315612b2e57600080fd5b509250929050565b60008083356001602003843603038112612b4f57600080fd5b80840192508235915067ffffffffffffffff821115612b6d57600080fd5b602083019250602082023603831315612b8557600080fd5b509250929050565b60008083356001602003843603038112612ba657600080fd5b80840192508235915067ffffffffffffffff821115612bc457600080fd5b602083019250600182023603831315612bdc57600080fd5b509250929050565b6000604051905081810181811067ffffffffffffffff82111715612c0b57612c0a61309a565b5b8060405250919050565b600067ffffffffffffffff821115612c3057612c2f61309a565b5b602082029050602081019050919050565b600067ffffffffffffffff821115612c5c57612c5b61309a565b5b602082029050602081019050919050565b600067ffffffffffffffff821115612c8857612c8761309a565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000612de082612f2d565b9150612deb83612f2d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612e2057612e1f61300d565b5b828201905092915050565b6000612e3682612f2d565b9150612e4183612f2d565b925082612e5157612e5061303c565b5b828204905092915050565b6000612e6782612f2d565b9150612e7283612f2d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612eab57612eaa61300d565b5b828202905092915050565b6000612ec182612f0d565b9050919050565b6000612ed382612f0d565b9050919050565b60008115159050919050565b6000819050919050565b6000819050612efe826130da565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612f44368484611b1b565b905092915050565b6000612f5782612f5e565b9050919050565b6000612f6982612f0d565b9050919050565b6000612f7b82612ef0565b9050919050565b82818337600083830152505050565b60005b83811015612faf578082015181840152602081019050612f94565b83811115612fbe576000848401525b50505050565b6000612fcf82612f2d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156130025761300161300d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b600281106130eb576130ea61306b565b5b50565b6130f781612eb6565b811461310257600080fd5b50565b61310e81612ec8565b811461311957600080fd5b50565b61312581612eda565b811461313057600080fd5b50565b61313c81612ee6565b811461314757600080fd5b50565b6002811061315757600080fd5b50565b61316381612f2d565b811461316e57600080fd5b5056fea2646970667358221220a549b58b89159834cfedc8c81afbbb14db13da9de507e6aa715c9d7e64d6438e64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x32C7 CODESIZE SUB DUP1 PUSH3 0x32C7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x96 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x110 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x90 DUP2 PUSH3 0xF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xB9 DUP5 DUP3 DUP6 ADD PUSH3 0x7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCF DUP3 PUSH3 0xD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x101 DUP2 PUSH3 0xC2 JUMP JUMPDEST DUP2 EQ PUSH3 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x31A7 DUP1 PUSH3 0x120 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9AF1D35A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9AF1D35A EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xA2E74AF6 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xEF3858AB EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xF46901ED EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xF654DF7A EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xFD07291F EQ PUSH2 0x2DE JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x17E7E58 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0x239AAD0A EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x257B66B0 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x3D18678E EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x8AC051F2 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x8E7FA96A EQ PUSH2 0x1B5 JUMPI PUSH2 0xB2 JUMP JUMPDEST CALLDATASIZE PUSH2 0xB2 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0x31B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x26FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST PUSH2 0x95A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x26E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x26E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CA PUSH2 0xAFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x26E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F5 PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1FEF JUMP JUMPDEST PUSH2 0xC72 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1EA0 JUMP JUMPDEST PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1FEF JUMP JUMPDEST PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1EC9 JUMP JUMPDEST PUSH2 0x105E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x399 DUP3 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3CC PUSH8 0xDE0B6B3A7640000 PUSH2 0x3BE PUSH1 0x2 SLOAD DUP6 PUSH2 0x10D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1153 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0xA0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x491 JUMPI DUP1 DUP3 PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x2DD5 JUMP JUMPDEST CALLVALUE EQ PUSH2 0x462 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x459 SWAP1 PUSH2 0x2929 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x48C PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x119D JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x4AF DUP4 PUSH1 0xA0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST CALLER ADDRESS DUP6 PUSH2 0x12C3 JUMP JUMPDEST PUSH2 0x4ED DUP4 PUSH1 0xA0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x12C3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP1 PUSH1 0xE0 ADD SWAP1 PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x954 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 DUP1 PUSH1 0xE0 ADD SWAP1 PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST DUP6 DUP2 DUP2 LT PUSH2 0x557 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 EQ DUP1 ISZERO PUSH2 0x5B1 JUMPI POP PUSH1 0x4 DUP6 DUP1 PUSH2 0x100 ADD SWAP1 PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST SWAP1 POP EQ JUMPDEST ISZERO PUSH2 0x68B JUMPI PUSH2 0x686 DUP6 PUSH1 0xA0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST DUP3 DUP8 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x1EA0 JUMP JUMPDEST DUP9 DUP1 PUSH2 0x100 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 LT PUSH2 0x629 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP10 DUP1 PUSH2 0x100 ADD SWAP1 PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x940 JUMP JUMPDEST PUSH1 0x1 DUP3 EQ DUP1 ISZERO PUSH2 0x6AD JUMPI POP PUSH1 0x1 DUP6 DUP1 PUSH2 0x1C0 ADD SWAP1 PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0x2A88 JUMP JUMPDEST SWAP1 POP GT JUMPDEST ISZERO PUSH2 0x7BF JUMPI PUSH2 0x7BA DUP6 PUSH2 0x200 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST DUP7 PUSH1 0xA0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST DUP4 DUP9 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x2ADF JUMP JUMPDEST SWAP1 PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0x2F37 JUMP JUMPDEST DUP10 PUSH2 0x140 ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x1F9D JUMP JUMPDEST DUP11 DUP1 PUSH2 0x1E0 ADD SWAP1 PUSH2 0x71F SWAP2 SWAP1 PUSH2 0x2A31 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP12 DUP1 PUSH2 0x1C0 ADD SWAP1 PUSH2 0x770 SWAP2 SWAP1 PUSH2 0x2A88 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP13 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x150B JUMP JUMPDEST PUSH2 0x93F JUMP JUMPDEST PUSH2 0x93E DUP2 DUP7 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x7D3 SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST DUP6 DUP2 DUP2 LT PUSH2 0x80A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP8 DUP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST DUP7 DUP2 DUP2 LT PUSH2 0x858 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP9 DUP1 PUSH1 0x40 ADD SWAP1 PUSH2 0x86F SWAP2 SWAP1 PUSH2 0x29DA JUMP JUMPDEST DUP8 DUP2 DUP2 LT PUSH2 0x8A6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x8B8 SWAP2 SWAP1 PUSH2 0x2B8D JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP10 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x90E SWAP2 SWAP1 PUSH2 0x1EA0 JUMP JUMPDEST DUP11 PUSH1 0x80 ADD CALLDATALOAD DUP12 PUSH1 0xA0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST DUP13 PUSH1 0xC0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x939 SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH2 0x17AC JUMP JUMPDEST JUMPDEST JUMPDEST POP DUP1 DUP1 PUSH2 0x94C SWAP1 PUSH2 0x2FC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4F1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA16 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5A SWAP1 PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xACF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF3 SWAP2 SWAP1 PUSH2 0x1E77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAF SWAP1 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1F SWAP1 PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA3 PUSH8 0xDE0B6B3A7640000 PUSH2 0xC95 PUSH1 0x2 SLOAD DUP7 PUSH2 0x10D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1153 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH2 0xCB1 SWAP2 SWAP1 PUSH2 0x2DD5 JUMP JUMPDEST CALLVALUE EQ PUSH2 0xCF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE9 SWAP1 PUSH2 0x2929 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD1C PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x119D JUMP JUMPDEST PUSH20 0xD500B1D8E8EF31E21C99D1DB9A6444D3ADF1270 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0xDB0 PUSH20 0xD500B1D8E8EF31E21C99D1DB9A6444D3ADF1270 DUP4 DUP6 PUSH2 0x1982 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3E SWAP1 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEAE SWAP1 PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF89 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1002 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF9 SWAP1 PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x10CE JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x10A6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x10B9 SWAP2 SWAP1 PUSH2 0x2DD5 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x10C6 SWAP1 PUSH2 0x2FC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1064 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x10EB JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x114D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x10F9 SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x1108 SWAP2 SWAP1 PUSH2 0x2E2B JUMP JUMPDEST EQ PUSH2 0x1148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113F SWAP1 PUSH2 0x28A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1195 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1AB8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11F8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x122A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1238 SWAP2 SWAP1 PUSH2 0x26C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1275 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x127A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x12BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B5 SWAP1 PUSH2 0x2889 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x12F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2754 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x1345 SWAP2 SWAP1 PUSH2 0x26C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1382 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x13B5 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x13B4 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x13B3 SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x13F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13EB SWAP1 PUSH2 0x2869 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1437 SWAP3 SWAP2 SWAP1 PUSH2 0x278B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1465 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1489 SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST POP PUSH2 0x1495 DUP6 DUP6 DUP5 PUSH2 0x1982 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3502EEA8 DUP5 DUP8 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2716 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1500 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1609 JUMPI PUSH2 0x158F DUP7 DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x157E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH2 0x119D JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1738B50E DUP10 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D2 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1600 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x17A2 JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP8 DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1660 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1689 SWAP3 SWAP2 SWAP1 PUSH2 0x278B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16DB SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST POP PUSH2 0x172C DUP8 DUP8 DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x171B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH2 0x1982 JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1738B50E DUP10 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176F SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x179D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1867 JUMPI PUSH2 0x17EB DUP9 DUP9 PUSH2 0x119D JUMP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB1A271D4 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1830 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2964 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x184A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x185E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1978 JUMP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP10 DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A2 SWAP3 SWAP2 SWAP1 PUSH2 0x278B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18F4 SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST POP PUSH2 0x1900 DUP3 DUP10 DUP10 PUSH2 0x1982 JUMP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB1A271D4 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1945 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2964 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x195F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1973 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x19B4 SWAP3 SWAP2 SWAP1 PUSH2 0x278B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x1A02 SWAP2 SWAP1 PUSH2 0x26C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A3F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A44 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1A72 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x1A71 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1A70 SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x1AB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA8 SWAP1 PUSH2 0x28E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x1AFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF6 SWAP2 SWAP1 PUSH2 0x2847 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x1B0E SWAP2 SWAP1 PUSH2 0x2E2B JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B2E PUSH2 0x1B29 DUP5 PUSH2 0x2C15 JUMP JUMPDEST PUSH2 0x2BE4 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1B6E JUMPI DUP2 CALLDATALOAD DUP6 ADD PUSH2 0x1B54 DUP9 DUP3 PUSH2 0x1D25 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B3E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B8B PUSH2 0x1B86 DUP5 PUSH2 0x2C41 JUMP JUMPDEST PUSH2 0x2BE4 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x1BAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1BDA JUMPI DUP2 PUSH2 0x1BC0 DUP9 DUP3 PUSH2 0x1E39 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1BAD JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF7 PUSH2 0x1BF2 DUP5 PUSH2 0x2C6D JUMP JUMPDEST PUSH2 0x2BE4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C1A DUP5 DUP3 DUP6 PUSH2 0x2F82 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C31 DUP2 PUSH2 0x30EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C46 DUP2 PUSH2 0x30EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C5B DUP2 PUSH2 0x3105 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C82 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C9A DUP2 PUSH2 0x311C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CAF DUP2 PUSH2 0x311C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CC4 DUP2 PUSH2 0x3133 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CEB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D03 DUP2 PUSH2 0x314A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x220 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D41 PUSH1 0xA0 PUSH2 0x2BE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D51 DUP5 DUP3 DUP6 ADD PUSH2 0x1CB5 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1D65 DUP5 DUP3 DUP6 ADD PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1D79 DUP5 DUP3 DUP6 ADD PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1D8D DUP5 DUP3 DUP6 ADD PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DB9 DUP5 DUP3 DUP6 ADD PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DE1 PUSH1 0x80 PUSH2 0x2BE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DF1 DUP5 DUP3 DUP6 ADD PUSH2 0x1C22 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1E05 DUP5 DUP3 DUP6 ADD PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1E19 DUP5 DUP3 DUP6 ADD PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1E2D DUP5 DUP3 DUP6 ADD PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E48 DUP2 PUSH2 0x315A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E6E DUP5 DUP3 DUP6 ADD PUSH2 0x1C22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E97 DUP5 DUP3 DUP6 ADD PUSH2 0x1C37 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EC0 DUP5 DUP3 DUP6 ADD PUSH2 0x1C4C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F01 DUP5 DUP3 DUP6 ADD PUSH2 0x1C61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F2A DUP5 DUP3 DUP6 ADD PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F53 DUP5 DUP3 DUP6 ADD PUSH2 0x1CF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F94 DUP5 DUP3 DUP6 ADD PUSH2 0x1D09 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FBD DUP5 DUP3 DUP6 ADD PUSH2 0x1DC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FE6 DUP5 DUP3 DUP6 ADD PUSH2 0x1E39 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2002 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2010 DUP6 DUP3 DUP7 ADD PUSH2 0x1E39 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2021 DUP6 DUP3 DUP7 ADD PUSH2 0x1C22 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2037 DUP4 DUP4 PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204F DUP4 DUP4 PUSH2 0x2340 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2067 DUP4 DUP4 PUSH2 0x25E0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x207B DUP4 DUP4 PUSH2 0x26AB JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2090 DUP2 PUSH2 0x2EC8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x209F DUP2 PUSH2 0x2EC8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20AE DUP2 PUSH2 0x2EB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20BD DUP2 PUSH2 0x2EB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CE DUP3 PUSH2 0x2CDD JUMP JUMPDEST PUSH2 0x20D8 DUP2 DUP6 PUSH2 0x2D53 JUMP JUMPDEST SWAP4 POP PUSH2 0x20E3 DUP4 PUSH2 0x2C9D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2114 JUMPI DUP2 MLOAD PUSH2 0x20FB DUP9 DUP3 PUSH2 0x202B JUMP JUMPDEST SWAP8 POP PUSH2 0x2106 DUP4 PUSH2 0x2D1F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x20E7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212C DUP3 PUSH2 0x2CE8 JUMP JUMPDEST PUSH2 0x2136 DUP2 DUP6 PUSH2 0x2D64 JUMP JUMPDEST SWAP4 POP PUSH2 0x2141 DUP4 PUSH2 0x2CAD JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2172 JUMPI DUP2 MLOAD PUSH2 0x2159 DUP9 DUP3 PUSH2 0x2043 JUMP JUMPDEST SWAP8 POP PUSH2 0x2164 DUP4 PUSH2 0x2D2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2145 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x218A DUP3 PUSH2 0x2CF3 JUMP JUMPDEST PUSH2 0x2194 DUP2 DUP6 PUSH2 0x2D75 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x21A6 DUP6 PUSH2 0x2CBD JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x21E2 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x21C3 DUP6 DUP3 PUSH2 0x205B JUMP JUMPDEST SWAP5 POP PUSH2 0x21CE DUP4 PUSH2 0x2D39 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21AA JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21FF DUP3 PUSH2 0x2CFE JUMP JUMPDEST PUSH2 0x2209 DUP2 DUP6 PUSH2 0x2D86 JUMP JUMPDEST SWAP4 POP PUSH2 0x2214 DUP4 PUSH2 0x2CCD JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2245 JUMPI DUP2 MLOAD PUSH2 0x222C DUP9 DUP3 PUSH2 0x206F JUMP JUMPDEST SWAP8 POP PUSH2 0x2237 DUP4 PUSH2 0x2D46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2218 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x225B DUP2 PUSH2 0x2EDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x226A DUP2 PUSH2 0x2EDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2279 DUP2 PUSH2 0x2EE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x228A DUP3 PUSH2 0x2D09 JUMP JUMPDEST PUSH2 0x2294 DUP2 DUP6 PUSH2 0x2D97 JUMP JUMPDEST SWAP4 POP PUSH2 0x22A4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F91 JUMP JUMPDEST PUSH2 0x22AD DUP2 PUSH2 0x30C9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C3 DUP3 PUSH2 0x2D09 JUMP JUMPDEST PUSH2 0x22CD DUP2 DUP6 PUSH2 0x2DA8 JUMP JUMPDEST SWAP4 POP PUSH2 0x22DD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F91 JUMP JUMPDEST PUSH2 0x22E6 DUP2 PUSH2 0x30C9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FC DUP3 PUSH2 0x2D09 JUMP JUMPDEST PUSH2 0x2306 DUP2 DUP6 PUSH2 0x2DB9 JUMP JUMPDEST SWAP4 POP PUSH2 0x2316 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F91 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x232B DUP2 PUSH2 0x2F4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x233A DUP2 PUSH2 0x2F70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2349 DUP2 PUSH2 0x2F03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235A DUP3 PUSH2 0x2D14 JUMP JUMPDEST PUSH2 0x2364 DUP2 DUP6 PUSH2 0x2DC4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2374 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F91 JUMP JUMPDEST PUSH2 0x237D DUP2 PUSH2 0x30C9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2395 PUSH1 0x31 DUP4 PUSH2 0x2DC4 JUMP JUMPDEST SWAP2 POP PUSH32 0x5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x616E7366657246726F6D206661696C6564000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23FB PUSH1 0x34 DUP4 PUSH2 0x2DC4 JUMP JUMPDEST SWAP2 POP PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665724554483A PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x20455448207472616E73666572206661696C6564000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2461 PUSH1 0x21 DUP4 PUSH2 0x2DC4 JUMP JUMPDEST SWAP2 POP PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24C7 PUSH1 0x1B DUP4 PUSH2 0x2DC4 JUMP JUMPDEST SWAP2 POP PUSH32 0x426172746572737761705632526F757465723A20455850495245440000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2507 PUSH1 0x2D DUP4 PUSH2 0x2DC4 JUMP JUMPDEST SWAP2 POP PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665723A207472 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x616E73666572206661696C656400000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256D PUSH1 0x15 DUP4 PUSH2 0x2DC4 JUMP JUMPDEST SWAP2 POP PUSH32 0x426172746572737761703A20464F5242494444454E0000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25AD PUSH1 0xE DUP4 PUSH2 0x2DC4 JUMP JUMPDEST SWAP2 POP PUSH32 0x50726963652069732077726F6E67000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x25F8 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2270 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x260B PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x26AB JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x261E PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x26AB JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x2631 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x26AB JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x2649 DUP3 DUP3 PUSH2 0x227F JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x266C PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x20A5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x267F PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2252 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2692 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2087 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x26A5 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2252 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x26B4 DUP2 PUSH2 0x2F2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x26C3 DUP2 PUSH2 0x2F2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D5 DUP3 DUP5 PUSH2 0x22F1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2710 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2096 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x272B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x20B4 JUMP JUMPDEST PUSH2 0x2738 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20B4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x274A DUP2 DUP5 PUSH2 0x21F4 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2769 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x20B4 JUMP JUMPDEST PUSH2 0x2776 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20B4 JUMP JUMPDEST PUSH2 0x2783 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x26BA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x27A0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x20B4 JUMP JUMPDEST PUSH2 0x27AD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26BA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2261 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x27E5 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2331 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x27F7 DUP2 DUP9 PUSH2 0x217F JUMP JUMPDEST SWAP1 POP PUSH2 0x2806 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2656 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2818 DUP2 DUP7 PUSH2 0x20C3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x282C DUP2 DUP6 PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP PUSH2 0x283C PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x26BA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2861 DUP2 DUP5 PUSH2 0x234F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2882 DUP2 PUSH2 0x2388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28A2 DUP2 PUSH2 0x23EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28C2 DUP2 PUSH2 0x2454 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28E2 DUP2 PUSH2 0x24BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2902 DUP2 PUSH2 0x24FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2922 DUP2 PUSH2 0x2560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2942 DUP2 PUSH2 0x25A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x295E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2979 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x26BA JUMP JUMPDEST PUSH2 0x2986 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x26BA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2998 DUP2 DUP9 PUSH2 0x22B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x29A7 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x20B4 JUMP JUMPDEST PUSH2 0x29B4 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x26BA JUMP JUMPDEST PUSH2 0x29C1 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x20B4 JUMP JUMPDEST PUSH2 0x29CE PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x20B4 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x29F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x2A29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x2A4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x2A80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x2AA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2ABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x2AD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x2AF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2B16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x2B2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x2B4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2B6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x2B85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x2BA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x2BDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2C0B JUMPI PUSH2 0x2C0A PUSH2 0x309A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C30 JUMPI PUSH2 0x2C2F PUSH2 0x309A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C5C JUMPI PUSH2 0x2C5B PUSH2 0x309A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C88 JUMPI PUSH2 0x2C87 PUSH2 0x309A JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE0 DUP3 PUSH2 0x2F2D JUMP JUMPDEST SWAP2 POP PUSH2 0x2DEB DUP4 PUSH2 0x2F2D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2E20 JUMPI PUSH2 0x2E1F PUSH2 0x300D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E36 DUP3 PUSH2 0x2F2D JUMP JUMPDEST SWAP2 POP PUSH2 0x2E41 DUP4 PUSH2 0x2F2D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2E51 JUMPI PUSH2 0x2E50 PUSH2 0x303C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E67 DUP3 PUSH2 0x2F2D JUMP JUMPDEST SWAP2 POP PUSH2 0x2E72 DUP4 PUSH2 0x2F2D JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2EAB JUMPI PUSH2 0x2EAA PUSH2 0x300D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC1 DUP3 PUSH2 0x2F0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ED3 DUP3 PUSH2 0x2F0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2EFE DUP3 PUSH2 0x30DA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F44 CALLDATASIZE DUP5 DUP5 PUSH2 0x1B1B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F57 DUP3 PUSH2 0x2F5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F69 DUP3 PUSH2 0x2F0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7B DUP3 PUSH2 0x2EF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2FAF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F94 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2FBE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FCF DUP3 PUSH2 0x2F2D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x3002 JUMPI PUSH2 0x3001 PUSH2 0x300D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x30EB JUMPI PUSH2 0x30EA PUSH2 0x306B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x30F7 DUP2 PUSH2 0x2EB6 JUMP JUMPDEST DUP2 EQ PUSH2 0x3102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x310E DUP2 PUSH2 0x2EC8 JUMP JUMPDEST DUP2 EQ PUSH2 0x3119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3125 DUP2 PUSH2 0x2EDA JUMP JUMPDEST DUP2 EQ PUSH2 0x3130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x313C DUP2 PUSH2 0x2EE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x3147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x3157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3163 DUP2 PUSH2 0x2F2D JUMP JUMPDEST DUP2 EQ PUSH2 0x316E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0x49 0xB5 DUP12 DUP10 ISZERO SWAP9 CALLVALUE 0xCF 0xED 0xC8 0xC8 BYTE 0xFB 0xBB EQ 0xDB SGT 0xDA SWAP14 0xE5 SMOD 0xE6 0xAA PUSH18 0x5C9D7E64D6438E64736F6C63430008000033 ",
							"sourceMap": "401:6000:0:-:0;;;1374:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1430:11;1417:10;;:24;;;;;;;;;;;;;;;;;;1374:74;401:6000;;7:143:15;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;401:6000:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:42563:15",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:545:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "187:120:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "299:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "211:87:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "211:95:15"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "196:14:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:111:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "187:5:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:16:15",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "327:5:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "320:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "348:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "355:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "341:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "341:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "341:21:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "363:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "374:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "381:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "370:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:16:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "363:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "395:17:15",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "406:6:15"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "399:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "482:234:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "496:48:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "offset",
																					"nodeType": "YulIdentifier",
																					"src": "518:6:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "539:3:15"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "526:12:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "526:17:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "514:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "514:30:15"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "500:10:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "564:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "621:10:15"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "633:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_struct$_BatchSwapStep_$1204_memory_ptr",
																						"nodeType": "YulIdentifier",
																						"src": "569:51:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "569:68:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "557:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "557:81:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "557:81:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "651:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "662:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "667:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "658:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "658:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "651:3:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "685:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "696:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "701:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "692:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "692:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "685:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "444:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "447:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "441:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "441:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "455:18:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "457:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "466:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "469:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "462:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "462:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "457:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "426:14:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "428:10:15",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "437:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "432:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "422:294:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "147:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "155:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "163:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "171:5:15",
														"type": ""
													}
												],
												"src": "44:678:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "847:520:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "857:89:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "938:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "881:56:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "881:64:15"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "866:14:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "866:80:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "857:5:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "955:16:15",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "966:5:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "959:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "987:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "994:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "980:21:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1002:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1013:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1020:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1009:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1009:16:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1002:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1034:17:15",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1045:6:15"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1038:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1100:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1109:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1102:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1102:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1102:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1079:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1087:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:17:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:27:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1095:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1063:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1063:36:15"
															},
															"nodeType": "YulIf",
															"src": "1060:2:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1185:176:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1199:21:15",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "1217:3:15"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "1203:10:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1240:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "1266:10:15"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1278:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "1245:20:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1245:37:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1233:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1233:50:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1233:50:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1296:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1307:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1312:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1303:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1303:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1296:3:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1330:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1341:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1346:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1337:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1337:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1330:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1147:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1150:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1144:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1158:18:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1160:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1169:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1172:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1165:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1165:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1160:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1129:14:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1131:10:15",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1140:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1135:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1125:236:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "817:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "825:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "833:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "841:5:15",
														"type": ""
													}
												],
												"src": "745:622:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1456:259:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1466:73:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1531:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1490:40:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1490:48:15"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1475:14:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1475:64:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1555:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1562:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1548:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1548:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1548:21:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1578:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1600:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1589:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1582:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1643:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1652:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1655:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1645:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1645:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1645:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1624:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1629:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1620:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1620:16:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1638:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1617:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:25:15"
															},
															"nodeType": "YulIf",
															"src": "1614:2:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1692:3:15"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1697:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1702:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1668:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1668:41:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1429:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1434:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1442:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1450:5:15",
														"type": ""
													}
												],
												"src": "1373:342:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1773:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1783:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1805:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1792:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1783:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1848:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1821:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1821:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1821:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1751:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1759:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1767:5:15",
														"type": ""
													}
												],
												"src": "1721:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1929:80:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1939:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1954:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1948:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1948:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1939:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1997:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1970:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1970:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1970:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1907:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1915:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1923:5:15",
														"type": ""
													}
												],
												"src": "1866:143:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2075:95:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2085:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2107:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2094:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2085:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2158:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "2123:34:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2123:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2123:41:15"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2053:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2061:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2069:5:15",
														"type": ""
													}
												],
												"src": "2015:155:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:226:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2319:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2328:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2331:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2321:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2321:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2321:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2298:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2306:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2294:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2294:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2313:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2290:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2290:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2283:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2283:35:15"
															},
															"nodeType": "YulIf",
															"src": "2280:2:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2344:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2348:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2387:103:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2463:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2471:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2459:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2459:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2486:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2396:62:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2396:94:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2387:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2248:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2256:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2264:5:15",
														"type": ""
													}
												],
												"src": "2193:303:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2551:84:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2561:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2583:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2570:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2570:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2561:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2623:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2599:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2599:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2599:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2529:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2537:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2545:5:15",
														"type": ""
													}
												],
												"src": "2502:133:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2701:77:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2711:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2720:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2711:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2766:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2742:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2742:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2742:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2679:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2687:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2695:5:15",
														"type": ""
													}
												],
												"src": "2641:137:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2836:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2846:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2868:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2855:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2855:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2846:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2911:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "2884:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2884:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2884:33:15"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2814:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2822:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2830:5:15",
														"type": ""
													}
												],
												"src": "2784:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3003:210:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3052:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3061:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3064:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3054:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3054:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3054:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3031:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3039:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3027:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3027:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3046:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3023:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3023:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3016:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3016:35:15"
															},
															"nodeType": "YulIf",
															"src": "3013:2:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3077:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3104:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3091:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3091:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3081:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3120:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3180:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3188:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3176:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3176:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3195:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3203:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3129:46:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3129:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3120:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2981:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2989:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2997:5:15",
														"type": ""
													}
												],
												"src": "2942:271:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3284:100:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3294:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3316:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3303:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3303:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3294:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3372:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_SwapKind_$1135",
																	"nodeType": "YulIdentifier",
																	"src": "3332:39:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3332:46:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3332:46:15"
														}
													]
												},
												"name": "abi_decode_t_enum$_SwapKind_$1135",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3262:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3270:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3278:5:15",
														"type": ""
													}
												],
												"src": "3219:165:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3518:86:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3558:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3567:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3570:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3560:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3560:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3560:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3539:3:15"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3544:6:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3535:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3535:16:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3553:3:15",
																		"type": "",
																		"value": "544"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3531:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3531:26:15"
															},
															"nodeType": "YulIf",
															"src": "3528:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3583:15:15",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "3592:6:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3583:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_AccessParams_$67_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3496:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3504:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3512:5:15",
														"type": ""
													}
												],
												"src": "3436:168:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3731:1037:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3775:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3784:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3787:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3777:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3777:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3777:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3752:3:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3757:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3748:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3748:19:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3769:4:15",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3744:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3744:30:15"
															},
															"nodeType": "YulIf",
															"src": "3741:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3800:29:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3824:4:15",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3809:14:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3809:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3800:5:15"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3839:152:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3876:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3890:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3880:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3916:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3923:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3912:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3912:16:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3955:9:15"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3966:6:15"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3951:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3951:22:15"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3975:3:15"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "3930:20:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3930:49:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3905:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3905:75:15"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3905:75:15"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4001:159:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4044:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4058:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4048:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4085:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4092:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4081:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4081:16:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4124:9:15"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4135:6:15"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4120:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4120:22:15"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4144:3:15"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4099:20:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4099:49:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4074:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4074:75:15"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4074:75:15"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4170:160:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4214:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4228:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4218:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4255:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4262:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4251:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4251:16:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4294:9:15"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4305:6:15"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4290:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4290:22:15"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4314:3:15"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4269:20:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4269:49:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4244:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4244:75:15"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4244:75:15"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4340:153:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4377:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4391:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4381:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4418:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4425:4:15",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4414:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4414:16:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4457:9:15"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4468:6:15"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4453:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4453:22:15"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4477:3:15"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4432:20:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4432:49:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4407:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4407:75:15"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4407:75:15"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4503:258:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4542:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4573:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4584:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4569:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4569:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4556:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4556:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4546:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4636:16:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4645:1:15",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4648:1:15",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "4638:6:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4638:12:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4638:12:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4608:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4616:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4605:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4605:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "4602:2:15"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4677:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4684:4:15",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4673:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4673:16:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4725:9:15"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4736:6:15"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4721:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4721:22:15"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4745:3:15"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bytes_memory_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "4691:29:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4691:58:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4666:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4666:84:15"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4666:84:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_BatchSwapStep_$1204_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3706:9:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3717:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3725:5:15",
														"type": ""
													}
												],
												"src": "3645:1123:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4897:785:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4941:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4950:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4953:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4943:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4943:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4943:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4918:3:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4923:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4914:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4914:19:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4935:4:15",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4910:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4910:30:15"
															},
															"nodeType": "YulIf",
															"src": "4907:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4966:29:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4990:4:15",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4975:14:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4966:5:15"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5005:152:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5042:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5056:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5046:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5082:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5089:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5078:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5078:16:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "5121:9:15"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "5132:6:15"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5117:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5117:22:15"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "5141:3:15"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5096:20:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5096:49:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "5071:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5071:75:15"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5071:75:15"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5167:163:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5217:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5231:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5221:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5258:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5265:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5254:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5254:16:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "5294:9:15"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "5305:6:15"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5290:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5290:22:15"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "5314:3:15"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5272:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5272:46:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "5247:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5247:72:15"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5247:72:15"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5340:164:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5380:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5394:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5384:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5421:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5428:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5417:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5417:16:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "5468:9:15"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "5479:6:15"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5464:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5464:22:15"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "5488:3:15"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "5435:28:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5435:57:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "5410:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5410:83:15"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5410:83:15"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5514:161:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5562:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5576:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5566:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5603:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5610:4:15",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5599:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5599:16:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "5639:9:15"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "5650:6:15"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5635:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5635:22:15"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "5659:3:15"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5617:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5617:46:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "5592:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5592:72:15"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5592:72:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_FundManagement_$1228_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4872:9:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4883:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4891:5:15",
														"type": ""
													}
												],
												"src": "4810:872:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5740:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5750:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5772:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5759:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5759:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5750:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5815:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5788:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5788:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5788:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5718:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5726:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5734:5:15",
														"type": ""
													}
												],
												"src": "5688:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5899:196:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5945:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5954:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5957:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5947:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5947:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5947:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5920:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5929:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5916:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5916:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5941:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5912:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5912:32:15"
															},
															"nodeType": "YulIf",
															"src": "5909:2:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "5971:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5986:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6000:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5990:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6015:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6050:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6061:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6046:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6046:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6070:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6025:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6025:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6015:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5869:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5880:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5892:6:15",
														"type": ""
													}
												],
												"src": "5833:262:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6178:207:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6224:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6233:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6236:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6226:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6226:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6226:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6199:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6208:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6195:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6195:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6220:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6191:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6191:32:15"
															},
															"nodeType": "YulIf",
															"src": "6188:2:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "6250:128:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6265:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6279:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6269:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6294:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6340:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6351:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6336:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6336:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6360:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6304:31:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6304:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6294:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6148:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6159:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6171:6:15",
														"type": ""
													}
												],
												"src": "6101:284:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6465:204:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6511:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6520:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6523:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6513:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6513:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6513:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6486:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6495:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6482:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6482:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6507:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6478:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6478:32:15"
															},
															"nodeType": "YulIf",
															"src": "6475:2:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "6537:125:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6552:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6566:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6556:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6581:71:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6624:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6635:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6620:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6620:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6644:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "6591:28:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6591:61:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6581:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6435:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6446:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6458:6:15",
														"type": ""
													}
												],
												"src": "6391:278:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6766:314:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6812:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6821:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6824:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6814:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6814:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6814:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6787:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6796:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6783:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6783:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6808:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6779:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6779:32:15"
															},
															"nodeType": "YulIf",
															"src": "6776:2:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "6838:235:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6853:45:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6884:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6895:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6880:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6880:17:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6867:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6867:31:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6857:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6945:16:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6954:1:15",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6957:1:15",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "6947:6:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6947:12:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6947:12:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6917:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6925:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6914:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6914:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "6911:2:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6975:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7035:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7046:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7031:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7031:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7055:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6985:45:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6985:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6975:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6736:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6747:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6759:6:15",
														"type": ""
													}
												],
												"src": "6675:405:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7160:204:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7206:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7215:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7218:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7208:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7208:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7208:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7181:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7190:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7177:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7177:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7202:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7173:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7173:32:15"
															},
															"nodeType": "YulIf",
															"src": "7170:2:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "7232:125:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7247:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7261:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7251:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7276:71:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7319:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7330:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7315:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7315:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7339:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7286:28:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7286:61:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7276:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7130:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7141:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7153:6:15",
														"type": ""
													}
												],
												"src": "7086:278:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7449:209:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7495:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7504:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7507:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7497:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7497:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7497:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7470:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7479:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7466:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7466:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7491:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7462:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7462:32:15"
															},
															"nodeType": "YulIf",
															"src": "7459:2:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "7521:130:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7536:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7550:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7540:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7565:76:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7613:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7624:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7609:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7609:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7633:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_SwapKind_$1135",
																			"nodeType": "YulIdentifier",
																			"src": "7575:33:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7575:66:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7565:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_SwapKind_$1135",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7419:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7430:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7442:6:15",
														"type": ""
													}
												],
												"src": "7370:288:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7760:319:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7806:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7815:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7818:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7808:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7808:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7808:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7781:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7790:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7777:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7777:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7802:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7773:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7773:32:15"
															},
															"nodeType": "YulIf",
															"src": "7770:2:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "7832:240:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7847:45:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7878:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7889:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7874:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7874:17:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7861:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7861:31:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7851:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7939:16:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7948:1:15",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7951:1:15",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "7941:6:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7941:12:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7941:12:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7911:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7919:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7908:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7908:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "7905:2:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7969:93:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8034:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8045:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8030:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8030:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8054:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_AccessParams_$67_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7979:50:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7979:83:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7969:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_AccessParams_$67_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7730:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7741:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7753:6:15",
														"type": ""
													}
												],
												"src": "7664:415:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8183:229:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8230:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8239:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8242:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8232:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8232:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8232:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8204:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8213:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8200:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8200:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8225:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8196:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8196:33:15"
															},
															"nodeType": "YulIf",
															"src": "8193:2:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "8256:149:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8271:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8285:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8275:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8300:95:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8367:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8378:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8363:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8363:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8387:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_FundManagement_$1228_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8310:52:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8310:85:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8300:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_FundManagement_$1228_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8153:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8164:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8176:6:15",
														"type": ""
													}
												],
												"src": "8085:327:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8484:196:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8530:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8539:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8542:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8532:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8532:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8532:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8505:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8514:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8501:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8501:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8526:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8497:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8497:32:15"
															},
															"nodeType": "YulIf",
															"src": "8494:2:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "8556:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8571:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8585:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8575:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8600:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8635:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8646:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8631:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8631:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8655:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8610:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8610:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8600:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8454:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8465:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8477:6:15",
														"type": ""
													}
												],
												"src": "8418:262:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8769:324:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8815:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8824:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8827:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8817:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8817:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8817:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8790:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8799:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8786:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8786:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8811:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8782:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8782:32:15"
															},
															"nodeType": "YulIf",
															"src": "8779:2:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "8841:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8856:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8870:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8860:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8885:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8920:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8931:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8916:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8916:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8940:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8895:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8895:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8885:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8968:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8983:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8997:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8987:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9013:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9048:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9059:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9044:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9044:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9068:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9023:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9023:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9013:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8731:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8742:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8754:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8762:6:15",
														"type": ""
													}
												],
												"src": "8686:407:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9193:113:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9251:6:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9259:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IAsset_$690_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "9203:47:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9203:60:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9203:60:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9272:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9290:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9295:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9286:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9286:14:15"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "9272:10:15"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_contract$_IAsset_$690_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9166:6:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9174:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "9182:10:15",
														"type": ""
													}
												],
												"src": "9099:207:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9390:97:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9432:6:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9440:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "9400:31:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9400:44:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9400:44:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9453:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9471:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9476:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9467:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9467:14:15"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "9453:10:15"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_int256_to_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9363:6:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9371:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "9379:10:15",
														"type": ""
													}
												],
												"src": "9312:175:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9635:138:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9645:122:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9755:6:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9763:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_BatchSwapStep_$1204_memory_ptr_to_t_struct$_BatchSwapStep_$1204_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9659:95:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9659:108:15"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "9645:10:15"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_BatchSwapStep_$1204_memory_ptr_to_t_struct$_BatchSwapStep_$1204_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9608:6:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9616:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "9624:10:15",
														"type": ""
													}
												],
												"src": "9493:280:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9859:99:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9903:6:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9911:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9869:33:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9869:46:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9869:46:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9924:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9942:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9947:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9938:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9938:14:15"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "9924:10:15"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9832:6:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9840:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "9848:10:15",
														"type": ""
													}
												],
												"src": "9779:179:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10035:61:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10052:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10083:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "10057:25:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10057:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10045:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10045:45:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10045:45:15"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10023:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10030:3:15",
														"type": ""
													}
												],
												"src": "9964:132:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10183:61:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10200:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10231:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "10205:25:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10205:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10193:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10193:45:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10193:45:15"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10171:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10178:3:15",
														"type": ""
													}
												],
												"src": "10102:142:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10305:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10322:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10345:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10327:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10327:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10315:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10315:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10315:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10293:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10300:3:15",
														"type": ""
													}
												],
												"src": "10250:108:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10429:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10446:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10469:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10451:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10451:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10439:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10439:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10439:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10417:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10424:3:15",
														"type": ""
													}
												],
												"src": "10364:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10664:664:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10674:82:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10750:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10688:61:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10688:68:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10678:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10765:93:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10846:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10851:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10772:73:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10772:86:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10765:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10867:85:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10946:5:15"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10882:63:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10882:70:15"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "10871:7:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10961:21:15",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "10975:7:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "10965:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11051:252:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11065:34:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "11092:6:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11086:5:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11086:13:15"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "11069:13:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11112:84:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "11177:13:15"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "11192:3:15"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_contract$_IAsset_$690_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "11119:57:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11119:77:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11112:3:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11209:84:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "11286:6:15"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "11219:66:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11219:74:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11209:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11013:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11016:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11010:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11010:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11024:18:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11026:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11035:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11038:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11031:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11031:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11026:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10995:14:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10997:10:15",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "11006:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "11001:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10991:312:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11312:10:15",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11319:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11312:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10643:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10650:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10659:3:15",
														"type": ""
													}
												],
												"src": "10526:802:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11484:602:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11494:67:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11555:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_int256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11508:46:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11508:53:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11498:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11570:92:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11650:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11655:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_int256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11577:72:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11577:85:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11570:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11671:70:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11735:5:15"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_int256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11686:48:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11686:55:15"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "11675:7:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11750:21:15",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "11764:7:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "11754:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11840:221:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11854:34:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "11881:6:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11875:5:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11875:13:15"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "11858:13:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11901:68:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "11950:13:15"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "11965:3:15"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_int256_to_t_int256",
																				"nodeType": "YulIdentifier",
																				"src": "11908:41:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11908:61:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11901:3:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11982:69:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "12044:6:15"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_int256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "11992:51:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11992:59:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11982:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11802:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11805:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11799:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11799:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11813:18:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11815:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11824:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11827:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11820:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11820:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11815:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11784:14:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11786:10:15",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "11795:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "11790:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "11780:281:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12070:10:15",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "12077:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12070:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_int256_$dyn_memory_ptr_to_t_array$_t_int256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11463:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11470:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11479:3:15",
														"type": ""
													}
												],
												"src": "11362:724:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12348:973:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12358:99:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12451:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12372:78:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12372:85:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12362:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12466:124:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12578:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12583:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12473:104:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12473:117:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12466:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12599:20:15",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "12616:3:15"
															},
															"variables": [
																{
																	"name": "headStart",
																	"nodeType": "YulTypedName",
																	"src": "12603:9:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12628:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12644:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12653:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12661:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "12649:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12649:17:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12640:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12640:27:15"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "12632:4:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12676:102:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12772:5:15"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12691:80:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12691:87:15"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "12680:7:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12787:21:15",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "12801:7:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "12791:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12877:399:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "12898:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "12907:4:15"
																						},
																						{
																							"name": "headStart",
																							"nodeType": "YulIdentifier",
																							"src": "12913:9:15"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "12903:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12903:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12891:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12891:33:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12891:33:15"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12937:34:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "12964:6:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "12958:5:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12958:13:15"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "12941:13:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12984:134:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "13098:13:15"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "13113:4:15"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_BatchSwapStep_$1204_memory_ptr_to_t_struct$_BatchSwapStep_$1204_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "12992:105:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12992:126:15"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12984:4:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13131:101:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "13225:6:15"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "13141:83:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13141:91:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13131:6:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13245:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "13256:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13261:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13252:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13252:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13245:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12839:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12842:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12836:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12836:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12850:18:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12852:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12861:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12864:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12857:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12857:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12852:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12821:14:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12823:10:15",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "12832:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "12827:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "12817:459:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13285:11:15",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "13292:4:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13285:3:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13305:10:15",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13312:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13305:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12327:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12334:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12343:3:15",
														"type": ""
													}
												],
												"src": "12162:1159:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13481:608:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13491:68:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13553:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13505:47:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13505:54:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13495:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13568:93:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13649:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13654:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13575:73:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13575:86:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13568:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13670:71:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13735:5:15"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13685:49:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13685:56:15"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "13674:7:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13750:21:15",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "13764:7:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "13754:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13840:224:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13854:34:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "13881:6:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "13875:5:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13875:13:15"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "13858:13:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13901:70:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "13952:13:15"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "13967:3:15"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "13908:43:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13908:63:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13901:3:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13984:70:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "14047:6:15"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "13994:52:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13994:60:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13984:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13802:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13805:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13799:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13799:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13813:18:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13815:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13824:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13827:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13820:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13820:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13815:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13784:14:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13786:10:15",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13795:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "13790:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13780:284:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14073:10:15",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14080:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14073:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13460:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13467:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13476:3:15",
														"type": ""
													}
												],
												"src": "13357:732:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14144:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14161:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14181:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "14166:14:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14166:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14154:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14154:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14154:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14132:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14139:3:15",
														"type": ""
													}
												],
												"src": "14095:99:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14259:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14276:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14296:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "14281:14:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14281:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14269:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14269:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14269:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14247:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14254:3:15",
														"type": ""
													}
												],
												"src": "14200:109:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14370:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14387:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14410:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "14392:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14392:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14380:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14380:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14380:37:15"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14358:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14365:3:15",
														"type": ""
													}
												],
												"src": "14315:108:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14509:260:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14519:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14565:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14533:31:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14533:38:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14523:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14580:67:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14635:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14640:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14587:47:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14587:60:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14580:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14682:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14689:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14678:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14678:16:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14696:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14701:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "14656:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14656:52:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14656:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14717:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14728:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14755:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "14733:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14733:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14724:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14724:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14717:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14490:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14497:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14505:3:15",
														"type": ""
													}
												],
												"src": "14429:340:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14865:270:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14875:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14921:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14889:31:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14889:38:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14879:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14936:77:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15001:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15006:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14943:57:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14943:70:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14936:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15048:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15055:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15044:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15044:16:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15062:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15067:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "15022:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15022:52:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15022:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15083:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15094:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15121:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "15099:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15099:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15090:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15090:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15083:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14846:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14853:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14861:3:15",
														"type": ""
													}
												],
												"src": "14775:360:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15249:265:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15259:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15305:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15273:31:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15273:38:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15263:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15320:95:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15403:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15408:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15327:75:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15327:88:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15320:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15450:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15457:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15446:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15446:16:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15464:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15469:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "15424:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15424:52:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15424:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15485:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15496:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15501:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15492:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15492:16:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15485:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15230:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15237:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15245:3:15",
														"type": ""
													}
												],
												"src": "15141:373:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15589:80:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15606:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15656:5:15"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IAsset_$690_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15611:44:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15611:51:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15599:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15599:64:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15599:64:15"
														}
													]
												},
												"name": "abi_encode_t_contract$_IAsset_$690_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15577:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15584:3:15",
														"type": ""
													}
												],
												"src": "15520:149:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15751:77:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15768:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15815:5:15"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_SwapKind_$1135_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "15773:41:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15773:48:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15761:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15761:61:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15761:61:15"
														}
													]
												},
												"name": "abi_encode_t_enum$_SwapKind_$1135_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15739:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15746:3:15",
														"type": ""
													}
												],
												"src": "15675:153:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15887:52:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15904:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15926:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "15909:16:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15909:23:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15897:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15897:36:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15897:36:15"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15875:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15882:3:15",
														"type": ""
													}
												],
												"src": "15834:105:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16037:272:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16047:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16094:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16061:32:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16061:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16051:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16109:78:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16175:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16180:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16116:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16116:71:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16109:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16222:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16229:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16218:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16218:16:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16236:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16241:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "16196:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16196:52:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16196:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16257:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16268:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16295:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "16273:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16273:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16264:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16264:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16257:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16018:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16025:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16033:3:15",
														"type": ""
													}
												],
												"src": "15945:364:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16461:235:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16471:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16537:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16542:2:15",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16478:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16478:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16471:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "16566:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16571:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16562:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16562:11:15"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16575:34:15",
																		"type": "",
																		"value": "TransferHelper::transferFrom: tr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16555:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16555:55:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16555:55:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "16631:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16636:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16627:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16627:12:15"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16641:19:15",
																		"type": "",
																		"value": "ansferFrom failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16620:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16620:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16620:41:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16671:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16682:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16687:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16678:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16678:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16671:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16449:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16457:3:15",
														"type": ""
													}
												],
												"src": "16315:381:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16848:238:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16858:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16924:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16929:2:15",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16865:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16865:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16858:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "16953:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16958:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16949:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16949:11:15"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16962:34:15",
																		"type": "",
																		"value": "TransferHelper::safeTransferETH:"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16942:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16942:55:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16942:55:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "17018:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17023:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17014:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17014:12:15"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17028:22:15",
																		"type": "",
																		"value": " ETH transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17007:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17007:44:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17007:44:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17061:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17072:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17077:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17068:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17068:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17061:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16836:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16844:3:15",
														"type": ""
													}
												],
												"src": "16702:384:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17238:219:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17248:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17314:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17319:2:15",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17255:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17255:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17248:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "17343:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17348:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17339:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17339:11:15"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17352:34:15",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17332:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17332:55:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17332:55:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "17408:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17413:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17404:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17404:12:15"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17418:3:15",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17397:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17397:25:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17397:25:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17432:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17443:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17448:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17439:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17439:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17432:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17226:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17234:3:15",
														"type": ""
													}
												],
												"src": "17092:365:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17609:179:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17619:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17685:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17690:2:15",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17626:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17626:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17619:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "17714:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17719:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17710:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17710:11:15"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17723:29:15",
																		"type": "",
																		"value": "BarterswapV2Router: EXPIRED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17703:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17703:50:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17703:50:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17763:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17774:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17779:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17770:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17770:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17763:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b4a7d1da0754581ce7ae064579be8816192727a7424a33ab329d195336a2715a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17597:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17605:3:15",
														"type": ""
													}
												],
												"src": "17463:325:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17940:231:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17950:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18016:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18021:2:15",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17957:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17957:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17950:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "18045:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18050:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18041:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18041:11:15"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18054:34:15",
																		"type": "",
																		"value": "TransferHelper::safeTransfer: tr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18034:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18034:55:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18034:55:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "18110:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18115:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18106:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18106:12:15"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18120:15:15",
																		"type": "",
																		"value": "ansfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18099:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18099:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18099:37:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18146:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18157:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18162:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18153:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18153:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18146:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17928:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17936:3:15",
														"type": ""
													}
												],
												"src": "17794:377:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18323:173:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18333:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18399:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18404:2:15",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18340:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18340:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18333:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "18428:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18433:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18424:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18424:11:15"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18437:23:15",
																		"type": "",
																		"value": "Barterswap: FORBIDDEN"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18417:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18417:44:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18417:44:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18471:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18482:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18487:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18478:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18478:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18471:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e3211a392c9384e9023e00a96a7c46965046c5c5de8ed092aafb60d74edb4564_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18311:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18319:3:15",
														"type": ""
													}
												],
												"src": "18177:319:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18648:166:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18658:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18724:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18729:2:15",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18665:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18665:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18658:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "18753:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18758:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18749:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18749:11:15"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18762:16:15",
																		"type": "",
																		"value": "Price is wrong"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18742:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18742:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18742:37:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18789:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18800:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18805:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18796:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18796:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18789:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec6a417165f3e9d7e801fa9ee5810a196b69211795ebeed58c4e3c8666539155_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18636:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18644:3:15",
														"type": ""
													}
												],
												"src": "18502:312:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19012:1027:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19022:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19038:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19043:4:15",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19034:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "19034:14:15"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "19026:4:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19058:166:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19095:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19125:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19132:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19121:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19121:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "19115:5:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19115:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "19099:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "19185:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "19203:3:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19208:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19199:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19199:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes32_to_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "19151:33:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19151:63:15"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "19151:63:15"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19234:172:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19277:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19307:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19314:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19303:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19303:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "19297:5:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19297:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "19281:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "19367:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "19385:3:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19390:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19381:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19381:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "19333:33:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19333:63:15"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "19333:63:15"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19416:173:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19460:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19490:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19497:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19486:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19486:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "19480:5:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19480:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "19464:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "19550:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "19568:3:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19573:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19564:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19564:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "19516:33:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19516:63:15"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "19516:63:15"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19599:166:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19636:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19666:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19673:4:15",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19662:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19662:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "19656:5:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19656:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "19640:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "19726:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "19744:3:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19749:4:15",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19740:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19740:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "19692:33:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19692:63:15"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "19692:63:15"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19775:237:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19814:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19844:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19851:4:15",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19840:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19840:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "19834:5:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19834:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "19818:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "19882:3:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19887:4:15",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19878:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19878:14:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "19898:4:15"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "19904:3:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "19894:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19894:14:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "19871:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19871:38:15"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "19871:38:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19922:79:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "19982:12:15"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19996:4:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "19930:51:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19930:71:15"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "19922:4:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20022:11:15",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "20029:4:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20022:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_BatchSwapStep_$1204_memory_ptr_to_t_struct$_BatchSwapStep_$1204_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18991:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18998:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19007:3:15",
														"type": ""
													}
												],
												"src": "18886:1153:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20243:778:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20253:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20269:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20274:4:15",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20265:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "20265:14:15"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "20257:4:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20289:166:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20326:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20356:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20363:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20352:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20352:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "20346:5:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20346:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "20330:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "20416:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "20434:3:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20439:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20430:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20430:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "20382:33:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20382:63:15"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "20382:63:15"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20465:173:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20515:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20545:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20552:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20541:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20541:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "20535:5:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20535:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "20519:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "20599:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "20617:3:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20622:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20613:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20613:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "20571:27:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20571:57:15"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "20571:57:15"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20648:185:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20688:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20718:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20725:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20714:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20714:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "20708:5:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20708:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "20692:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "20794:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "20812:3:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20817:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20808:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20808:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_payable_to_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "20744:49:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20744:79:15"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "20744:79:15"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20843:171:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20891:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20921:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20928:4:15",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20917:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20917:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "20911:5:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20911:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "20895:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "20975:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "20993:3:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20998:4:15",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20989:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20989:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "20947:27:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20947:57:15"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "20947:57:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_FundManagement_$1228_memory_ptr_to_t_struct$_FundManagement_$1228_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20230:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20237:3:15",
														"type": ""
													}
												],
												"src": "20113:908:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21082:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21099:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21122:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "21104:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21104:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21092:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21092:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21092:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21070:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21077:3:15",
														"type": ""
													}
												],
												"src": "21027:108:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21206:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21223:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21246:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "21228:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21228:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21216:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21216:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21216:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21194:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21201:3:15",
														"type": ""
													}
												],
												"src": "21141:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21399:137:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21410:100:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21497:6:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21506:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21417:79:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21417:93:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21410:3:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21520:10:15",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "21527:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21520:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21378:3:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21384:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21395:3:15",
														"type": ""
													}
												],
												"src": "21265:271:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21640:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21650:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21662:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21673:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21658:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21658:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21650:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21730:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21743:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21754:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21739:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21739:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21686:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21686:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21686:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21612:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21624:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21635:4:15",
														"type": ""
													}
												],
												"src": "21542:222:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21884:140:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21894:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21906:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21917:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21902:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21902:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21894:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21990:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22003:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22014:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21999:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21999:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21930:59:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21930:87:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21930:87:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21856:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21868:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21879:4:15",
														"type": ""
													}
												],
												"src": "21770:254:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22234:389:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22244:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22256:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22267:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22252:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22252:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22244:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22324:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22337:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22348:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22333:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22333:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22280:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22280:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22280:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22405:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22418:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22429:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22414:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22414:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22361:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22361:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22361:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22454:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22465:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22450:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22450:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22474:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22480:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22470:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22470:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22443:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22443:48:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22443:48:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22500:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "22602:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22611:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22508:93:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22508:108:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22500:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22190:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "22202:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22210:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22218:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22229:4:15",
														"type": ""
													}
												],
												"src": "22030:593:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22783:288:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22793:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22805:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22816:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22801:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22801:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22793:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22873:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22886:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22897:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22882:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22882:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22829:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22829:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22829:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22954:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22967:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22978:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22963:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22963:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22910:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22910:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22910:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "23036:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23049:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23060:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23045:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23045:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22992:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22992:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22992:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22739:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "22751:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22759:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22767:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22778:4:15",
														"type": ""
													}
												],
												"src": "22629:442:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23203:206:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23213:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23225:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23236:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23221:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23221:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23213:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23293:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23306:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23317:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23302:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23302:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23249:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23249:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23249:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23374:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23387:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23398:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23383:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23383:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23330:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23330:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23330:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23167:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23179:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23187:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23198:4:15",
														"type": ""
													}
												],
												"src": "23077:332:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23507:118:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23517:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23529:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23540:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23525:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23525:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23517:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23591:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23604:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23615:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23600:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23600:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23553:37:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23553:65:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23553:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23479:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23491:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23502:4:15",
														"type": ""
													}
												],
												"src": "23415:210:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24168:990:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24178:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24190:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24201:3:15",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24186:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24186:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24178:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24270:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24283:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24294:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24279:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24279:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_SwapKind_$1135_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24215:54:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24215:82:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24215:82:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24318:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24329:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24314:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24314:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24338:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24344:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24334:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24334:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24307:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24307:48:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24307:48:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24364:178:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24528:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24537:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24372:155:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24372:170:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24364:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "24660:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24673:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24684:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24669:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24669:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_FundManagement_$1228_memory_ptr_to_t_struct$_FundManagement_$1228_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24552:107:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24552:136:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24552:136:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24709:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24720:3:15",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24705:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24705:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24730:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24736:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24726:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24726:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24698:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24698:49:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24698:49:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24756:130:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "24872:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24881:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24764:107:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24764:122:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24756:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24907:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24918:3:15",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24903:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24903:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24928:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24934:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24924:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24924:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24896:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24896:49:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24896:49:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24954:114:15",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "25054:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25063:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_int256_$dyn_memory_ptr_to_t_array$_t_int256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24962:91:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24962:106:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24954:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "25122:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25135:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25146:3:15",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25131:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25131:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25078:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25078:73:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25078:73:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_SwapKind_$1135_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_t_struct$_FundManagement_$1228_memory_ptr_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr_t_array$_t_int256_$dyn_memory_ptr_t_uint256__to_t_uint8_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_t_struct$_FundManagement_$1228_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_int256_$dyn_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24100:9:15",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "24112:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "24120:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "24128:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "24136:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24144:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24152:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24163:4:15",
														"type": ""
													}
												],
												"src": "23631:1527:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25282:195:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25292:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25304:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25315:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25300:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25300:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25292:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25339:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25350:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25335:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25335:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25358:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25364:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25354:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25354:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25328:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25328:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25328:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25384:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25456:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25465:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25392:63:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25392:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25384:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25254:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25266:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25277:4:15",
														"type": ""
													}
												],
												"src": "25164:313:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25654:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25664:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25676:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25687:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25672:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25672:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25664:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25711:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25722:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25707:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25707:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25730:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25736:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25726:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25726:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25700:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25700:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25700:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25756:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25890:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25764:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25764:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25756:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25634:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25649:4:15",
														"type": ""
													}
												],
												"src": "25483:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26079:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26089:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26101:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26112:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26097:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26097:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26089:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26136:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26147:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26132:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26132:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26155:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26161:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26151:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26151:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26125:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26125:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26125:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26181:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26315:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26189:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26189:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26181:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26059:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26074:4:15",
														"type": ""
													}
												],
												"src": "25908:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26504:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26514:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26526:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26537:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26522:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26522:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26514:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26561:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26572:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26557:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26557:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26580:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26586:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26576:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26576:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26550:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26550:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26550:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26606:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26740:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26614:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26614:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26606:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26484:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26499:4:15",
														"type": ""
													}
												],
												"src": "26333:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26929:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26939:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26951:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26962:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26947:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26947:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26939:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26986:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26997:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26982:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26982:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27005:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27011:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27001:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27001:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26975:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26975:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26975:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27031:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27165:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b4a7d1da0754581ce7ae064579be8816192727a7424a33ab329d195336a2715a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27039:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27039:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27031:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b4a7d1da0754581ce7ae064579be8816192727a7424a33ab329d195336a2715a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26909:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26924:4:15",
														"type": ""
													}
												],
												"src": "26758:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27354:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27364:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27376:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27387:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27372:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27372:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27364:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27411:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27422:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27407:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27407:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27430:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27436:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27426:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27426:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27400:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27400:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27400:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27456:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27590:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27464:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27464:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27456:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27334:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27349:4:15",
														"type": ""
													}
												],
												"src": "27183:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27779:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27789:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27801:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27812:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27797:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27797:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27789:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27836:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27847:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27832:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27832:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27855:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27861:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27851:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27851:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27825:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27825:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27825:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27881:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28015:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e3211a392c9384e9023e00a96a7c46965046c5c5de8ed092aafb60d74edb4564_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27889:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27889:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27881:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e3211a392c9384e9023e00a96a7c46965046c5c5de8ed092aafb60d74edb4564__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27759:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27774:4:15",
														"type": ""
													}
												],
												"src": "27608:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28204:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28214:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28226:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28237:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28222:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28222:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28214:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28261:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28272:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28257:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28257:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28280:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28286:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28276:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28276:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28250:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28250:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28250:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28306:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28440:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec6a417165f3e9d7e801fa9ee5810a196b69211795ebeed58c4e3c8666539155_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28314:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28314:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28306:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec6a417165f3e9d7e801fa9ee5810a196b69211795ebeed58c4e3c8666539155__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28184:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28199:4:15",
														"type": ""
													}
												],
												"src": "28033:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28556:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28566:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28578:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28589:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28574:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28574:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28566:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28646:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28659:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28670:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28655:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28655:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28602:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28602:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28602:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28528:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28540:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28551:4:15",
														"type": ""
													}
												],
												"src": "28458:222:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28970:689:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28980:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28992:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29003:3:15",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28988:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28988:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28980:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "29061:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29074:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29085:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29070:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29070:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29017:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29017:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29017:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "29142:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29155:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29166:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29151:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29151:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29098:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29098:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29098:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29191:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29202:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29187:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29187:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29211:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29217:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29207:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29207:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29180:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29180:48:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29180:48:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29237:84:15",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "29307:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29316:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29245:61:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29245:76:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29237:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "29375:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29388:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29399:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29384:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29384:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29331:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29331:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29331:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "29457:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29470:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29481:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29466:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29466:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29413:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29413:73:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29413:73:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "29540:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29553:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29564:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29549:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29549:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29496:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29496:73:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29496:73:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "29623:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29636:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29647:3:15",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29632:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29632:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29579:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29579:73:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29579:73:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bytes_memory_ptr_t_address_t_uint256_t_address_t_address__to_t_uint256_t_uint256_t_bytes_memory_ptr_t_address_t_uint256_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28894:9:15",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "28906:6:15",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "28914:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "28922:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "28930:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "28938:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "28946:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28954:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28965:4:15",
														"type": ""
													}
												],
												"src": "28686:973:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29782:433:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29792:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nodeType": "YulIdentifier",
																		"src": "29831:11:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "29818:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29818:25:15"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "29796:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29937:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29946:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29949:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "29939:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29939:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29939:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "29866:18:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "29894:12:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "29894:14:15"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "29910:8:15"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "29890:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "29890:29:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "29925:4:15",
																								"type": "",
																								"value": "0x20"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "29931:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "29921:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "29921:12:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "29886:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29886:48:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "29862:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29862:73:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "29855:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29855:81:15"
															},
															"nodeType": "YulIf",
															"src": "29852:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29962:41:15",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "29974:8:15"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "29984:18:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29970:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29970:33:15"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "29962:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "30013:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "30036:4:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "30023:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30023:18:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "30013:6:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30084:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30093:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30096:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "30086:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30086:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30086:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30056:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30064:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30053:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30053:30:15"
															},
															"nodeType": "YulIf",
															"src": "30050:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30109:21:15",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "30121:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30127:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30117:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30117:13:15"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "30109:4:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30192:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30201:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30204:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "30194:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30194:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30194:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "30146:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "30156:12:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30156:14:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "30176:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30184:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "30172:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30172:17:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30152:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30152:38:15"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "30142:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30142:49:15"
															},
															"nodeType": "YulIf",
															"src": "30139:2:15"
														}
													]
												},
												"name": "access_calldata_tail_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "29743:8:15",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nodeType": "YulTypedName",
														"src": "29753:11:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nodeType": "YulTypedName",
														"src": "29769:4:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "29775:6:15",
														"type": ""
													}
												],
												"src": "29665:550:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30341:433:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30351:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nodeType": "YulIdentifier",
																		"src": "30390:11:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "30377:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30377:25:15"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "30355:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30496:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30505:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30508:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "30498:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30498:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30498:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "30425:18:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "30453:12:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "30453:14:15"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "30469:8:15"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "30449:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "30449:29:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "30484:4:15",
																								"type": "",
																								"value": "0x20"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "30490:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "30480:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "30480:12:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "30445:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30445:48:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "30421:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30421:73:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "30414:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30414:81:15"
															},
															"nodeType": "YulIf",
															"src": "30411:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30521:41:15",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "30533:8:15"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "30543:18:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30529:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30529:33:15"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "30521:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "30572:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "30595:4:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "30582:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30582:18:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "30572:6:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30643:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30652:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30655:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "30645:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30645:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30645:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30615:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30623:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30612:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30612:30:15"
															},
															"nodeType": "YulIf",
															"src": "30609:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30668:21:15",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "30680:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30686:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30676:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30676:13:15"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "30668:4:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30751:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30760:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30763:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "30753:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30753:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30753:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "30705:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "30715:12:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30715:14:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "30735:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30743:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "30731:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30731:17:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30711:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30711:38:15"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "30701:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30701:49:15"
															},
															"nodeType": "YulIf",
															"src": "30698:2:15"
														}
													]
												},
												"name": "access_calldata_tail_t_array$_t_contract$_IAsset_$690_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "30302:8:15",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nodeType": "YulTypedName",
														"src": "30312:11:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nodeType": "YulTypedName",
														"src": "30328:4:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "30334:6:15",
														"type": ""
													}
												],
												"src": "30221:553:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30885:433:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30895:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nodeType": "YulIdentifier",
																		"src": "30934:11:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "30921:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30921:25:15"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "30899:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31040:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31049:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31052:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31042:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31042:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31042:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "30969:18:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "30997:12:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "30997:14:15"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "31013:8:15"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "30993:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "30993:29:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "31028:4:15",
																								"type": "",
																								"value": "0x20"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "31034:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "31024:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "31024:12:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "30989:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30989:48:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "30965:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30965:73:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "30958:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30958:81:15"
															},
															"nodeType": "YulIf",
															"src": "30955:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31065:41:15",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "31077:8:15"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "31087:18:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31073:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31073:33:15"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "31065:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "31116:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "31139:4:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "31126:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31126:18:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "31116:6:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31187:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31196:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31199:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31189:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31189:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31189:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31159:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31167:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "31156:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31156:30:15"
															},
															"nodeType": "YulIf",
															"src": "31153:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31212:21:15",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "31224:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31230:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31220:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31220:13:15"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "31212:4:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31295:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31304:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31307:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31297:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31297:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31297:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "31249:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "31259:12:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31259:14:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "31279:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "31287:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "31275:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31275:17:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31255:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31255:38:15"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "31245:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31245:49:15"
															},
															"nodeType": "YulIf",
															"src": "31242:2:15"
														}
													]
												},
												"name": "access_calldata_tail_t_array$_t_int256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "30846:8:15",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nodeType": "YulTypedName",
														"src": "30856:11:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nodeType": "YulTypedName",
														"src": "30872:4:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "30878:6:15",
														"type": ""
													}
												],
												"src": "30780:538:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31463:433:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31473:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nodeType": "YulIdentifier",
																		"src": "31512:11:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "31499:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31499:25:15"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "31477:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31618:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31627:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31630:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31620:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31620:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31620:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "31547:18:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "31575:12:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "31575:14:15"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "31591:8:15"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "31571:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "31571:29:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "31606:4:15",
																								"type": "",
																								"value": "0x20"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "31612:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "31602:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "31602:12:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "31567:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31567:48:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "31543:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31543:73:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31536:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31536:81:15"
															},
															"nodeType": "YulIf",
															"src": "31533:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31643:41:15",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "31655:8:15"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "31665:18:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31651:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31651:33:15"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "31643:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "31694:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "31717:4:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "31704:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31704:18:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "31694:6:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31765:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31774:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31777:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31767:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31767:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31767:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31737:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31745:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "31734:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31734:30:15"
															},
															"nodeType": "YulIf",
															"src": "31731:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31790:21:15",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "31802:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31808:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31798:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31798:13:15"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "31790:4:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31873:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31882:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31885:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31875:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31875:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31875:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "31827:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "31837:12:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31837:14:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "31857:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "31865:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "31853:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31853:17:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31833:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31833:38:15"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "31823:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31823:49:15"
															},
															"nodeType": "YulIf",
															"src": "31820:2:15"
														}
													]
												},
												"name": "access_calldata_tail_t_array$_t_struct$_BatchSwapStep_$1204_calldata_ptr_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "31424:8:15",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nodeType": "YulTypedName",
														"src": "31434:11:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nodeType": "YulTypedName",
														"src": "31450:4:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "31456:6:15",
														"type": ""
													}
												],
												"src": "31324:572:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32008:433:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "32018:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nodeType": "YulIdentifier",
																		"src": "32057:11:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "32044:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32044:25:15"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "32022:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32163:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32172:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32175:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32165:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32165:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32165:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "32092:18:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "32120:12:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "32120:14:15"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "32136:8:15"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "32116:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "32116:29:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "32151:4:15",
																								"type": "",
																								"value": "0x20"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "32157:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "32147:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "32147:12:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "32112:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32112:48:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "32088:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32088:73:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32081:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32081:81:15"
															},
															"nodeType": "YulIf",
															"src": "32078:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32188:41:15",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "32200:8:15"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "32210:18:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32196:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32196:33:15"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "32188:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "32239:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "32262:4:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "32249:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32249:18:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "32239:6:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32310:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32319:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32322:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32312:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32312:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32312:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "32282:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32290:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "32279:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32279:30:15"
															},
															"nodeType": "YulIf",
															"src": "32276:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32335:21:15",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "32347:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32353:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32343:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32343:13:15"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "32335:4:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32418:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32427:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32430:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32420:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32420:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32420:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "32372:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "32382:12:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32382:14:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "32402:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "32410:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "32398:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32398:17:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "32378:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32378:38:15"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "32368:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32368:49:15"
															},
															"nodeType": "YulIf",
															"src": "32365:2:15"
														}
													]
												},
												"name": "access_calldata_tail_t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "31969:8:15",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nodeType": "YulTypedName",
														"src": "31979:11:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nodeType": "YulTypedName",
														"src": "31995:4:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "32001:6:15",
														"type": ""
													}
												],
												"src": "31902:539:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32537:433:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "32547:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nodeType": "YulIdentifier",
																		"src": "32586:11:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "32573:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32573:25:15"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "32551:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32692:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32701:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32704:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32694:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32694:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32694:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "32621:18:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "32649:12:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "32649:14:15"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "32665:8:15"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "32645:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "32645:29:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "32680:4:15",
																								"type": "",
																								"value": "0x20"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "32686:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "32676:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "32676:12:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "32641:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32641:48:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "32617:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32617:73:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32610:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32610:81:15"
															},
															"nodeType": "YulIf",
															"src": "32607:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32717:41:15",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "32729:8:15"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "32739:18:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32725:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32725:33:15"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "32717:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "32768:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "32791:4:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "32778:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32778:18:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "32768:6:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32839:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32848:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32851:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32841:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32841:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32841:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "32811:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32819:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "32808:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32808:30:15"
															},
															"nodeType": "YulIf",
															"src": "32805:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32864:21:15",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "32876:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32882:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32872:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32872:13:15"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "32864:4:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32947:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32956:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32959:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32949:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32949:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32949:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "32901:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "32911:12:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32911:14:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "32931:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "32939:4:15",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "32927:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32927:17:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "32907:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32907:38:15"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "32897:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32897:49:15"
															},
															"nodeType": "YulIf",
															"src": "32894:2:15"
														}
													]
												},
												"name": "access_calldata_tail_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "32498:8:15",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nodeType": "YulTypedName",
														"src": "32508:11:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nodeType": "YulTypedName",
														"src": "32524:4:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "32530:6:15",
														"type": ""
													}
												],
												"src": "32447:523:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33016:243:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33026:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33042:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "33036:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "33036:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "33026:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "33054:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "33076:6:15"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "33084:4:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33072:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "33072:17:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "33058:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33200:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "33202:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33202:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "33202:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "33143:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33155:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "33140:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33140:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "33179:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33191:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "33176:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33176:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "33137:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "33137:62:15"
															},
															"nodeType": "YulIf",
															"src": "33134:2:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33238:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "33242:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33231:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "33231:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33231:22:15"
														}
													]
												},
												"name": "allocateMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "33000:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "33009:6:15",
														"type": ""
													}
												],
												"src": "32976:283:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33378:229:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33483:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "33485:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33485:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "33485:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "33455:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33463:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "33452:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "33452:30:15"
															},
															"nodeType": "YulIf",
															"src": "33449:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "33515:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "33527:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33535:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "33523:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "33523:17:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "33515:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "33577:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "33589:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33595:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33585:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "33585:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "33577:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "33362:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "33373:4:15",
														"type": ""
													}
												],
												"src": "33265:342:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33695:229:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33800:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "33802:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33802:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "33802:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "33772:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33780:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "33769:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "33769:30:15"
															},
															"nodeType": "YulIf",
															"src": "33766:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "33832:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "33844:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33852:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "33840:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "33840:17:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "33832:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "33894:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "33906:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33912:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33902:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "33902:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "33894:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "33679:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "33690:4:15",
														"type": ""
													}
												],
												"src": "33613:311:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33996:265:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34101:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "34103:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34103:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34103:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "34073:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34081:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "34070:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "34070:30:15"
															},
															"nodeType": "YulIf",
															"src": "34067:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "34153:41:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "34169:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34177:4:15",
																				"type": "",
																				"value": "0x1f"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34165:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34165:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34188:4:15",
																				"type": "",
																				"value": "0x1f"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "34184:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34184:9:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "34161:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "34161:33:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "34153:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "34231:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "34243:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34249:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "34239:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "34239:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "34231:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "33980:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "33991:4:15",
														"type": ""
													}
												],
												"src": "33930:331:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34353:60:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "34363:11:15",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "34371:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "34363:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "34384:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34396:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34401:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "34392:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "34392:14:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "34384:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "34340:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "34348:4:15",
														"type": ""
													}
												],
												"src": "34267:146:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34490:60:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "34500:11:15",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "34508:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "34500:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "34521:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34533:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34538:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "34529:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "34529:14:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "34521:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_int256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "34477:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "34485:4:15",
														"type": ""
													}
												],
												"src": "34419:131:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34659:60:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "34669:11:15",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "34677:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "34669:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "34690:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34702:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34707:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "34698:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "34698:14:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "34690:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "34646:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "34654:4:15",
														"type": ""
													}
												],
												"src": "34556:163:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34797:60:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "34807:11:15",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "34815:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "34807:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "34828:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34840:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34845:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "34836:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "34836:14:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "34828:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "34784:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "34792:4:15",
														"type": ""
													}
												],
												"src": "34725:132:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34951:40:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "34962:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "34978:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "34972:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "34972:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "34962:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34934:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "34944:6:15",
														"type": ""
													}
												],
												"src": "34863:128:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35070:40:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "35081:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "35097:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "35091:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "35091:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "35081:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_int256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "35053:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "35063:6:15",
														"type": ""
													}
												],
												"src": "34997:113:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35221:40:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "35232:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "35248:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "35242:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "35242:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "35232:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "35204:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "35214:6:15",
														"type": ""
													}
												],
												"src": "35116:145:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35341:40:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "35352:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "35368:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "35362:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "35362:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "35352:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "35324:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "35334:6:15",
														"type": ""
													}
												],
												"src": "35267:114:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35445:40:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "35456:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "35472:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "35466:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "35466:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "35456:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "35428:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "35438:6:15",
														"type": ""
													}
												],
												"src": "35387:98:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35550:40:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "35561:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "35577:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "35571:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "35571:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "35561:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "35533:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "35543:6:15",
														"type": ""
													}
												],
												"src": "35491:99:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35685:38:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "35695:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "35707:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35712:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "35703:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "35703:14:15"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "35695:4:15"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "35672:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "35680:4:15",
														"type": ""
													}
												],
												"src": "35596:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35803:38:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "35813:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "35825:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35830:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "35821:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "35821:14:15"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "35813:4:15"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_int256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "35790:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "35798:4:15",
														"type": ""
													}
												],
												"src": "35729:112:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35953:38:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "35963:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "35975:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35980:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "35971:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "35971:14:15"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "35963:4:15"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "35940:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "35948:4:15",
														"type": ""
													}
												],
												"src": "35847:144:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "36072:38:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "36082:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "36094:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "36099:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "36090:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "36090:14:15"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "36082:4:15"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "36059:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "36067:4:15",
														"type": ""
													}
												],
												"src": "35997:113:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "36227:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "36244:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "36249:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "36237:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "36237:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36237:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "36265:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "36284:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "36289:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "36280:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "36280:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "36265:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "36199:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "36204:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "36215:11:15",
														"type": ""
													}
												],
												"src": "36116:184:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "36416:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "36433:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "36438:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "36426:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "36426:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36426:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "36454:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "36473:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "36478:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "36469:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "36469:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "36454:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_int256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "36388:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "36393:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "36404:11:15",
														"type": ""
													}
												],
												"src": "36306:183:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "36637:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "36654:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "36659:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "36647:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "36647:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36647:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "36675:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "36694:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "36699:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "36690:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "36690:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "36675:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "36609:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "36614:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "36625:11:15",
														"type": ""
													}
												],
												"src": "36495:215:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "36827:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "36844:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "36849:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "36837:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "36837:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36837:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "36865:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "36884:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "36889:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "36880:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "36880:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "36865:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "36799:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "36804:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "36815:11:15",
														"type": ""
													}
												],
												"src": "36716:184:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "36991:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "37008:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "37013:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "37001:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "37001:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "37001:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "37029:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "37048:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "37053:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "37044:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "37044:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "37029:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "36963:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "36968:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "36979:11:15",
														"type": ""
													}
												],
												"src": "36906:158:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "37165:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "37182:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "37187:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "37175:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "37175:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "37175:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "37203:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "37222:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "37227:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "37218:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "37218:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "37203:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "37137:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "37142:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "37153:11:15",
														"type": ""
													}
												],
												"src": "37070:168:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "37357:34:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "37367:18:15",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "37382:3:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "37367:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "37329:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "37334:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "37345:11:15",
														"type": ""
													}
												],
												"src": "37244:147:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "37493:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "37510:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "37515:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "37503:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "37503:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "37503:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "37531:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "37550:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "37555:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "37546:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "37546:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "37531:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "37465:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "37470:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "37481:11:15",
														"type": ""
													}
												],
												"src": "37397:169:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "37616:261:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "37626:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "37649:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "37631:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "37631:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "37626:1:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "37660:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "37683:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "37665:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "37665:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "37660:1:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "37823:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "37825:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "37825:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "37825:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "37744:1:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "37751:66:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "37819:1:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "37747:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "37747:74:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "37741:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "37741:81:15"
															},
															"nodeType": "YulIf",
															"src": "37738:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "37855:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "37866:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "37869:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "37862:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "37862:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "37855:3:15"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "37603:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "37606:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "37612:3:15",
														"type": ""
													}
												],
												"src": "37572:305:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "37925:143:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "37935:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "37958:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "37940:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "37940:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "37935:1:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "37969:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "37992:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "37974:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "37974:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "37969:1:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "38016:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "38018:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "38018:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "38018:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "38013:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "38006:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "38006:9:15"
															},
															"nodeType": "YulIf",
															"src": "38003:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "38048:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "38057:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "38060:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "38053:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "38053:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "38048:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "37914:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "37917:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "37923:1:15",
														"type": ""
													}
												],
												"src": "37883:185:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "38122:300:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "38132:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "38155:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "38137:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "38137:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "38132:1:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "38166:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "38189:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "38171:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "38171:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "38166:1:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "38364:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "38366:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "38366:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "38366:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "38276:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "38269:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "38269:9:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "38262:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38262:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "38284:1:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "38291:66:15",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "38359:1:15"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "38287:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "38287:74:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "38281:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38281:81:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "38258:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "38258:105:15"
															},
															"nodeType": "YulIf",
															"src": "38255:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "38396:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "38411:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "38414:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "38407:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "38407:9:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "38396:7:15"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "38105:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "38108:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "38114:7:15",
														"type": ""
													}
												],
												"src": "38074:348:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "38473:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "38483:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "38512:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "38494:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "38494:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "38483:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "38455:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "38465:7:15",
														"type": ""
													}
												],
												"src": "38428:96:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "38583:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "38593:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "38622:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "38604:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "38604:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "38593:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "38565:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "38575:7:15",
														"type": ""
													}
												],
												"src": "38530:104:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "38682:48:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "38692:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "38717:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "38710:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38710:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "38703:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "38703:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "38692:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "38664:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "38674:7:15",
														"type": ""
													}
												],
												"src": "38640:90:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "38781:32:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "38791:16:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "38802:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "38791:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "38763:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "38773:7:15",
														"type": ""
													}
												],
												"src": "38736:77:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "38877:79:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "38887:16:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "38898:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "38887:7:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "38944:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_SwapKind_$1135",
																	"nodeType": "YulIdentifier",
																	"src": "38904:39:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "38904:46:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "38904:46:15"
														}
													]
												},
												"name": "cleanup_t_enum$_SwapKind_$1135",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "38859:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "38869:7:15",
														"type": ""
													}
												],
												"src": "38819:137:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "39006:32:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "39016:16:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "39027:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "39016:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "38988:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "38998:7:15",
														"type": ""
													}
												],
												"src": "38962:76:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "39089:81:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "39099:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "39114:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "39121:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "39110:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "39110:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "39099:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "39071:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "39081:7:15",
														"type": ""
													}
												],
												"src": "39044:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "39221:32:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "39231:16:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "39242:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "39231:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "39203:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "39213:7:15",
														"type": ""
													}
												],
												"src": "39176:77:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "39449:219:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "39515:146:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "39631:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "39638:6:15"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "39646:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "39646:14:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "39537:93:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "39537:124:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "39515:9:15"
																}
															]
														}
													]
												},
												"name": "convert_array_t_array$_t_struct$_BatchSwapStep_$1204_calldata_ptr_$dyn_calldata_ptr_to_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "39421:5:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "39428:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "39439:9:15",
														"type": ""
													}
												],
												"src": "39259:409:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "39748:80:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "39758:64:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "39816:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IAsset_$690_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "39771:44:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "39771:51:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "39758:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IAsset_$690_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "39728:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "39738:9:15",
														"type": ""
													}
												],
												"src": "39674:154:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "39908:53:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "39918:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "39949:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "39931:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "39931:24:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "39918:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IAsset_$690_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "39888:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "39898:9:15",
														"type": ""
													}
												],
												"src": "39834:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "40038:66:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "40048:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "40092:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_SwapKind_$1135",
																	"nodeType": "YulIdentifier",
																	"src": "40061:30:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "40061:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "40048:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_SwapKind_$1135_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "40018:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "40028:9:15",
														"type": ""
													}
												],
												"src": "39967:137:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "40161:103:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "40184:3:15"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "40189:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "40194:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "40171:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "40171:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "40171:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "40242:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "40247:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "40238:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "40238:16:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40256:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "40231:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "40231:27:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "40231:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "40143:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "40148:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "40153:6:15",
														"type": ""
													}
												],
												"src": "40110:154:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "40319:258:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "40329:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "40338:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "40333:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "40398:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "40423:3:15"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "40428:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "40419:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "40419:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "40442:3:15"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "40447:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "40438:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "40438:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "40432:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "40432:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "40412:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "40412:39:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "40412:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "40359:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "40362:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "40356:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "40356:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "40370:19:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "40372:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "40381:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "40384:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "40377:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "40377:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "40372:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "40352:3:15",
																"statements": []
															},
															"src": "40348:113:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "40495:76:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "40545:3:15"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "40550:6:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "40541:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "40541:16:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "40559:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "40534:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "40534:27:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "40534:27:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "40476:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "40479:6:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "40473:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "40473:13:15"
															},
															"nodeType": "YulIf",
															"src": "40470:2:15"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "40301:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "40306:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "40311:6:15",
														"type": ""
													}
												],
												"src": "40270:307:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "40626:190:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "40636:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "40663:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "40645:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "40645:24:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "40636:5:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "40759:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "40761:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "40761:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "40761:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "40684:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40691:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "40681:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "40681:77:15"
															},
															"nodeType": "YulIf",
															"src": "40678:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "40790:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "40801:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40808:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "40797:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "40797:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "40790:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "40612:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "40622:3:15",
														"type": ""
													}
												],
												"src": "40583:233:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "40850:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40867:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40870:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "40860:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "40860:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "40860:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40964:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40967:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "40957:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "40957:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "40957:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40988:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40991:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "40981:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "40981:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "40981:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "40822:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "41036:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41053:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41056:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41046:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "41046:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41046:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41150:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41153:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41143:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "41143:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41143:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41174:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41177:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "41167:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "41167:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41167:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "41008:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "41222:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41239:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41242:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41232:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "41232:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41232:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41336:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41339:4:15",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41329:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "41329:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41329:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41360:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41363:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "41353:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "41353:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41353:15:15"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "41194:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "41408:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41425:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41428:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41418:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "41418:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41418:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41522:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41525:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41515:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "41515:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41515:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41546:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41549:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "41539:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "41539:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41539:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "41380:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "41614:54:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "41624:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "41642:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "41649:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "41638:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "41638:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "41658:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "41654:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "41654:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "41634:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "41634:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "41624:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "41597:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "41607:6:15",
														"type": ""
													}
												],
												"src": "41566:102:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "41730:62:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "41764:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "41766:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41766:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "41766:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "41753:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "41760:1:15",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "41750:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "41750:12:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "41743:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "41743:20:15"
															},
															"nodeType": "YulIf",
															"src": "41740:2:15"
														}
													]
												},
												"name": "validator_assert_t_enum$_SwapKind_$1135",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "41723:5:15",
														"type": ""
													}
												],
												"src": "41674:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "41841:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "41898:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "41907:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "41910:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "41900:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41900:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "41900:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "41864:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "41889:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "41871:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "41871:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "41861:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "41861:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "41854:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "41854:43:15"
															},
															"nodeType": "YulIf",
															"src": "41851:2:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "41834:5:15",
														"type": ""
													}
												],
												"src": "41798:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "41977:87:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "42042:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42051:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42054:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "42044:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42044:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "42044:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "42000:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "42033:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "42007:25:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "42007:32:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "41997:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "41997:43:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "41990:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "41990:51:15"
															},
															"nodeType": "YulIf",
															"src": "41987:2:15"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "41970:5:15",
														"type": ""
													}
												],
												"src": "41926:138:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "42110:76:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "42164:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42173:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42176:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "42166:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42166:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "42166:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "42133:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "42155:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "42140:14:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "42140:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "42130:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "42130:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "42123:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "42123:40:15"
															},
															"nodeType": "YulIf",
															"src": "42120:2:15"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "42103:5:15",
														"type": ""
													}
												],
												"src": "42070:116:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "42235:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "42292:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42301:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42304:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "42294:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42294:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "42294:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "42258:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "42283:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "42265:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "42265:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "42255:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "42255:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "42248:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "42248:43:15"
															},
															"nodeType": "YulIf",
															"src": "42245:2:15"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "42228:5:15",
														"type": ""
													}
												],
												"src": "42192:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "42376:56:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "42410:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42419:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42422:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "42412:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42412:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "42412:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "42399:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "42406:1:15",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "42396:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "42396:12:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "42389:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "42389:20:15"
															},
															"nodeType": "YulIf",
															"src": "42386:2:15"
														}
													]
												},
												"name": "validator_revert_t_enum$_SwapKind_$1135",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "42369:5:15",
														"type": ""
													}
												],
												"src": "42320:112:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "42481:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "42538:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42547:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42550:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "42540:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42540:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "42540:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "42504:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "42529:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "42511:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "42511:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "42501:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "42501:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "42494:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "42494:43:15"
															},
															"nodeType": "YulIf",
															"src": "42491:2:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "42474:5:15",
														"type": ""
													}
												],
												"src": "42438:122:15"
											}
										]
									},
									"contents": "{\n\n    // struct IVault.BatchSwapStep[]\n    function abi_decode_available_length_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n        mstore(array, length) dst := add(array, 0x20)\n        let src := offset\n\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementPos := add(offset, calldataload(src))\n            mstore(dst, abi_decode_t_struct$_BatchSwapStep_$1204_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n        mstore(array, length) dst := add(array, 0x20)\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) { revert(0, 0) }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementPos := src\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_enum$_SwapKind_$1135(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_SwapKind_$1135(value)\n    }\n\n    // struct BarterswapRouterV1.AccessParams\n    function abi_decode_t_struct$_AccessParams_$67_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 544) { revert(0, 0) }\n        value := offset\n    }\n\n    // struct IVault.BatchSwapStep\n    function abi_decode_t_struct$_BatchSwapStep_$1204_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert(0, 0) }\n        value := allocateMemory(0xa0)\n\n        {\n            // poolId\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_bytes32(add(headStart, offset), end))\n\n        }\n\n        {\n            // assetInIndex\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // assetOutIndex\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // amount\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // userData\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            mstore(add(value, 0x80), abi_decode_t_bytes_memory_ptr(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct IVault.FundManagement\n    function abi_decode_t_struct$_FundManagement_$1228_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x80) { revert(0, 0) }\n        value := allocateMemory(0x80)\n\n        {\n            // sender\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // fromInternalBalance\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_bool(add(headStart, offset), end))\n\n        }\n\n        {\n            // recipient\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_address_payable(add(headStart, offset), end))\n\n        }\n\n        {\n            // toInternalBalance\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_bool(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_SwapKind_$1135(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_SwapKind_$1135(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_AccessParams_$67_calldata_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_struct$_AccessParams_$67_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_FundManagement_$1228_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_FundManagement_$1228_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_contract$_IAsset_$690_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_contract$_IAsset_$690_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encodeUpdatedPos_t_int256_to_t_int256(value0, pos) -> updatedPos {\n        abi_encode_t_int256_to_t_int256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_BatchSwapStep_$1204_memory_ptr_to_t_struct$_BatchSwapStep_$1204_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_BatchSwapStep_$1204_memory_ptr_to_t_struct$_BatchSwapStep_$1204_memory_ptr(value0, pos)\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // contract IAsset[] -> address[]\n    function abi_encode_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_contract$_IAsset_$690_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // int256[] -> int256[]\n    function abi_encode_t_array$_t_int256_$dyn_memory_ptr_to_t_array$_t_int256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_int256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_int256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_int256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_int256_to_t_int256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_int256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct IVault.BatchSwapStep[] -> struct IVault.BatchSwapStep[]\n    function abi_encode_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_BatchSwapStep_$1204_memory_ptr_to_t_struct$_BatchSwapStep_$1204_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IAsset_$690_to_t_address(value, pos) {\n        mstore(pos, convert_t_contract$_IAsset_$690_to_t_address(value))\n    }\n\n    function abi_encode_t_enum$_SwapKind_$1135_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_SwapKind_$1135_to_t_uint8(value))\n    }\n\n    function abi_encode_t_int256_to_t_int256(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n\n        mstore(add(pos, 0), \"TransferHelper::transferFrom: tr\")\n\n        mstore(add(pos, 32), \"ansferFrom failed\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n\n        mstore(add(pos, 0), \"TransferHelper::safeTransferETH:\")\n\n        mstore(add(pos, 32), \" ETH transfer failed\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n\n        mstore(add(pos, 0), \"SafeMath: multiplication overflo\")\n\n        mstore(add(pos, 32), \"w\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b4a7d1da0754581ce7ae064579be8816192727a7424a33ab329d195336a2715a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n\n        mstore(add(pos, 0), \"BarterswapV2Router: EXPIRED\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n\n        mstore(add(pos, 0), \"TransferHelper::safeTransfer: tr\")\n\n        mstore(add(pos, 32), \"ansfer failed\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e3211a392c9384e9023e00a96a7c46965046c5c5de8ed092aafb60d74edb4564_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n\n        mstore(add(pos, 0), \"Barterswap: FORBIDDEN\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ec6a417165f3e9d7e801fa9ee5810a196b69211795ebeed58c4e3c8666539155_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n\n        mstore(add(pos, 0), \"Price is wrong\")\n\n        end := add(pos, 32)\n    }\n\n    // struct IVault.BatchSwapStep -> struct IVault.BatchSwapStep\n    function abi_encode_t_struct$_BatchSwapStep_$1204_memory_ptr_to_t_struct$_BatchSwapStep_$1204_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // poolId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // assetInIndex\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // assetOutIndex\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // userData\n\n            let memberValue0 := mload(add(value, 0x80))\n\n            mstore(add(pos, 0x80), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    // struct IVault.FundManagement -> struct IVault.FundManagement\n    function abi_encode_t_struct$_FundManagement_$1228_memory_ptr_to_t_struct$_FundManagement_$1228_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // sender\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // fromInternalBalance\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // toInternalBalance\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_enum$_SwapKind_$1135_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_t_struct$_FundManagement_$1228_memory_ptr_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr_t_array$_t_int256_$dyn_memory_ptr_t_uint256__to_t_uint8_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_t_struct$_FundManagement_$1228_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_int256_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_enum$_SwapKind_$1135_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_struct$_FundManagement_$1228_memory_ptr_to_t_struct$_FundManagement_$1228_memory_ptr_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 224), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_int256_$dyn_memory_ptr_to_t_array$_t_int256_$dyn_memory_ptr_fromStack(value4,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 256))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b4a7d1da0754581ce7ae064579be8816192727a7424a33ab329d195336a2715a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b4a7d1da0754581ce7ae064579be8816192727a7424a33ab329d195336a2715a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e3211a392c9384e9023e00a96a7c46965046c5c5de8ed092aafb60d74edb4564__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e3211a392c9384e9023e00a96a7c46965046c5c5de8ed092aafb60d74edb4564_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec6a417165f3e9d7e801fa9ee5810a196b69211795ebeed58c4e3c8666539155__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec6a417165f3e9d7e801fa9ee5810a196b69211795ebeed58c4e3c8666539155_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bytes_memory_ptr_t_address_t_uint256_t_address_t_address__to_t_uint256_t_uint256_t_bytes_memory_ptr_t_address_t_uint256_t_address_t_address__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_address_to_t_address_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function access_calldata_tail_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x20))) { revert(0, 0) }\n\n    }\n\n    function access_calldata_tail_t_array$_t_contract$_IAsset_$690_$dyn_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x20))) { revert(0, 0) }\n\n    }\n\n    function access_calldata_tail_t_array$_t_int256_$dyn_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x20))) { revert(0, 0) }\n\n    }\n\n    function access_calldata_tail_t_array$_t_struct$_BatchSwapStep_$1204_calldata_ptr_$dyn_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x20))) { revert(0, 0) }\n\n    }\n\n    function access_calldata_tail_t_array$_t_uint256_$dyn_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x20))) { revert(0, 0) }\n\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert(0, 0) }\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_int256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_int256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_int256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_int256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_enum$_SwapKind_$1135(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_SwapKind_$1135(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_array_t_array$_t_struct$_BatchSwapStep_$1204_calldata_ptr_$dyn_calldata_ptr_to_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr(value, length) -> converted {\n\n        // Copy the array to a free position in memory\n        converted :=\n\n        abi_decode_available_length_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr(value, length, calldatasize())\n\n    }\n\n    function convert_t_contract$_IAsset_$690_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IAsset_$690_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IAsset_$690_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_enum$_SwapKind_$1135_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_SwapKind_$1135(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_assert_t_enum$_SwapKind_$1135(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_SwapKind_$1135(value) {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100ab5760003560e01c80639af1d35a116100645780639af1d35a146101e0578063a2e74af61461020b578063ef3858ab14610248578063f46901ed14610264578063f654df7a146102a1578063fd07291f146102de576100b2565b8063017e7e58146100b7578063239aad0a146100e2578063257b66b0146100fe5780633d18678e1461013b5780638ac051f2146101785780638e7fa96a146101b5576100b2565b366100b257005b600080fd5b3480156100c357600080fd5b506100cc61031b565b6040516100d991906126fb565b60405180910390f35b6100fc60048036038101906100f79190611f5c565b61033f565b005b34801561010a57600080fd5b5061012560048036038101906101209190611fc6565b61095a565b60405161013291906126e0565b60405180910390f35b34801561014757600080fd5b50610162600480360381019061015d9190611fc6565b61098d565b60405161016f91906127b4565b60405180910390f35b34801561018457600080fd5b5061019f600480360381019061019a9190611e4e565b610a73565b6040516101ac91906126e0565b60405180910390f35b3480156101c157600080fd5b506101ca610afa565b6040516101d791906126e0565b60405180910390f35b3480156101ec57600080fd5b506101f5610b20565b6040516102029190612949565b60405180910390f35b34801561021757600080fd5b50610232600480360381019061022d9190611e4e565b610b26565b60405161023f91906127b4565b60405180910390f35b610262600480360381019061025d9190611fef565b610c72565b005b34801561027057600080fd5b5061028b60048036038101906102869190611ea0565b610db5565b60405161029891906127b4565b60405180910390f35b3480156102ad57600080fd5b506102c860048036038101906102c39190611fef565b610f00565b6040516102d591906127b4565b60405180910390f35b3480156102ea57600080fd5b5061030560048036038101906103009190611ec9565b61105e565b6040516103129190612949565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006103998280600001906103549190612b36565b80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505061105e565b905060006103cc670de0b6b3a76400006103be600254856110d890919063ffffffff16565b61115390919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168360a00160208101906103f99190611e4e565b73ffffffffffffffffffffffffffffffffffffffff1614156104915780826104219190612dd5565b3414610462576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045990612929565b60405180910390fd5b61048c60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168261119d565b6104ee565b6104af8360a00160208101906104a79190611e4e565b3330856112c3565b6104ed8360a00160208101906104c59190611e4e565b3360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846112c3565b5b60005b838060e001906105019190612b36565b905081101561095457600060036000868060e001906105209190612b36565b85818110610557577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000821480156105b157506004858061010001906105ad9190612b36565b9050145b1561068b576106868560a00160208101906105cc9190611e4e565b828760600160208101906105e09190611ea0565b888061010001906105f19190612b36565b6002818110610629577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135898061010001906106419190612b36565b80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506113fc565b610940565b6001821480156106ad5750600185806101c001906106a99190612a88565b9050115b156107bf576107ba856102000160208101906106c99190611f33565b8660a00160208101906106dc9190611e4e565b83888061012001906106ee9190612adf565b906106f99190612f37565b896101400180360381019061070e9190611f9d565b8a806101e0019061071f9190612a31565b80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b806101c001906107709190612a88565b80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508c6080013561150b565b61093f565b61093e818680600001906107d39190612b36565b8581811061080a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201358780602001906108219190612b36565b86818110610858577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013588806040019061086f91906129da565b878181106108a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020028101906108b89190612b8d565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505089606001602081019061090e9190611ea0565b8a608001358b60a00160208101906109269190611e4e565b8c60c00160208101906109399190611e4e565b6117ac565b5b5b50808061094c90612fc4565b9150506104f1565b50505050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a16906128c9565b60405180910390fd5b6000821415610a63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5a90612909565b60405180910390fd5b8160028190555060019050919050565b60008173ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015610abb57600080fd5b505afa158015610acf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af39190611e77565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610baf906128c9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1f90612909565b60405180910390fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b6000610ca3670de0b6b3a7640000610c95600254866110d890919063ffffffff16565b61115390919063ffffffff16565b90508083610cb19190612dd5565b3414610cf2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce990612929565b60405180910390fd5b610d1c60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168261119d565b730d500b1d8e8ef31e21c99d1db9a6444d3adf127073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b158015610d7857600080fd5b505af1158015610d8c573d6000803e3d6000fd5b5050505050610db0730d500b1d8e8ef31e21c99d1db9a6444d3adf12708385611982565b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3e906128c9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610eb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eae90612909565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f89906128c9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611002576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff990612909565b60405180910390fd5b816003600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905092915050565b60008060005b83518110156110ce578381815181106110a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151826110b99190612dd5565b915080806110c690612fc4565b915050611064565b5080915050919050565b6000808314156110eb576000905061114d565b600082846110f99190612e5c565b90508284826111089190612e2b565b14611148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113f906128a9565b60405180910390fd5b809150505b92915050565b600061119583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611ab8565b905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff1682600067ffffffffffffffff8111156111f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561122a5781602001600182028036833780820191505090505b5060405161123891906126c9565b60006040518083038185875af1925050503d8060008114611275576040519150601f19603f3d011682016040523d82523d6000602084013e61127a565b606091505b50509050806112be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b590612889565b60405180910390fd5b505050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016112f793929190612754565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161134591906126c9565b6000604051808303816000865af19150503d8060008114611382576040519150601f19603f3d011682016040523d82523d6000602084013e611387565b606091505b50915091508180156113b557506000815114806113b45750808060200190518101906113b39190611f0a565b5b5b6113f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113eb90612869565b60405180910390fd5b505050505050565b8473ffffffffffffffffffffffffffffffffffffffff1663095ea7b385846040518363ffffffff1660e01b815260040161143792919061278b565b602060405180830381600087803b15801561145157600080fd5b505af1158015611465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114899190611f0a565b50611495858584611982565b8373ffffffffffffffffffffffffffffffffffffffff16633502eea88487846040518463ffffffff1660e01b81526004016114d293929190612716565b600060405180830381600087803b1580156114ec57600080fd5b505af1158015611500573d6000803e3d6000fd5b505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156116095761158f868660008151811061157e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516060015161119d565b8573ffffffffffffffffffffffffffffffffffffffff16631738b50e8987878787876040518763ffffffff1660e01b81526004016115d2969594939291906127cf565b600060405180830381600087803b1580156115ec57600080fd5b505af1158015611600573d6000803e3d6000fd5b505050506117a2565b8573ffffffffffffffffffffffffffffffffffffffff1663095ea7b38787600081518110611660577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151606001516040518363ffffffff1660e01b815260040161168992919061278b565b602060405180830381600087803b1580156116a357600080fd5b505af11580156116b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116db9190611f0a565b5061172c87878760008151811061171b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160600151611982565b8573ffffffffffffffffffffffffffffffffffffffff16631738b50e8987878787876040518763ffffffff1660e01b815260040161176f969594939291906127cf565b600060405180830381600087803b15801561178957600080fd5b505af115801561179d573d6000803e3d6000fd5b505050505b5050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611867576117eb888861119d565b8773ffffffffffffffffffffffffffffffffffffffff1663b1a271d4888888888888886040518863ffffffff1660e01b81526004016118309796959493929190612964565b600060405180830381600087803b15801561184a57600080fd5b505af115801561185e573d6000803e3d6000fd5b50505050611978565b8773ffffffffffffffffffffffffffffffffffffffff1663095ea7b389896040518363ffffffff1660e01b81526004016118a292919061278b565b602060405180830381600087803b1580156118bc57600080fd5b505af11580156118d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f49190611f0a565b50611900828989611982565b8773ffffffffffffffffffffffffffffffffffffffff1663b1a271d4888888888888886040518863ffffffff1660e01b81526004016119459796959493929190612964565b600060405180830381600087803b15801561195f57600080fd5b505af1158015611973573d6000803e3d6000fd5b505050505b5050505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016119b492919061278b565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611a0291906126c9565b6000604051808303816000865af19150503d8060008114611a3f576040519150601f19603f3d011682016040523d82523d6000602084013e611a44565b606091505b5091509150818015611a725750600081511480611a71575080806020019051810190611a709190611f0a565b5b5b611ab1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa8906128e9565b60405180910390fd5b5050505050565b60008083118290611aff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af69190612847565b60405180910390fd5b5060008385611b0e9190612e2b565b9050809150509392505050565b6000611b2e611b2984612c15565b612be4565b9050808382526020820190508260005b85811015611b6e5781358501611b548882611d25565b845260208401935060208301925050600181019050611b3e565b5050509392505050565b6000611b8b611b8684612c41565b612be4565b90508083825260208201905082856020860282011115611baa57600080fd5b60005b85811015611bda5781611bc08882611e39565b845260208401935060208301925050600181019050611bad565b5050509392505050565b6000611bf7611bf284612c6d565b612be4565b905082815260208101848484011115611c0f57600080fd5b611c1a848285612f82565b509392505050565b600081359050611c31816130ee565b92915050565b600081519050611c46816130ee565b92915050565b600081359050611c5b81613105565b92915050565b600082601f830112611c7257600080fd5b8135611c82848260208601611b78565b91505092915050565b600081359050611c9a8161311c565b92915050565b600081519050611caf8161311c565b92915050565b600081359050611cc481613133565b92915050565b600082601f830112611cdb57600080fd5b8135611ceb848260208601611be4565b91505092915050565b600081359050611d038161314a565b92915050565b60006102208284031215611d1c57600080fd5b81905092915050565b600060a08284031215611d3757600080fd5b611d4160a0612be4565b90506000611d5184828501611cb5565b6000830152506020611d6584828501611e39565b6020830152506040611d7984828501611e39565b6040830152506060611d8d84828501611e39565b606083015250608082013567ffffffffffffffff811115611dad57600080fd5b611db984828501611cca565b60808301525092915050565b600060808284031215611dd757600080fd5b611de16080612be4565b90506000611df184828501611c22565b6000830152506020611e0584828501611c8b565b6020830152506040611e1984828501611c4c565b6040830152506060611e2d84828501611c8b565b60608301525092915050565b600081359050611e488161315a565b92915050565b600060208284031215611e6057600080fd5b6000611e6e84828501611c22565b91505092915050565b600060208284031215611e8957600080fd5b6000611e9784828501611c37565b91505092915050565b600060208284031215611eb257600080fd5b6000611ec084828501611c4c565b91505092915050565b600060208284031215611edb57600080fd5b600082013567ffffffffffffffff811115611ef557600080fd5b611f0184828501611c61565b91505092915050565b600060208284031215611f1c57600080fd5b6000611f2a84828501611ca0565b91505092915050565b600060208284031215611f4557600080fd5b6000611f5384828501611cf4565b91505092915050565b600060208284031215611f6e57600080fd5b600082013567ffffffffffffffff811115611f8857600080fd5b611f9484828501611d09565b91505092915050565b600060808284031215611faf57600080fd5b6000611fbd84828501611dc5565b91505092915050565b600060208284031215611fd857600080fd5b6000611fe684828501611e39565b91505092915050565b6000806040838503121561200257600080fd5b600061201085828601611e39565b925050602061202185828601611c22565b9150509250929050565b60006120378383612322565b60208301905092915050565b600061204f8383612340565b60208301905092915050565b600061206783836125e0565b905092915050565b600061207b83836126ab565b60208301905092915050565b61209081612ec8565b82525050565b61209f81612ec8565b82525050565b6120ae81612eb6565b82525050565b6120bd81612eb6565b82525050565b60006120ce82612cdd565b6120d88185612d53565b93506120e383612c9d565b8060005b838110156121145781516120fb888261202b565b975061210683612d1f565b9250506001810190506120e7565b5085935050505092915050565b600061212c82612ce8565b6121368185612d64565b935061214183612cad565b8060005b838110156121725781516121598882612043565b975061216483612d2c565b925050600181019050612145565b5085935050505092915050565b600061218a82612cf3565b6121948185612d75565b9350836020820285016121a685612cbd565b8060005b858110156121e257848403895281516121c3858261205b565b94506121ce83612d39565b925060208a019950506001810190506121aa565b50829750879550505050505092915050565b60006121ff82612cfe565b6122098185612d86565b935061221483612ccd565b8060005b8381101561224557815161222c888261206f565b975061223783612d46565b925050600181019050612218565b5085935050505092915050565b61225b81612eda565b82525050565b61226a81612eda565b82525050565b61227981612ee6565b82525050565b600061228a82612d09565b6122948185612d97565b93506122a4818560208601612f91565b6122ad816130c9565b840191505092915050565b60006122c382612d09565b6122cd8185612da8565b93506122dd818560208601612f91565b6122e6816130c9565b840191505092915050565b60006122fc82612d09565b6123068185612db9565b9350612316818560208601612f91565b80840191505092915050565b61232b81612f4c565b82525050565b61233a81612f70565b82525050565b61234981612f03565b82525050565b600061235a82612d14565b6123648185612dc4565b9350612374818560208601612f91565b61237d816130c9565b840191505092915050565b6000612395603183612dc4565b91507f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260008301527f616e7366657246726f6d206661696c65640000000000000000000000000000006020830152604082019050919050565b60006123fb603483612dc4565b91507f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60008301527f20455448207472616e73666572206661696c65640000000000000000000000006020830152604082019050919050565b6000612461602183612dc4565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006124c7601b83612dc4565b91507f426172746572737761705632526f757465723a204558504952454400000000006000830152602082019050919050565b6000612507602d83612dc4565b91507f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260008301527f616e73666572206661696c6564000000000000000000000000000000000000006020830152604082019050919050565b600061256d601583612dc4565b91507f426172746572737761703a20464f5242494444454e00000000000000000000006000830152602082019050919050565b60006125ad600e83612dc4565b91507f50726963652069732077726f6e670000000000000000000000000000000000006000830152602082019050919050565b600060a0830160008301516125f86000860182612270565b50602083015161260b60208601826126ab565b50604083015161261e60408601826126ab565b50606083015161263160608601826126ab565b5060808301518482036080860152612649828261227f565b9150508091505092915050565b60808201600082015161266c60008501826120a5565b50602082015161267f6020850182612252565b5060408201516126926040850182612087565b5060608201516126a56060850182612252565b50505050565b6126b481612f2d565b82525050565b6126c381612f2d565b82525050565b60006126d582846122f1565b915081905092915050565b60006020820190506126f560008301846120b4565b92915050565b60006020820190506127106000830184612096565b92915050565b600060608201905061272b60008301866120b4565b61273860208301856120b4565b818103604083015261274a81846121f4565b9050949350505050565b600060608201905061276960008301866120b4565b61277660208301856120b4565b61278360408301846126ba565b949350505050565b60006040820190506127a060008301856120b4565b6127ad60208301846126ba565b9392505050565b60006020820190506127c96000830184612261565b92915050565b6000610120820190506127e56000830189612331565b81810360208301526127f7818861217f565b90506128066040830187612656565b81810360c083015261281881866120c3565b905081810360e083015261282c8185612121565b905061283c6101008301846126ba565b979650505050505050565b60006020820190508181036000830152612861818461234f565b905092915050565b6000602082019050818103600083015261288281612388565b9050919050565b600060208201905081810360008301526128a2816123ee565b9050919050565b600060208201905081810360008301526128c281612454565b9050919050565b600060208201905081810360008301526128e2816124ba565b9050919050565b60006020820190508181036000830152612902816124fa565b9050919050565b6000602082019050818103600083015261292281612560565b9050919050565b60006020820190508181036000830152612942816125a0565b9050919050565b600060208201905061295e60008301846126ba565b92915050565b600060e082019050612979600083018a6126ba565b61298660208301896126ba565b818103604083015261299881886122b8565b90506129a760608301876120b4565b6129b460808301866126ba565b6129c160a08301856120b4565b6129ce60c08301846120b4565b98975050505050505050565b600080833560016020038436030381126129f357600080fd5b80840192508235915067ffffffffffffffff821115612a1157600080fd5b602083019250602082023603831315612a2957600080fd5b509250929050565b60008083356001602003843603038112612a4a57600080fd5b80840192508235915067ffffffffffffffff821115612a6857600080fd5b602083019250602082023603831315612a8057600080fd5b509250929050565b60008083356001602003843603038112612aa157600080fd5b80840192508235915067ffffffffffffffff821115612abf57600080fd5b602083019250602082023603831315612ad757600080fd5b509250929050565b60008083356001602003843603038112612af857600080fd5b80840192508235915067ffffffffffffffff821115612b1657600080fd5b602083019250602082023603831315612b2e57600080fd5b509250929050565b60008083356001602003843603038112612b4f57600080fd5b80840192508235915067ffffffffffffffff821115612b6d57600080fd5b602083019250602082023603831315612b8557600080fd5b509250929050565b60008083356001602003843603038112612ba657600080fd5b80840192508235915067ffffffffffffffff821115612bc457600080fd5b602083019250600182023603831315612bdc57600080fd5b509250929050565b6000604051905081810181811067ffffffffffffffff82111715612c0b57612c0a61309a565b5b8060405250919050565b600067ffffffffffffffff821115612c3057612c2f61309a565b5b602082029050602081019050919050565b600067ffffffffffffffff821115612c5c57612c5b61309a565b5b602082029050602081019050919050565b600067ffffffffffffffff821115612c8857612c8761309a565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000612de082612f2d565b9150612deb83612f2d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612e2057612e1f61300d565b5b828201905092915050565b6000612e3682612f2d565b9150612e4183612f2d565b925082612e5157612e5061303c565b5b828204905092915050565b6000612e6782612f2d565b9150612e7283612f2d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612eab57612eaa61300d565b5b828202905092915050565b6000612ec182612f0d565b9050919050565b6000612ed382612f0d565b9050919050565b60008115159050919050565b6000819050919050565b6000819050612efe826130da565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612f44368484611b1b565b905092915050565b6000612f5782612f5e565b9050919050565b6000612f6982612f0d565b9050919050565b6000612f7b82612ef0565b9050919050565b82818337600083830152505050565b60005b83811015612faf578082015181840152602081019050612f94565b83811115612fbe576000848401525b50505050565b6000612fcf82612f2d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156130025761300161300d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b600281106130eb576130ea61306b565b5b50565b6130f781612eb6565b811461310257600080fd5b50565b61310e81612ec8565b811461311957600080fd5b50565b61312581612eda565b811461313057600080fd5b50565b61313c81612ee6565b811461314757600080fd5b50565b6002811061315757600080fd5b50565b61316381612f2d565b811461316e57600080fd5b5056fea2646970667358221220a549b58b89159834cfedc8c81afbbb14db13da9de507e6aa715c9d7e64d6438e64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9AF1D35A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9AF1D35A EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xA2E74AF6 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xEF3858AB EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xF46901ED EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xF654DF7A EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xFD07291F EQ PUSH2 0x2DE JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x17E7E58 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0x239AAD0A EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x257B66B0 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x3D18678E EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x8AC051F2 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x8E7FA96A EQ PUSH2 0x1B5 JUMPI PUSH2 0xB2 JUMP JUMPDEST CALLDATASIZE PUSH2 0xB2 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0x31B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x26FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST PUSH2 0x95A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x26E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x26E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CA PUSH2 0xAFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x26E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F5 PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1FEF JUMP JUMPDEST PUSH2 0xC72 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1EA0 JUMP JUMPDEST PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1FEF JUMP JUMPDEST PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1EC9 JUMP JUMPDEST PUSH2 0x105E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x399 DUP3 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3CC PUSH8 0xDE0B6B3A7640000 PUSH2 0x3BE PUSH1 0x2 SLOAD DUP6 PUSH2 0x10D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1153 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0xA0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x491 JUMPI DUP1 DUP3 PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x2DD5 JUMP JUMPDEST CALLVALUE EQ PUSH2 0x462 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x459 SWAP1 PUSH2 0x2929 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x48C PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x119D JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x4AF DUP4 PUSH1 0xA0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST CALLER ADDRESS DUP6 PUSH2 0x12C3 JUMP JUMPDEST PUSH2 0x4ED DUP4 PUSH1 0xA0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x12C3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP1 PUSH1 0xE0 ADD SWAP1 PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x954 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 DUP1 PUSH1 0xE0 ADD SWAP1 PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST DUP6 DUP2 DUP2 LT PUSH2 0x557 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 EQ DUP1 ISZERO PUSH2 0x5B1 JUMPI POP PUSH1 0x4 DUP6 DUP1 PUSH2 0x100 ADD SWAP1 PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST SWAP1 POP EQ JUMPDEST ISZERO PUSH2 0x68B JUMPI PUSH2 0x686 DUP6 PUSH1 0xA0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST DUP3 DUP8 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x1EA0 JUMP JUMPDEST DUP9 DUP1 PUSH2 0x100 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 LT PUSH2 0x629 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP10 DUP1 PUSH2 0x100 ADD SWAP1 PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x940 JUMP JUMPDEST PUSH1 0x1 DUP3 EQ DUP1 ISZERO PUSH2 0x6AD JUMPI POP PUSH1 0x1 DUP6 DUP1 PUSH2 0x1C0 ADD SWAP1 PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0x2A88 JUMP JUMPDEST SWAP1 POP GT JUMPDEST ISZERO PUSH2 0x7BF JUMPI PUSH2 0x7BA DUP6 PUSH2 0x200 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST DUP7 PUSH1 0xA0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST DUP4 DUP9 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x2ADF JUMP JUMPDEST SWAP1 PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0x2F37 JUMP JUMPDEST DUP10 PUSH2 0x140 ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x1F9D JUMP JUMPDEST DUP11 DUP1 PUSH2 0x1E0 ADD SWAP1 PUSH2 0x71F SWAP2 SWAP1 PUSH2 0x2A31 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP12 DUP1 PUSH2 0x1C0 ADD SWAP1 PUSH2 0x770 SWAP2 SWAP1 PUSH2 0x2A88 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP13 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x150B JUMP JUMPDEST PUSH2 0x93F JUMP JUMPDEST PUSH2 0x93E DUP2 DUP7 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x7D3 SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST DUP6 DUP2 DUP2 LT PUSH2 0x80A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP8 DUP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST DUP7 DUP2 DUP2 LT PUSH2 0x858 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP9 DUP1 PUSH1 0x40 ADD SWAP1 PUSH2 0x86F SWAP2 SWAP1 PUSH2 0x29DA JUMP JUMPDEST DUP8 DUP2 DUP2 LT PUSH2 0x8A6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x8B8 SWAP2 SWAP1 PUSH2 0x2B8D JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP10 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x90E SWAP2 SWAP1 PUSH2 0x1EA0 JUMP JUMPDEST DUP11 PUSH1 0x80 ADD CALLDATALOAD DUP12 PUSH1 0xA0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST DUP13 PUSH1 0xC0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x939 SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH2 0x17AC JUMP JUMPDEST JUMPDEST JUMPDEST POP DUP1 DUP1 PUSH2 0x94C SWAP1 PUSH2 0x2FC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4F1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA16 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5A SWAP1 PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xACF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF3 SWAP2 SWAP1 PUSH2 0x1E77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAF SWAP1 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1F SWAP1 PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA3 PUSH8 0xDE0B6B3A7640000 PUSH2 0xC95 PUSH1 0x2 SLOAD DUP7 PUSH2 0x10D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1153 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH2 0xCB1 SWAP2 SWAP1 PUSH2 0x2DD5 JUMP JUMPDEST CALLVALUE EQ PUSH2 0xCF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE9 SWAP1 PUSH2 0x2929 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD1C PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x119D JUMP JUMPDEST PUSH20 0xD500B1D8E8EF31E21C99D1DB9A6444D3ADF1270 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0xDB0 PUSH20 0xD500B1D8E8EF31E21C99D1DB9A6444D3ADF1270 DUP4 DUP6 PUSH2 0x1982 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3E SWAP1 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEAE SWAP1 PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF89 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1002 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF9 SWAP1 PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x10CE JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x10A6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x10B9 SWAP2 SWAP1 PUSH2 0x2DD5 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x10C6 SWAP1 PUSH2 0x2FC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1064 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x10EB JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x114D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x10F9 SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x1108 SWAP2 SWAP1 PUSH2 0x2E2B JUMP JUMPDEST EQ PUSH2 0x1148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113F SWAP1 PUSH2 0x28A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1195 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1AB8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11F8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x122A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1238 SWAP2 SWAP1 PUSH2 0x26C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1275 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x127A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x12BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B5 SWAP1 PUSH2 0x2889 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x12F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2754 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x1345 SWAP2 SWAP1 PUSH2 0x26C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1382 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x13B5 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x13B4 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x13B3 SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x13F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13EB SWAP1 PUSH2 0x2869 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1437 SWAP3 SWAP2 SWAP1 PUSH2 0x278B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1465 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1489 SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST POP PUSH2 0x1495 DUP6 DUP6 DUP5 PUSH2 0x1982 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3502EEA8 DUP5 DUP8 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2716 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1500 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1609 JUMPI PUSH2 0x158F DUP7 DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x157E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH2 0x119D JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1738B50E DUP10 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D2 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1600 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x17A2 JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP8 DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1660 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1689 SWAP3 SWAP2 SWAP1 PUSH2 0x278B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16DB SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST POP PUSH2 0x172C DUP8 DUP8 DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x171B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH2 0x1982 JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1738B50E DUP10 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176F SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x179D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1867 JUMPI PUSH2 0x17EB DUP9 DUP9 PUSH2 0x119D JUMP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB1A271D4 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1830 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2964 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x184A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x185E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1978 JUMP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP10 DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A2 SWAP3 SWAP2 SWAP1 PUSH2 0x278B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18F4 SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST POP PUSH2 0x1900 DUP3 DUP10 DUP10 PUSH2 0x1982 JUMP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB1A271D4 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1945 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2964 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x195F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1973 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x19B4 SWAP3 SWAP2 SWAP1 PUSH2 0x278B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x1A02 SWAP2 SWAP1 PUSH2 0x26C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A3F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A44 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1A72 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x1A71 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1A70 SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x1AB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA8 SWAP1 PUSH2 0x28E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x1AFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF6 SWAP2 SWAP1 PUSH2 0x2847 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x1B0E SWAP2 SWAP1 PUSH2 0x2E2B JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B2E PUSH2 0x1B29 DUP5 PUSH2 0x2C15 JUMP JUMPDEST PUSH2 0x2BE4 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1B6E JUMPI DUP2 CALLDATALOAD DUP6 ADD PUSH2 0x1B54 DUP9 DUP3 PUSH2 0x1D25 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B3E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B8B PUSH2 0x1B86 DUP5 PUSH2 0x2C41 JUMP JUMPDEST PUSH2 0x2BE4 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x1BAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1BDA JUMPI DUP2 PUSH2 0x1BC0 DUP9 DUP3 PUSH2 0x1E39 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1BAD JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF7 PUSH2 0x1BF2 DUP5 PUSH2 0x2C6D JUMP JUMPDEST PUSH2 0x2BE4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C1A DUP5 DUP3 DUP6 PUSH2 0x2F82 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C31 DUP2 PUSH2 0x30EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C46 DUP2 PUSH2 0x30EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C5B DUP2 PUSH2 0x3105 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C82 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C9A DUP2 PUSH2 0x311C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CAF DUP2 PUSH2 0x311C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CC4 DUP2 PUSH2 0x3133 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CEB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D03 DUP2 PUSH2 0x314A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x220 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D41 PUSH1 0xA0 PUSH2 0x2BE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D51 DUP5 DUP3 DUP6 ADD PUSH2 0x1CB5 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1D65 DUP5 DUP3 DUP6 ADD PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1D79 DUP5 DUP3 DUP6 ADD PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1D8D DUP5 DUP3 DUP6 ADD PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DB9 DUP5 DUP3 DUP6 ADD PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DE1 PUSH1 0x80 PUSH2 0x2BE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DF1 DUP5 DUP3 DUP6 ADD PUSH2 0x1C22 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1E05 DUP5 DUP3 DUP6 ADD PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1E19 DUP5 DUP3 DUP6 ADD PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1E2D DUP5 DUP3 DUP6 ADD PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E48 DUP2 PUSH2 0x315A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E6E DUP5 DUP3 DUP6 ADD PUSH2 0x1C22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E97 DUP5 DUP3 DUP6 ADD PUSH2 0x1C37 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EC0 DUP5 DUP3 DUP6 ADD PUSH2 0x1C4C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F01 DUP5 DUP3 DUP6 ADD PUSH2 0x1C61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F2A DUP5 DUP3 DUP6 ADD PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F53 DUP5 DUP3 DUP6 ADD PUSH2 0x1CF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F94 DUP5 DUP3 DUP6 ADD PUSH2 0x1D09 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FBD DUP5 DUP3 DUP6 ADD PUSH2 0x1DC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FE6 DUP5 DUP3 DUP6 ADD PUSH2 0x1E39 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2002 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2010 DUP6 DUP3 DUP7 ADD PUSH2 0x1E39 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2021 DUP6 DUP3 DUP7 ADD PUSH2 0x1C22 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2037 DUP4 DUP4 PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204F DUP4 DUP4 PUSH2 0x2340 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2067 DUP4 DUP4 PUSH2 0x25E0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x207B DUP4 DUP4 PUSH2 0x26AB JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2090 DUP2 PUSH2 0x2EC8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x209F DUP2 PUSH2 0x2EC8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20AE DUP2 PUSH2 0x2EB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20BD DUP2 PUSH2 0x2EB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CE DUP3 PUSH2 0x2CDD JUMP JUMPDEST PUSH2 0x20D8 DUP2 DUP6 PUSH2 0x2D53 JUMP JUMPDEST SWAP4 POP PUSH2 0x20E3 DUP4 PUSH2 0x2C9D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2114 JUMPI DUP2 MLOAD PUSH2 0x20FB DUP9 DUP3 PUSH2 0x202B JUMP JUMPDEST SWAP8 POP PUSH2 0x2106 DUP4 PUSH2 0x2D1F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x20E7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212C DUP3 PUSH2 0x2CE8 JUMP JUMPDEST PUSH2 0x2136 DUP2 DUP6 PUSH2 0x2D64 JUMP JUMPDEST SWAP4 POP PUSH2 0x2141 DUP4 PUSH2 0x2CAD JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2172 JUMPI DUP2 MLOAD PUSH2 0x2159 DUP9 DUP3 PUSH2 0x2043 JUMP JUMPDEST SWAP8 POP PUSH2 0x2164 DUP4 PUSH2 0x2D2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2145 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x218A DUP3 PUSH2 0x2CF3 JUMP JUMPDEST PUSH2 0x2194 DUP2 DUP6 PUSH2 0x2D75 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x21A6 DUP6 PUSH2 0x2CBD JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x21E2 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x21C3 DUP6 DUP3 PUSH2 0x205B JUMP JUMPDEST SWAP5 POP PUSH2 0x21CE DUP4 PUSH2 0x2D39 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21AA JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21FF DUP3 PUSH2 0x2CFE JUMP JUMPDEST PUSH2 0x2209 DUP2 DUP6 PUSH2 0x2D86 JUMP JUMPDEST SWAP4 POP PUSH2 0x2214 DUP4 PUSH2 0x2CCD JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2245 JUMPI DUP2 MLOAD PUSH2 0x222C DUP9 DUP3 PUSH2 0x206F JUMP JUMPDEST SWAP8 POP PUSH2 0x2237 DUP4 PUSH2 0x2D46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2218 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x225B DUP2 PUSH2 0x2EDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x226A DUP2 PUSH2 0x2EDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2279 DUP2 PUSH2 0x2EE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x228A DUP3 PUSH2 0x2D09 JUMP JUMPDEST PUSH2 0x2294 DUP2 DUP6 PUSH2 0x2D97 JUMP JUMPDEST SWAP4 POP PUSH2 0x22A4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F91 JUMP JUMPDEST PUSH2 0x22AD DUP2 PUSH2 0x30C9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C3 DUP3 PUSH2 0x2D09 JUMP JUMPDEST PUSH2 0x22CD DUP2 DUP6 PUSH2 0x2DA8 JUMP JUMPDEST SWAP4 POP PUSH2 0x22DD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F91 JUMP JUMPDEST PUSH2 0x22E6 DUP2 PUSH2 0x30C9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FC DUP3 PUSH2 0x2D09 JUMP JUMPDEST PUSH2 0x2306 DUP2 DUP6 PUSH2 0x2DB9 JUMP JUMPDEST SWAP4 POP PUSH2 0x2316 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F91 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x232B DUP2 PUSH2 0x2F4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x233A DUP2 PUSH2 0x2F70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2349 DUP2 PUSH2 0x2F03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235A DUP3 PUSH2 0x2D14 JUMP JUMPDEST PUSH2 0x2364 DUP2 DUP6 PUSH2 0x2DC4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2374 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F91 JUMP JUMPDEST PUSH2 0x237D DUP2 PUSH2 0x30C9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2395 PUSH1 0x31 DUP4 PUSH2 0x2DC4 JUMP JUMPDEST SWAP2 POP PUSH32 0x5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x616E7366657246726F6D206661696C6564000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23FB PUSH1 0x34 DUP4 PUSH2 0x2DC4 JUMP JUMPDEST SWAP2 POP PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665724554483A PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x20455448207472616E73666572206661696C6564000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2461 PUSH1 0x21 DUP4 PUSH2 0x2DC4 JUMP JUMPDEST SWAP2 POP PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24C7 PUSH1 0x1B DUP4 PUSH2 0x2DC4 JUMP JUMPDEST SWAP2 POP PUSH32 0x426172746572737761705632526F757465723A20455850495245440000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2507 PUSH1 0x2D DUP4 PUSH2 0x2DC4 JUMP JUMPDEST SWAP2 POP PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665723A207472 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x616E73666572206661696C656400000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256D PUSH1 0x15 DUP4 PUSH2 0x2DC4 JUMP JUMPDEST SWAP2 POP PUSH32 0x426172746572737761703A20464F5242494444454E0000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25AD PUSH1 0xE DUP4 PUSH2 0x2DC4 JUMP JUMPDEST SWAP2 POP PUSH32 0x50726963652069732077726F6E67000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x25F8 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2270 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x260B PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x26AB JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x261E PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x26AB JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x2631 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x26AB JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x2649 DUP3 DUP3 PUSH2 0x227F JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x266C PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x20A5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x267F PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2252 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2692 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2087 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x26A5 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2252 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x26B4 DUP2 PUSH2 0x2F2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x26C3 DUP2 PUSH2 0x2F2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D5 DUP3 DUP5 PUSH2 0x22F1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2710 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2096 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x272B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x20B4 JUMP JUMPDEST PUSH2 0x2738 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20B4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x274A DUP2 DUP5 PUSH2 0x21F4 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2769 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x20B4 JUMP JUMPDEST PUSH2 0x2776 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20B4 JUMP JUMPDEST PUSH2 0x2783 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x26BA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x27A0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x20B4 JUMP JUMPDEST PUSH2 0x27AD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26BA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2261 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x27E5 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2331 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x27F7 DUP2 DUP9 PUSH2 0x217F JUMP JUMPDEST SWAP1 POP PUSH2 0x2806 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2656 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2818 DUP2 DUP7 PUSH2 0x20C3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x282C DUP2 DUP6 PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP PUSH2 0x283C PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x26BA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2861 DUP2 DUP5 PUSH2 0x234F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2882 DUP2 PUSH2 0x2388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28A2 DUP2 PUSH2 0x23EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28C2 DUP2 PUSH2 0x2454 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28E2 DUP2 PUSH2 0x24BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2902 DUP2 PUSH2 0x24FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2922 DUP2 PUSH2 0x2560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2942 DUP2 PUSH2 0x25A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x295E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2979 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x26BA JUMP JUMPDEST PUSH2 0x2986 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x26BA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2998 DUP2 DUP9 PUSH2 0x22B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x29A7 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x20B4 JUMP JUMPDEST PUSH2 0x29B4 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x26BA JUMP JUMPDEST PUSH2 0x29C1 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x20B4 JUMP JUMPDEST PUSH2 0x29CE PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x20B4 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x29F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x2A29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x2A4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x2A80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x2AA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2ABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x2AD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x2AF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2B16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x2B2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x2B4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2B6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x2B85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x2BA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x2BDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2C0B JUMPI PUSH2 0x2C0A PUSH2 0x309A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C30 JUMPI PUSH2 0x2C2F PUSH2 0x309A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C5C JUMPI PUSH2 0x2C5B PUSH2 0x309A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C88 JUMPI PUSH2 0x2C87 PUSH2 0x309A JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE0 DUP3 PUSH2 0x2F2D JUMP JUMPDEST SWAP2 POP PUSH2 0x2DEB DUP4 PUSH2 0x2F2D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2E20 JUMPI PUSH2 0x2E1F PUSH2 0x300D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E36 DUP3 PUSH2 0x2F2D JUMP JUMPDEST SWAP2 POP PUSH2 0x2E41 DUP4 PUSH2 0x2F2D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2E51 JUMPI PUSH2 0x2E50 PUSH2 0x303C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E67 DUP3 PUSH2 0x2F2D JUMP JUMPDEST SWAP2 POP PUSH2 0x2E72 DUP4 PUSH2 0x2F2D JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2EAB JUMPI PUSH2 0x2EAA PUSH2 0x300D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC1 DUP3 PUSH2 0x2F0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ED3 DUP3 PUSH2 0x2F0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2EFE DUP3 PUSH2 0x30DA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F44 CALLDATASIZE DUP5 DUP5 PUSH2 0x1B1B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F57 DUP3 PUSH2 0x2F5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F69 DUP3 PUSH2 0x2F0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7B DUP3 PUSH2 0x2EF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2FAF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F94 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2FBE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FCF DUP3 PUSH2 0x2F2D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x3002 JUMPI PUSH2 0x3001 PUSH2 0x300D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x30EB JUMPI PUSH2 0x30EA PUSH2 0x306B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x30F7 DUP2 PUSH2 0x2EB6 JUMP JUMPDEST DUP2 EQ PUSH2 0x3102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x310E DUP2 PUSH2 0x2EC8 JUMP JUMPDEST DUP2 EQ PUSH2 0x3119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3125 DUP2 PUSH2 0x2EDA JUMP JUMPDEST DUP2 EQ PUSH2 0x3130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x313C DUP2 PUSH2 0x2EE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x3147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x3157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3163 DUP2 PUSH2 0x2F2D JUMP JUMPDEST DUP2 EQ PUSH2 0x316E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0x49 0xB5 DUP12 DUP10 ISZERO SWAP9 CALLVALUE 0xCF 0xED 0xC8 0xC8 BYTE 0xFB 0xBB EQ 0xDB SGT 0xDA SWAP14 0xE5 SMOD 0xE6 0xAA PUSH18 0x5C9D7E64D6438E64736F6C63430008000033 ",
							"sourceMap": "401:6000:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;469:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1460:1427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;561:49;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5840:164;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6260:136;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;506:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;538:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5620:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5037:375;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5419:189;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6016:237;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4759:255;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;469:30;;;;;;;;;;;;:::o;1460:1427::-;1545:20;1568:34;1583:6;:18;;;;;;;;:::i;:::-;1568:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:34::i;:::-;1545:57;;1616:14;1633:32;1660:4;1633:22;1650:4;;1633:12;:16;;:22;;;;:::i;:::-;:26;;:32;;;;:::i;:::-;1616:49;;1712:1;1683:31;;:6;:17;;;;;;;;;;:::i;:::-;:31;;;1680:408;;;1767:6;1754:12;:19;;;;:::i;:::-;1741:9;:32;1733:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1809:44;1840:5;;;;;;;;;;1846:6;1809:30;:44::i;:::-;1680:408;;;1891:89;1923:6;:17;;;;;;;;;;:::i;:::-;1941:10;1960:4;1966:12;1891:31;:89::i;:::-;1998:74;2030:6;:17;;;;;;;;;;:::i;:::-;2048:10;2059:5;;;;;;;;;;2065:6;1998:31;:74::i;:::-;1680:408;2106:6;2102:775;2122:6;:18;;;;;;;;:::i;:::-;:25;;2118:1;:29;2102:775;;;2171:14;2188;:37;2203:6;:18;;;;;;;;:::i;:::-;2222:1;2203:21;;;;;;;;;;;;;;;;;;;;;2188:37;;;;;;;;;;;;;;;;;;;;;2171:54;;2252:1;2247;:6;:38;;;;;2284:1;2257:6;:16;;;;;;;;:::i;:::-;:23;;:28;2247:38;2243:616;;;2312:80;2320:6;:17;;;;;;;;;;:::i;:::-;2338:6;2345;:9;;;;;;;;;;:::i;:::-;2355:6;:16;;;;;;;;:::i;:::-;2372:1;2355:19;;;;;;;;;;;;;;;;;;;;;2375:6;:16;;;;;;;;:::i;:::-;2312:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:80::i;:::-;2243:616;;;2424:1;2419;:6;:34;;;;;2452:1;2429:6;:13;;;;;;;;:::i;:::-;:20;;:24;2419:34;2416:443;;;2498:140;2511:6;:12;;;;;;;;;;:::i;:::-;2524:6;:17;;;;;;;;;;:::i;:::-;2542:6;2549;:21;;;;;;;;:::i;:::-;2498:140;;;;;:::i;:::-;2571:6;:22;;2498:140;;;;;;;;;;:::i;:::-;2594:6;:13;;;;;;;;:::i;:::-;2498:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2608:6;:13;;;;;;;;:::i;:::-;2498:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2622:6;:15;;;2498:12;:140::i;:::-;2416:443;;;2691:145;2703:6;2710;:18;;;;;;;;:::i;:::-;2729:1;2710:21;;;;;;;;;;;;;;;;;;;;;2732:6;:22;;;;;;;;:::i;:::-;2755:1;2732:25;;;;;;;;;;;;;;;;;;;;;2758:6;:14;;;;;;;;:::i;:::-;2773:1;2758:17;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2691:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2776:6;:9;;;;;;;;;;:::i;:::-;2786:6;:15;;;2802:6;:17;;;;;;;;;;:::i;:::-;2820:6;:15;;;;;;;;;;:::i;:::-;2691:11;:145::i;:::-;2416:443;2243:616;2102:775;2149:3;;;;;:::i;:::-;;;;2102:775;;;;1460:1427;;;:::o;561:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;5840:164::-;5894:4;1309:10;;;;;;;;;;;1295:24;;:10;:24;;;1287:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;5927:1:::1;5918:5;:10;;5910:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;5971:5;5964:4;:12;;;;5993:4;5986:11;;5840:164:::0;;;:::o;6260:136::-;6317:12;6370:10;6348:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6340:48;;6260:136;;;:::o;506:25::-;;;;;;;;;;;;;:::o;538:16::-;;;;:::o;5620:208::-;5690:4;1309:10;;;;;;;;;;;1295:24;;:10;:24;;;1287:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;5738:1:::1;5715:25;;:11;:25;;;;5707:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;5789:11;5776:10;;:24;;;;;;;;;;;;;;;;;;5817:4;5810:11;;5620:208:::0;;;:::o;5037:375::-;5116:14;5133:28;5156:4;5133:18;5146:4;;5133:8;:12;;:18;;;;:::i;:::-;:22;;:28;;;;:::i;:::-;5116:45;;5207:6;5196:8;:17;;;;:::i;:::-;5183:9;:30;5175:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;5245:44;5276:5;;;;;;;;;;5282:6;5245:30;:44::i;:::-;641:42;5303:21;;;5331:8;5303:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5358:47;641:42;5392:3;5396:8;5358:27;:47::i;:::-;5037:375;;;:::o;5419:189::-;5486:4;1309:10;;;;;;;;;;;1295:24;;:10;:24;;;1287:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;5528:1:::1;5510:20;;:6;:20;;;;5502:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;5574:6;5566:5;::::0;:14:::1;;;;;;;;;;;;;;;;;;5597:4;5590:11;;5419:189:::0;;;:::o;6016:237::-;6105:4;1309:10;;;;;;;;;;;1295:24;;:10;:24;;;1287:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;6152:1:::1;6128:26;;:12;:26;;;;6120:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;6213:12;6189:14;:21;6204:5;6189:21;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6242:4;6235:11;;6016:237:::0;;;;:::o;4759:255::-;4834:7;4852:17;4883:6;4879:99;4899:11;:18;4895:1;:22;4879:99;;;4953:11;4965:1;4953:14;;;;;;;;;;;;;;;;;;;;;;4937:30;;;;;:::i;:::-;;;4919:3;;;;;:::i;:::-;;;;4879:99;;;;4994:12;4987:19;;;4759:255;;;:::o;1618:459:13:-;1676:7;1922:1;1917;:6;1913:45;;;1946:1;1939:8;;;;1913:45;1968:9;1984:1;1980;:5;;;;:::i;:::-;1968:17;;2012:1;2007;2003;:5;;;;:::i;:::-;:10;1995:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2069:1;2062:8;;;1618:459;;;;;:::o;2539:130::-;2597:7;2623:39;2627:1;2630;2623:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;2616:46;;2539:130;;;;:::o;1529:214:14:-;1601:12;1619:2;:7;;1634:5;1651:1;1641:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1619:35;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1600:54;;;1672:7;1664:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1529:214;;;:::o;1033:486::-;1251:12;1265:17;1286:5;:10;;1320;1332:4;1338:2;1342:5;1297:51;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1286:63;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1250:99;;;;1380:7;:57;;;;;1407:1;1392:4;:11;:16;:44;;;;1423:4;1412:24;;;;;;;;;;;;:::i;:::-;1392:44;1380:57;1359:153;;;;;;;;;;;;:::i;:::-;;;;;;;;;1033:486;;;;;;:::o;3639:312:0:-;3773:11;3766:27;;;3794:7;3802:3;3766:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3816:52;3844:11;3856:7;3864:3;3816:27;:52::i;:::-;3884:7;3878:26;;;3905:3;3909:11;3921:13;3878:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3639:312;;;;;:::o;2923:693::-;3191:1;3168:25;;:11;:25;;;3165:445;;;3208:56;3239:7;3247:6;3254:1;3247:9;;;;;;;;;;;;;;;;;;;;;;:16;;;3208:30;:56::i;:::-;3284:7;3278:29;;;3308:5;3314:6;3321;3328:7;3336:6;3343:9;3278:75;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3165:445;;;3389:7;3382:23;;;3406:7;3414:6;3421:1;3414:9;;;;;;;;;;;;;;;;;;;;;;:16;;;3382:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3445:65;3473:11;3485:7;3493:6;3500:1;3493:9;;;;;;;;;;;;;;;;;;;;;;:16;;;3445:27;:65::i;:::-;3530:7;3524:29;;;3554:5;3560:6;3567;3574:7;3582:6;3589:9;3524:75;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3165:445;2923:693;;;;;;;;:::o;3974:755::-;4197:1;4174:25;;:11;:25;;;4171:552;;;4222:52;4253:7;4261:12;4222:30;:52::i;:::-;4302:7;4296:25;;;4322:12;4335:16;4352:8;4361:3;4365:9;4375:11;4387:9;4296:101;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4171:552;;;4455:7;4448:23;;;4472:7;4480:12;4448:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4515:61;4543:11;4555:7;4563:12;4515:27;:61::i;:::-;4604:7;4598:25;;;4624:12;4637:16;4654:8;4663:3;4667:9;4677:11;4689:9;4598:101;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4171:552;3974:755;;;;;;;;:::o;589:438:14:-;769:12;783:17;804:5;:10;;838;850:2;854:5;815:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;804:57;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;768:93;;;;892:7;:57;;;;;919:1;904:4;:11;:16;:44;;;;935:4;924:24;;;;;;;;;;;;:::i;:::-;904:44;892:57;871:149;;;;;;;;;;;;:::i;:::-;;;;;;;;;589:438;;;;;:::o;3151:272:13:-;3237:7;3268:1;3264;:5;3271:12;3256:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3294:9;3310:1;3306;:5;;;;:::i;:::-;3294:17;;3415:1;3408:8;;;3151:272;;;;;:::o;44:678:15:-;;196:111;211:95;299:6;211:95;:::i;:::-;196:111;:::i;:::-;187:120;;327:5;355:6;348:5;341:21;381:4;374:5;370:16;363:23;;406:6;437:1;422:294;447:6;444:1;441:13;422:294;;;539:3;526:17;518:6;514:30;569:68;633:3;621:10;569:68;:::i;:::-;564:3;557:81;667:4;662:3;658:14;651:21;;701:4;696:3;692:14;685:21;;482:234;469:1;466;462:9;457:14;;422:294;;;426:14;177:545;;;;;;;:::o;745:622::-;;866:80;881:64;938:6;881:64;:::i;:::-;866:80;:::i;:::-;857:89;;966:5;994:6;987:5;980:21;1020:4;1013:5;1009:16;1002:23;;1045:6;1095:3;1087:4;1079:6;1075:17;1070:3;1066:27;1063:36;1060:2;;;1112:1;1109;1102:12;1060:2;1140:1;1125:236;1150:6;1147:1;1144:13;1125:236;;;1217:3;1245:37;1278:3;1266:10;1245:37;:::i;:::-;1240:3;1233:50;1312:4;1307:3;1303:14;1296:21;;1346:4;1341:3;1337:14;1330:21;;1185:176;1172:1;1169;1165:9;1160:14;;1125:236;;;1129:14;847:520;;;;;;;:::o;1373:342::-;;1475:64;1490:48;1531:6;1490:48;:::i;:::-;1475:64;:::i;:::-;1466:73;;1562:6;1555:5;1548:21;1600:4;1593:5;1589:16;1638:3;1629:6;1624:3;1620:16;1617:25;1614:2;;;1655:1;1652;1645:12;1614:2;1668:41;1702:6;1697:3;1692;1668:41;:::i;:::-;1456:259;;;;;;:::o;1721:139::-;;1805:6;1792:20;1783:29;;1821:33;1848:5;1821:33;:::i;:::-;1773:87;;;;:::o;1866:143::-;;1954:6;1948:13;1939:22;;1970:33;1997:5;1970:33;:::i;:::-;1929:80;;;;:::o;2015:155::-;;2107:6;2094:20;2085:29;;2123:41;2158:5;2123:41;:::i;:::-;2075:95;;;;:::o;2193:303::-;;2313:3;2306:4;2298:6;2294:17;2290:27;2280:2;;2331:1;2328;2321:12;2280:2;2371:6;2358:20;2396:94;2486:3;2478:6;2471:4;2463:6;2459:17;2396:94;:::i;:::-;2387:103;;2270:226;;;;;:::o;2502:133::-;;2583:6;2570:20;2561:29;;2599:30;2623:5;2599:30;:::i;:::-;2551:84;;;;:::o;2641:137::-;;2726:6;2720:13;2711:22;;2742:30;2766:5;2742:30;:::i;:::-;2701:77;;;;:::o;2784:139::-;;2868:6;2855:20;2846:29;;2884:33;2911:5;2884:33;:::i;:::-;2836:87;;;;:::o;2942:271::-;;3046:3;3039:4;3031:6;3027:17;3023:27;3013:2;;3064:1;3061;3054:12;3013:2;3104:6;3091:20;3129:78;3203:3;3195:6;3188:4;3180:6;3176:17;3129:78;:::i;:::-;3120:87;;3003:210;;;;;:::o;3219:165::-;;3316:6;3303:20;3294:29;;3332:46;3372:5;3332:46;:::i;:::-;3284:100;;;;:::o;3436:168::-;;3553:3;3544:6;3539:3;3535:16;3531:26;3528:2;;;3570:1;3567;3560:12;3528:2;3592:6;3583:15;;3518:86;;;;:::o;3645:1123::-;;3769:4;3757:9;3752:3;3748:19;3744:30;3741:2;;;3787:1;3784;3777:12;3741:2;3809:20;3824:4;3809:20;:::i;:::-;3800:29;;3890:1;3930:49;3975:3;3966:6;3955:9;3951:22;3930:49;:::i;:::-;3923:4;3916:5;3912:16;3905:75;3839:152;4058:2;4099:49;4144:3;4135:6;4124:9;4120:22;4099:49;:::i;:::-;4092:4;4085:5;4081:16;4074:75;4001:159;4228:2;4269:49;4314:3;4305:6;4294:9;4290:22;4269:49;:::i;:::-;4262:4;4255:5;4251:16;4244:75;4170:160;4391:2;4432:49;4477:3;4468:6;4457:9;4453:22;4432:49;:::i;:::-;4425:4;4418:5;4414:16;4407:75;4340:153;4584:3;4573:9;4569:19;4556:33;4616:18;4608:6;4605:30;4602:2;;;4648:1;4645;4638:12;4602:2;4691:58;4745:3;4736:6;4725:9;4721:22;4691:58;:::i;:::-;4684:4;4677:5;4673:16;4666:84;4503:258;3731:1037;;;;:::o;4810:872::-;;4935:4;4923:9;4918:3;4914:19;4910:30;4907:2;;;4953:1;4950;4943:12;4907:2;4975:20;4990:4;4975:20;:::i;:::-;4966:29;;5056:1;5096:49;5141:3;5132:6;5121:9;5117:22;5096:49;:::i;:::-;5089:4;5082:5;5078:16;5071:75;5005:152;5231:2;5272:46;5314:3;5305:6;5294:9;5290:22;5272:46;:::i;:::-;5265:4;5258:5;5254:16;5247:72;5167:163;5394:2;5435:57;5488:3;5479:6;5468:9;5464:22;5435:57;:::i;:::-;5428:4;5421:5;5417:16;5410:83;5340:164;5576:2;5617:46;5659:3;5650:6;5639:9;5635:22;5617:46;:::i;:::-;5610:4;5603:5;5599:16;5592:72;5514:161;4897:785;;;;:::o;5688:139::-;;5772:6;5759:20;5750:29;;5788:33;5815:5;5788:33;:::i;:::-;5740:87;;;;:::o;5833:262::-;;5941:2;5929:9;5920:7;5916:23;5912:32;5909:2;;;5957:1;5954;5947:12;5909:2;6000:1;6025:53;6070:7;6061:6;6050:9;6046:22;6025:53;:::i;:::-;6015:63;;5971:117;5899:196;;;;:::o;6101:284::-;;6220:2;6208:9;6199:7;6195:23;6191:32;6188:2;;;6236:1;6233;6226:12;6188:2;6279:1;6304:64;6360:7;6351:6;6340:9;6336:22;6304:64;:::i;:::-;6294:74;;6250:128;6178:207;;;;:::o;6391:278::-;;6507:2;6495:9;6486:7;6482:23;6478:32;6475:2;;;6523:1;6520;6513:12;6475:2;6566:1;6591:61;6644:7;6635:6;6624:9;6620:22;6591:61;:::i;:::-;6581:71;;6537:125;6465:204;;;;:::o;6675:405::-;;6808:2;6796:9;6787:7;6783:23;6779:32;6776:2;;;6824:1;6821;6814:12;6776:2;6895:1;6884:9;6880:17;6867:31;6925:18;6917:6;6914:30;6911:2;;;6957:1;6954;6947:12;6911:2;6985:78;7055:7;7046:6;7035:9;7031:22;6985:78;:::i;:::-;6975:88;;6838:235;6766:314;;;;:::o;7086:278::-;;7202:2;7190:9;7181:7;7177:23;7173:32;7170:2;;;7218:1;7215;7208:12;7170:2;7261:1;7286:61;7339:7;7330:6;7319:9;7315:22;7286:61;:::i;:::-;7276:71;;7232:125;7160:204;;;;:::o;7370:288::-;;7491:2;7479:9;7470:7;7466:23;7462:32;7459:2;;;7507:1;7504;7497:12;7459:2;7550:1;7575:66;7633:7;7624:6;7613:9;7609:22;7575:66;:::i;:::-;7565:76;;7521:130;7449:209;;;;:::o;7664:415::-;;7802:2;7790:9;7781:7;7777:23;7773:32;7770:2;;;7818:1;7815;7808:12;7770:2;7889:1;7878:9;7874:17;7861:31;7919:18;7911:6;7908:30;7905:2;;;7951:1;7948;7941:12;7905:2;7979:83;8054:7;8045:6;8034:9;8030:22;7979:83;:::i;:::-;7969:93;;7832:240;7760:319;;;;:::o;8085:327::-;;8225:3;8213:9;8204:7;8200:23;8196:33;8193:2;;;8242:1;8239;8232:12;8193:2;8285:1;8310:85;8387:7;8378:6;8367:9;8363:22;8310:85;:::i;:::-;8300:95;;8256:149;8183:229;;;;:::o;8418:262::-;;8526:2;8514:9;8505:7;8501:23;8497:32;8494:2;;;8542:1;8539;8532:12;8494:2;8585:1;8610:53;8655:7;8646:6;8635:9;8631:22;8610:53;:::i;:::-;8600:63;;8556:117;8484:196;;;;:::o;8686:407::-;;;8811:2;8799:9;8790:7;8786:23;8782:32;8779:2;;;8827:1;8824;8817:12;8779:2;8870:1;8895:53;8940:7;8931:6;8920:9;8916:22;8895:53;:::i;:::-;8885:63;;8841:117;8997:2;9023:53;9068:7;9059:6;9048:9;9044:22;9023:53;:::i;:::-;9013:63;;8968:118;8769:324;;;;;:::o;9099:207::-;;9203:60;9259:3;9251:6;9203:60;:::i;:::-;9295:4;9290:3;9286:14;9272:28;;9193:113;;;;:::o;9312:175::-;;9400:44;9440:3;9432:6;9400:44;:::i;:::-;9476:4;9471:3;9467:14;9453:28;;9390:97;;;;:::o;9493:280::-;;9659:108;9763:3;9755:6;9659:108;:::i;:::-;9645:122;;9635:138;;;;:::o;9779:179::-;;9869:46;9911:3;9903:6;9869:46;:::i;:::-;9947:4;9942:3;9938:14;9924:28;;9859:99;;;;:::o;9964:132::-;10057:32;10083:5;10057:32;:::i;:::-;10052:3;10045:45;10035:61;;:::o;10102:142::-;10205:32;10231:5;10205:32;:::i;:::-;10200:3;10193:45;10183:61;;:::o;10250:108::-;10327:24;10345:5;10327:24;:::i;:::-;10322:3;10315:37;10305:53;;:::o;10364:118::-;10451:24;10469:5;10451:24;:::i;:::-;10446:3;10439:37;10429:53;;:::o;10526:802::-;;10688:68;10750:5;10688:68;:::i;:::-;10772:86;10851:6;10846:3;10772:86;:::i;:::-;10765:93;;10882:70;10946:5;10882:70;:::i;:::-;10975:7;11006:1;10991:312;11016:6;11013:1;11010:13;10991:312;;;11092:6;11086:13;11119:77;11192:3;11177:13;11119:77;:::i;:::-;11112:84;;11219:74;11286:6;11219:74;:::i;:::-;11209:84;;11051:252;11038:1;11035;11031:9;11026:14;;10991:312;;;10995:14;11319:3;11312:10;;10664:664;;;;;;;:::o;11362:724::-;;11508:53;11555:5;11508:53;:::i;:::-;11577:85;11655:6;11650:3;11577:85;:::i;:::-;11570:92;;11686:55;11735:5;11686:55;:::i;:::-;11764:7;11795:1;11780:281;11805:6;11802:1;11799:13;11780:281;;;11881:6;11875:13;11908:61;11965:3;11950:13;11908:61;:::i;:::-;11901:68;;11992:59;12044:6;11992:59;:::i;:::-;11982:69;;11840:221;11827:1;11824;11820:9;11815:14;;11780:281;;;11784:14;12077:3;12070:10;;11484:602;;;;;;;:::o;12162:1159::-;;12372:85;12451:5;12372:85;:::i;:::-;12473:117;12583:6;12578:3;12473:117;:::i;:::-;12466:124;;12616:3;12661:4;12653:6;12649:17;12644:3;12640:27;12691:87;12772:5;12691:87;:::i;:::-;12801:7;12832:1;12817:459;12842:6;12839:1;12836:13;12817:459;;;12913:9;12907:4;12903:20;12898:3;12891:33;12964:6;12958:13;12992:126;13113:4;13098:13;12992:126;:::i;:::-;12984:134;;13141:91;13225:6;13141:91;:::i;:::-;13131:101;;13261:4;13256:3;13252:14;13245:21;;12877:399;12864:1;12861;12857:9;12852:14;;12817:459;;;12821:14;13292:4;13285:11;;13312:3;13305:10;;12348:973;;;;;;;;;:::o;13357:732::-;;13505:54;13553:5;13505:54;:::i;:::-;13575:86;13654:6;13649:3;13575:86;:::i;:::-;13568:93;;13685:56;13735:5;13685:56;:::i;:::-;13764:7;13795:1;13780:284;13805:6;13802:1;13799:13;13780:284;;;13881:6;13875:13;13908:63;13967:3;13952:13;13908:63;:::i;:::-;13901:70;;13994:60;14047:6;13994:60;:::i;:::-;13984:70;;13840:224;13827:1;13824;13820:9;13815:14;;13780:284;;;13784:14;14080:3;14073:10;;13481:608;;;;;;;:::o;14095:99::-;14166:21;14181:5;14166:21;:::i;:::-;14161:3;14154:34;14144:50;;:::o;14200:109::-;14281:21;14296:5;14281:21;:::i;:::-;14276:3;14269:34;14259:50;;:::o;14315:108::-;14392:24;14410:5;14392:24;:::i;:::-;14387:3;14380:37;14370:53;;:::o;14429:340::-;;14533:38;14565:5;14533:38;:::i;:::-;14587:60;14640:6;14635:3;14587:60;:::i;:::-;14580:67;;14656:52;14701:6;14696:3;14689:4;14682:5;14678:16;14656:52;:::i;:::-;14733:29;14755:6;14733:29;:::i;:::-;14728:3;14724:39;14717:46;;14509:260;;;;;:::o;14775:360::-;;14889:38;14921:5;14889:38;:::i;:::-;14943:70;15006:6;15001:3;14943:70;:::i;:::-;14936:77;;15022:52;15067:6;15062:3;15055:4;15048:5;15044:16;15022:52;:::i;:::-;15099:29;15121:6;15099:29;:::i;:::-;15094:3;15090:39;15083:46;;14865:270;;;;;:::o;15141:373::-;;15273:38;15305:5;15273:38;:::i;:::-;15327:88;15408:6;15403:3;15327:88;:::i;:::-;15320:95;;15424:52;15469:6;15464:3;15457:4;15450:5;15446:16;15424:52;:::i;:::-;15501:6;15496:3;15492:16;15485:23;;15249:265;;;;;:::o;15520:149::-;15611:51;15656:5;15611:51;:::i;:::-;15606:3;15599:64;15589:80;;:::o;15675:153::-;15773:48;15815:5;15773:48;:::i;:::-;15768:3;15761:61;15751:77;;:::o;15834:105::-;15909:23;15926:5;15909:23;:::i;:::-;15904:3;15897:36;15887:52;;:::o;15945:364::-;;16061:39;16094:5;16061:39;:::i;:::-;16116:71;16180:6;16175:3;16116:71;:::i;:::-;16109:78;;16196:52;16241:6;16236:3;16229:4;16222:5;16218:16;16196:52;:::i;:::-;16273:29;16295:6;16273:29;:::i;:::-;16268:3;16264:39;16257:46;;16037:272;;;;;:::o;16315:381::-;;16478:67;16542:2;16537:3;16478:67;:::i;:::-;16471:74;;16575:34;16571:1;16566:3;16562:11;16555:55;16641:19;16636:2;16631:3;16627:12;16620:41;16687:2;16682:3;16678:12;16671:19;;16461:235;;;:::o;16702:384::-;;16865:67;16929:2;16924:3;16865:67;:::i;:::-;16858:74;;16962:34;16958:1;16953:3;16949:11;16942:55;17028:22;17023:2;17018:3;17014:12;17007:44;17077:2;17072:3;17068:12;17061:19;;16848:238;;;:::o;17092:365::-;;17255:67;17319:2;17314:3;17255:67;:::i;:::-;17248:74;;17352:34;17348:1;17343:3;17339:11;17332:55;17418:3;17413:2;17408:3;17404:12;17397:25;17448:2;17443:3;17439:12;17432:19;;17238:219;;;:::o;17463:325::-;;17626:67;17690:2;17685:3;17626:67;:::i;:::-;17619:74;;17723:29;17719:1;17714:3;17710:11;17703:50;17779:2;17774:3;17770:12;17763:19;;17609:179;;;:::o;17794:377::-;;17957:67;18021:2;18016:3;17957:67;:::i;:::-;17950:74;;18054:34;18050:1;18045:3;18041:11;18034:55;18120:15;18115:2;18110:3;18106:12;18099:37;18162:2;18157:3;18153:12;18146:19;;17940:231;;;:::o;18177:319::-;;18340:67;18404:2;18399:3;18340:67;:::i;:::-;18333:74;;18437:23;18433:1;18428:3;18424:11;18417:44;18487:2;18482:3;18478:12;18471:19;;18323:173;;;:::o;18502:312::-;;18665:67;18729:2;18724:3;18665:67;:::i;:::-;18658:74;;18762:16;18758:1;18753:3;18749:11;18742:37;18805:2;18800:3;18796:12;18789:19;;18648:166;;;:::o;18886:1153::-;;19043:4;19038:3;19034:14;19132:4;19125:5;19121:16;19115:23;19151:63;19208:4;19203:3;19199:14;19185:12;19151:63;:::i;:::-;19058:166;19314:4;19307:5;19303:16;19297:23;19333:63;19390:4;19385:3;19381:14;19367:12;19333:63;:::i;:::-;19234:172;19497:4;19490:5;19486:16;19480:23;19516:63;19573:4;19568:3;19564:14;19550:12;19516:63;:::i;:::-;19416:173;19673:4;19666:5;19662:16;19656:23;19692:63;19749:4;19744:3;19740:14;19726:12;19692:63;:::i;:::-;19599:166;19851:4;19844:5;19840:16;19834:23;19904:3;19898:4;19894:14;19887:4;19882:3;19878:14;19871:38;19930:71;19996:4;19982:12;19930:71;:::i;:::-;19922:79;;19775:237;20029:4;20022:11;;19012:1027;;;;;:::o;20113:908::-;20274:4;20269:3;20265:14;20363:4;20356:5;20352:16;20346:23;20382:63;20439:4;20434:3;20430:14;20416:12;20382:63;:::i;:::-;20289:166;20552:4;20545:5;20541:16;20535:23;20571:57;20622:4;20617:3;20613:14;20599:12;20571:57;:::i;:::-;20465:173;20725:4;20718:5;20714:16;20708:23;20744:79;20817:4;20812:3;20808:14;20794:12;20744:79;:::i;:::-;20648:185;20928:4;20921:5;20917:16;20911:23;20947:57;20998:4;20993:3;20989:14;20975:12;20947:57;:::i;:::-;20843:171;20243:778;;;:::o;21027:108::-;21104:24;21122:5;21104:24;:::i;:::-;21099:3;21092:37;21082:53;;:::o;21141:118::-;21228:24;21246:5;21228:24;:::i;:::-;21223:3;21216:37;21206:53;;:::o;21265:271::-;;21417:93;21506:3;21497:6;21417:93;:::i;:::-;21410:100;;21527:3;21520:10;;21399:137;;;;:::o;21542:222::-;;21673:2;21662:9;21658:18;21650:26;;21686:71;21754:1;21743:9;21739:17;21730:6;21686:71;:::i;:::-;21640:124;;;;:::o;21770:254::-;;21917:2;21906:9;21902:18;21894:26;;21930:87;22014:1;22003:9;21999:17;21990:6;21930:87;:::i;:::-;21884:140;;;;:::o;22030:593::-;;22267:2;22256:9;22252:18;22244:26;;22280:71;22348:1;22337:9;22333:17;22324:6;22280:71;:::i;:::-;22361:72;22429:2;22418:9;22414:18;22405:6;22361:72;:::i;:::-;22480:9;22474:4;22470:20;22465:2;22454:9;22450:18;22443:48;22508:108;22611:4;22602:6;22508:108;:::i;:::-;22500:116;;22234:389;;;;;;:::o;22629:442::-;;22816:2;22805:9;22801:18;22793:26;;22829:71;22897:1;22886:9;22882:17;22873:6;22829:71;:::i;:::-;22910:72;22978:2;22967:9;22963:18;22954:6;22910:72;:::i;:::-;22992;23060:2;23049:9;23045:18;23036:6;22992:72;:::i;:::-;22783:288;;;;;;:::o;23077:332::-;;23236:2;23225:9;23221:18;23213:26;;23249:71;23317:1;23306:9;23302:17;23293:6;23249:71;:::i;:::-;23330:72;23398:2;23387:9;23383:18;23374:6;23330:72;:::i;:::-;23203:206;;;;;:::o;23415:210::-;;23540:2;23529:9;23525:18;23517:26;;23553:65;23615:1;23604:9;23600:17;23591:6;23553:65;:::i;:::-;23507:118;;;;:::o;23631:1527::-;;24201:3;24190:9;24186:19;24178:27;;24215:82;24294:1;24283:9;24279:17;24270:6;24215:82;:::i;:::-;24344:9;24338:4;24334:20;24329:2;24318:9;24314:18;24307:48;24372:170;24537:4;24528:6;24372:170;:::i;:::-;24364:178;;24552:136;24684:2;24673:9;24669:18;24660:6;24552:136;:::i;:::-;24736:9;24730:4;24726:20;24720:3;24709:9;24705:19;24698:49;24764:122;24881:4;24872:6;24764:122;:::i;:::-;24756:130;;24934:9;24928:4;24924:20;24918:3;24907:9;24903:19;24896:49;24962:106;25063:4;25054:6;24962:106;:::i;:::-;24954:114;;25078:73;25146:3;25135:9;25131:19;25122:6;25078:73;:::i;:::-;24168:990;;;;;;;;;:::o;25164:313::-;;25315:2;25304:9;25300:18;25292:26;;25364:9;25358:4;25354:20;25350:1;25339:9;25335:17;25328:47;25392:78;25465:4;25456:6;25392:78;:::i;:::-;25384:86;;25282:195;;;;:::o;25483:419::-;;25687:2;25676:9;25672:18;25664:26;;25736:9;25730:4;25726:20;25722:1;25711:9;25707:17;25700:47;25764:131;25890:4;25764:131;:::i;:::-;25756:139;;25654:248;;;:::o;25908:419::-;;26112:2;26101:9;26097:18;26089:26;;26161:9;26155:4;26151:20;26147:1;26136:9;26132:17;26125:47;26189:131;26315:4;26189:131;:::i;:::-;26181:139;;26079:248;;;:::o;26333:419::-;;26537:2;26526:9;26522:18;26514:26;;26586:9;26580:4;26576:20;26572:1;26561:9;26557:17;26550:47;26614:131;26740:4;26614:131;:::i;:::-;26606:139;;26504:248;;;:::o;26758:419::-;;26962:2;26951:9;26947:18;26939:26;;27011:9;27005:4;27001:20;26997:1;26986:9;26982:17;26975:47;27039:131;27165:4;27039:131;:::i;:::-;27031:139;;26929:248;;;:::o;27183:419::-;;27387:2;27376:9;27372:18;27364:26;;27436:9;27430:4;27426:20;27422:1;27411:9;27407:17;27400:47;27464:131;27590:4;27464:131;:::i;:::-;27456:139;;27354:248;;;:::o;27608:419::-;;27812:2;27801:9;27797:18;27789:26;;27861:9;27855:4;27851:20;27847:1;27836:9;27832:17;27825:47;27889:131;28015:4;27889:131;:::i;:::-;27881:139;;27779:248;;;:::o;28033:419::-;;28237:2;28226:9;28222:18;28214:26;;28286:9;28280:4;28276:20;28272:1;28261:9;28257:17;28250:47;28314:131;28440:4;28314:131;:::i;:::-;28306:139;;28204:248;;;:::o;28458:222::-;;28589:2;28578:9;28574:18;28566:26;;28602:71;28670:1;28659:9;28655:17;28646:6;28602:71;:::i;:::-;28556:124;;;;:::o;28686:973::-;;29003:3;28992:9;28988:19;28980:27;;29017:71;29085:1;29074:9;29070:17;29061:6;29017:71;:::i;:::-;29098:72;29166:2;29155:9;29151:18;29142:6;29098:72;:::i;:::-;29217:9;29211:4;29207:20;29202:2;29191:9;29187:18;29180:48;29245:76;29316:4;29307:6;29245:76;:::i;:::-;29237:84;;29331:72;29399:2;29388:9;29384:18;29375:6;29331:72;:::i;:::-;29413:73;29481:3;29470:9;29466:19;29457:6;29413:73;:::i;:::-;29496;29564:3;29553:9;29549:19;29540:6;29496:73;:::i;:::-;29579;29647:3;29636:9;29632:19;29623:6;29579:73;:::i;:::-;28970:689;;;;;;;;;;:::o;29665:550::-;;;29831:11;29818:25;29931:1;29925:4;29921:12;29910:8;29894:14;29890:29;29886:48;29866:18;29862:73;29852:2;;29949:1;29946;29939:12;29852:2;29984:18;29974:8;29970:33;29962:41;;30036:4;30023:18;30013:28;;30064:18;30056:6;30053:30;30050:2;;;30096:1;30093;30086:12;30050:2;30127;30121:4;30117:13;30109:21;;30184:4;30176:6;30172:17;30156:14;30152:38;30146:4;30142:49;30139:2;;;30204:1;30201;30194:12;30139:2;29782:433;;;;;;:::o;30221:553::-;;;30390:11;30377:25;30490:1;30484:4;30480:12;30469:8;30453:14;30449:29;30445:48;30425:18;30421:73;30411:2;;30508:1;30505;30498:12;30411:2;30543:18;30533:8;30529:33;30521:41;;30595:4;30582:18;30572:28;;30623:18;30615:6;30612:30;30609:2;;;30655:1;30652;30645:12;30609:2;30686;30680:4;30676:13;30668:21;;30743:4;30735:6;30731:17;30715:14;30711:38;30705:4;30701:49;30698:2;;;30763:1;30760;30753:12;30698:2;30341:433;;;;;;:::o;30780:538::-;;;30934:11;30921:25;31034:1;31028:4;31024:12;31013:8;30997:14;30993:29;30989:48;30969:18;30965:73;30955:2;;31052:1;31049;31042:12;30955:2;31087:18;31077:8;31073:33;31065:41;;31139:4;31126:18;31116:28;;31167:18;31159:6;31156:30;31153:2;;;31199:1;31196;31189:12;31153:2;31230;31224:4;31220:13;31212:21;;31287:4;31279:6;31275:17;31259:14;31255:38;31249:4;31245:49;31242:2;;;31307:1;31304;31297:12;31242:2;30885:433;;;;;;:::o;31324:572::-;;;31512:11;31499:25;31612:1;31606:4;31602:12;31591:8;31575:14;31571:29;31567:48;31547:18;31543:73;31533:2;;31630:1;31627;31620:12;31533:2;31665:18;31655:8;31651:33;31643:41;;31717:4;31704:18;31694:28;;31745:18;31737:6;31734:30;31731:2;;;31777:1;31774;31767:12;31731:2;31808;31802:4;31798:13;31790:21;;31865:4;31857:6;31853:17;31837:14;31833:38;31827:4;31823:49;31820:2;;;31885:1;31882;31875:12;31820:2;31463:433;;;;;;:::o;31902:539::-;;;32057:11;32044:25;32157:1;32151:4;32147:12;32136:8;32120:14;32116:29;32112:48;32092:18;32088:73;32078:2;;32175:1;32172;32165:12;32078:2;32210:18;32200:8;32196:33;32188:41;;32262:4;32249:18;32239:28;;32290:18;32282:6;32279:30;32276:2;;;32322:1;32319;32312:12;32276:2;32353;32347:4;32343:13;32335:21;;32410:4;32402:6;32398:17;32382:14;32378:38;32372:4;32368:49;32365:2;;;32430:1;32427;32420:12;32365:2;32008:433;;;;;;:::o;32447:523::-;;;32586:11;32573:25;32686:1;32680:4;32676:12;32665:8;32649:14;32645:29;32641:48;32621:18;32617:73;32607:2;;32704:1;32701;32694:12;32607:2;32739:18;32729:8;32725:33;32717:41;;32791:4;32778:18;32768:28;;32819:18;32811:6;32808:30;32805:2;;;32851:1;32848;32841:12;32805:2;32882;32876:4;32872:13;32864:21;;32939:4;32931:6;32927:17;32911:14;32907:38;32901:4;32897:49;32894:2;;;32959:1;32956;32949:12;32894:2;32537:433;;;;;;:::o;32976:283::-;;33042:2;33036:9;33026:19;;33084:4;33076:6;33072:17;33191:6;33179:10;33176:22;33155:18;33143:10;33140:34;33137:62;33134:2;;;33202:18;;:::i;:::-;33134:2;33242:10;33238:2;33231:22;33016:243;;;;:::o;33265:342::-;;33463:18;33455:6;33452:30;33449:2;;;33485:18;;:::i;:::-;33449:2;33535:4;33527:6;33523:17;33515:25;;33595:4;33589;33585:15;33577:23;;33378:229;;;:::o;33613:311::-;;33780:18;33772:6;33769:30;33766:2;;;33802:18;;:::i;:::-;33766:2;33852:4;33844:6;33840:17;33832:25;;33912:4;33906;33902:15;33894:23;;33695:229;;;:::o;33930:331::-;;34081:18;34073:6;34070:30;34067:2;;;34103:18;;:::i;:::-;34067:2;34188:4;34184:9;34177:4;34169:6;34165:17;34161:33;34153:41;;34249:4;34243;34239:15;34231:23;;33996:265;;;:::o;34267:146::-;;34371:3;34363:11;;34401:4;34396:3;34392:14;34384:22;;34353:60;;;:::o;34419:131::-;;34508:3;34500:11;;34538:4;34533:3;34529:14;34521:22;;34490:60;;;:::o;34556:163::-;;34677:3;34669:11;;34707:4;34702:3;34698:14;34690:22;;34659:60;;;:::o;34725:132::-;;34815:3;34807:11;;34845:4;34840:3;34836:14;34828:22;;34797:60;;;:::o;34863:128::-;;34978:5;34972:12;34962:22;;34951:40;;;:::o;34997:113::-;;35097:5;35091:12;35081:22;;35070:40;;;:::o;35116:145::-;;35248:5;35242:12;35232:22;;35221:40;;;:::o;35267:114::-;;35368:5;35362:12;35352:22;;35341:40;;;:::o;35387:98::-;;35472:5;35466:12;35456:22;;35445:40;;;:::o;35491:99::-;;35577:5;35571:12;35561:22;;35550:40;;;:::o;35596:127::-;;35712:4;35707:3;35703:14;35695:22;;35685:38;;;:::o;35729:112::-;;35830:4;35825:3;35821:14;35813:22;;35803:38;;;:::o;35847:144::-;;35980:4;35975:3;35971:14;35963:22;;35953:38;;;:::o;35997:113::-;;36099:4;36094:3;36090:14;36082:22;;36072:38;;;:::o;36116:184::-;;36249:6;36244:3;36237:19;36289:4;36284:3;36280:14;36265:29;;36227:73;;;;:::o;36306:183::-;;36438:6;36433:3;36426:19;36478:4;36473:3;36469:14;36454:29;;36416:73;;;;:::o;36495:215::-;;36659:6;36654:3;36647:19;36699:4;36694:3;36690:14;36675:29;;36637:73;;;;:::o;36716:184::-;;36849:6;36844:3;36837:19;36889:4;36884:3;36880:14;36865:29;;36827:73;;;;:::o;36906:158::-;;37013:6;37008:3;37001:19;37053:4;37048:3;37044:14;37029:29;;36991:73;;;;:::o;37070:168::-;;37187:6;37182:3;37175:19;37227:4;37222:3;37218:14;37203:29;;37165:73;;;;:::o;37244:147::-;;37382:3;37367:18;;37357:34;;;;:::o;37397:169::-;;37515:6;37510:3;37503:19;37555:4;37550:3;37546:14;37531:29;;37493:73;;;;:::o;37572:305::-;;37631:20;37649:1;37631:20;:::i;:::-;37626:25;;37665:20;37683:1;37665:20;:::i;:::-;37660:25;;37819:1;37751:66;37747:74;37744:1;37741:81;37738:2;;;37825:18;;:::i;:::-;37738:2;37869:1;37866;37862:9;37855:16;;37616:261;;;;:::o;37883:185::-;;37940:20;37958:1;37940:20;:::i;:::-;37935:25;;37974:20;37992:1;37974:20;:::i;:::-;37969:25;;38013:1;38003:2;;38018:18;;:::i;:::-;38003:2;38060:1;38057;38053:9;38048:14;;37925:143;;;;:::o;38074:348::-;;38137:20;38155:1;38137:20;:::i;:::-;38132:25;;38171:20;38189:1;38171:20;:::i;:::-;38166:25;;38359:1;38291:66;38287:74;38284:1;38281:81;38276:1;38269:9;38262:17;38258:105;38255:2;;;38366:18;;:::i;:::-;38255:2;38414:1;38411;38407:9;38396:20;;38122:300;;;;:::o;38428:96::-;;38494:24;38512:5;38494:24;:::i;:::-;38483:35;;38473:51;;;:::o;38530:104::-;;38604:24;38622:5;38604:24;:::i;:::-;38593:35;;38583:51;;;:::o;38640:90::-;;38717:5;38710:13;38703:21;38692:32;;38682:48;;;:::o;38736:77::-;;38802:5;38791:16;;38781:32;;;:::o;38819:137::-;;38898:5;38887:16;;38904:46;38944:5;38904:46;:::i;:::-;38877:79;;;:::o;38962:76::-;;39027:5;39016:16;;39006:32;;;:::o;39044:126::-;;39121:42;39114:5;39110:54;39099:65;;39089:81;;;:::o;39176:77::-;;39242:5;39231:16;;39221:32;;;:::o;39259:409::-;;39537:124;39646:14;39638:6;39631:5;39537:124;:::i;:::-;39515:146;;39449:219;;;;:::o;39674:154::-;;39771:51;39816:5;39771:51;:::i;:::-;39758:64;;39748:80;;;:::o;39834:127::-;;39931:24;39949:5;39931:24;:::i;:::-;39918:37;;39908:53;;;:::o;39967:137::-;;40061:37;40092:5;40061:37;:::i;:::-;40048:50;;40038:66;;;:::o;40110:154::-;40194:6;40189:3;40184;40171:30;40256:1;40247:6;40242:3;40238:16;40231:27;40161:103;;;:::o;40270:307::-;40338:1;40348:113;40362:6;40359:1;40356:13;40348:113;;;40447:1;40442:3;40438:11;40432:18;40428:1;40423:3;40419:11;40412:39;40384:2;40381:1;40377:10;40372:15;;40348:113;;;40479:6;40476:1;40473:13;40470:2;;;40559:1;40550:6;40545:3;40541:16;40534:27;40470:2;40319:258;;;;:::o;40583:233::-;;40645:24;40663:5;40645:24;:::i;:::-;40636:33;;40691:66;40684:5;40681:77;40678:2;;;40761:18;;:::i;:::-;40678:2;40808:1;40801:5;40797:13;40790:20;;40626:190;;;:::o;40822:180::-;40870:77;40867:1;40860:88;40967:4;40964:1;40957:15;40991:4;40988:1;40981:15;41008:180;41056:77;41053:1;41046:88;41153:4;41150:1;41143:15;41177:4;41174:1;41167:15;41194:180;41242:77;41239:1;41232:88;41339:4;41336:1;41329:15;41363:4;41360:1;41353:15;41380:180;41428:77;41425:1;41418:88;41525:4;41522:1;41515:15;41549:4;41546:1;41539:15;41566:102;;41658:2;41654:7;41649:2;41642:5;41638:14;41634:28;41624:38;;41614:54;;;:::o;41674:118::-;41760:1;41753:5;41750:12;41740:2;;41766:18;;:::i;:::-;41740:2;41730:62;:::o;41798:122::-;41871:24;41889:5;41871:24;:::i;:::-;41864:5;41861:35;41851:2;;41910:1;41907;41900:12;41851:2;41841:79;:::o;41926:138::-;42007:32;42033:5;42007:32;:::i;:::-;42000:5;41997:43;41987:2;;42054:1;42051;42044:12;41987:2;41977:87;:::o;42070:116::-;42140:21;42155:5;42140:21;:::i;:::-;42133:5;42130:32;42120:2;;42176:1;42173;42166:12;42120:2;42110:76;:::o;42192:122::-;42265:24;42283:5;42265:24;:::i;:::-;42258:5;42255:35;42245:2;;42304:1;42301;42294:12;42245:2;42235:79;:::o;42320:112::-;42406:1;42399:5;42396:12;42386:2;;42422:1;42419;42412:12;42386:2;42376:56;:::o;42438:122::-;42511:24;42529:5;42511:24;:::i;:::-;42504:5;42501:35;42491:2;;42550:1;42547;42540:12;42491:2;42481:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2542200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ethToWeth(uint256,address)": "infinite",
								"feeTo()": "1212",
								"feeToAdmin()": "1325",
								"fees()": "1129",
								"getAmountInAll(uint256[])": "infinite",
								"getWeth(address)": "infinite",
								"multiSwap((uint256[],uint256[],bytes[],address,uint256,address,address,uint256[],uint256[],(bytes32,uint256,uint256,uint256,bytes)[],(address,bool,address,bool),int256[],address[],uint8))": "infinite",
								"routerAddreAll(uint256)": "1584",
								"setFeeTo(address)": "22498",
								"setFeeToSetter(address)": "22454",
								"setFees(uint256)": "21585",
								"setRouterAddreAll(uint256,address)": "22771"
							},
							"internal": {
								"AmmSeriSwap(address,uint256,uint256,bytes memory,address,uint256,address,address)": "infinite",
								"balancerSwap(enum IVault.SwapKind,address,address,struct IVault.BatchSwapStep memory[] memory,struct IVault.FundManagement memory,contract IAsset[] memory,int256[] memory,uint256)": "infinite",
								"crvSwap(address,address,address,uint256,uint256[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 401,
									"end": 6401,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 401,
									"end": 6401,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 401,
									"end": 6401,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1430,
									"end": 1441,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1427,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1417,
									"end": 1427,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1448,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 401,
									"end": 6401,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 401,
									"end": 6401,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 156,
									"end": 440,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 281,
									"end": 293,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 334,
									"end": 335,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 415,
									"end": 422,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 406,
									"end": 412,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 395,
									"end": 404,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 391,
									"end": 413,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "tag",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 349,
									"end": 423,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 349,
									"end": 423,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 305,
									"end": 433,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 233,
									"end": 440,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "tag",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 446,
									"end": 542,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 530,
									"end": 535,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "tag",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 501,
									"end": 536,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 501,
									"end": 536,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 491,
									"end": 542,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 491,
									"end": 542,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "tag",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 548,
									"end": 674,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 667,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 618,
									"end": 623,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 614,
									"end": 668,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 603,
									"end": 668,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 603,
									"end": 668,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 593,
									"end": 674,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 593,
									"end": 674,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 771,
									"end": 776,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 746,
									"end": 751,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 743,
									"end": 778,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 733,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 789,
									"end": 790,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 782,
									"end": 794,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 733,
									"end": 735,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 723,
									"end": 802,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 723,
									"end": 802,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 401,
									"end": 6401,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 401,
									"end": 6401,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 401,
									"end": 6401,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 401,
									"end": 6401,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 401,
									"end": 6401,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 401,
									"end": 6401,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 6401,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 401,
									"end": 6401,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 6401,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a549b58b89159834cfedc8c81afbbb14db13da9de507e6aa715c9d7e64d6438e64736f6c63430008000033",
									".code": [
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "9AF1D35A"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "9AF1D35A"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "A2E74AF6"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "EF3858AB"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "F46901ED"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "F654DF7A"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "FD07291F"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "17E7E58"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "239AAD0A"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "257B66B0"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "3D18678E"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "8AC051F2"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "8E7FA96A"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 6401,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 469,
											"end": 499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 469,
											"end": 499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 469,
											"end": 499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 469,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 469,
											"end": 499,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 469,
											"end": 499,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 469,
											"end": 499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 469,
											"end": 499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 469,
											"end": 499,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 469,
											"end": 499,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 469,
											"end": 499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 538,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 538,
											"end": 554,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 538,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 538,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 538,
											"end": 554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 538,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 538,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 538,
											"end": 554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 538,
											"end": 554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 538,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 538,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 469,
											"end": 499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 469,
											"end": 499,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 469,
											"end": 499,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 469,
											"end": 499,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 1565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1583,
											"end": 1589,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 1602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 1602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1616,
											"end": 1630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1660,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1633,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1650,
											"end": 1654,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1650,
											"end": 1654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1645,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1633,
											"end": 1649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1655,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1633,
											"end": 1655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1655,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1633,
											"end": 1655,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1633,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1633,
											"end": 1659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1633,
											"end": 1665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1633,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1633,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1616,
											"end": 1665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1616,
											"end": 1665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1689,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1700,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 1683,
											"end": 1700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1683,
											"end": 1700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1683,
											"end": 1700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1683,
											"end": 1700,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1683,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 2088,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1680,
											"end": 2088,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1754,
											"end": 1773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1754,
											"end": 1773,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1754,
											"end": 1773,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1754,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1733,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1852,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1809,
											"end": 1853,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1809,
											"end": 1853,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1809,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1680,
											"end": 2088,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 2088,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1680,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1891,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 1923,
											"end": 1940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1923,
											"end": 1940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1923,
											"end": 1940,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1923,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1923,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1951,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1964,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1978,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1891,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1891,
											"end": 1980,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1891,
											"end": 1980,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1891,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2030,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2047,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 2030,
											"end": 2047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2030,
											"end": 2047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2030,
											"end": 2047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2030,
											"end": 2047,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2030,
											"end": 2047,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2030,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2058,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1998,
											"end": 2072,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2072,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1998,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 2088,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1680,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2106,
											"end": 2112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2877,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2102,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2147,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2877,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2102,
											"end": 2877,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2209,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2222,
											"end": 2223,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2188,
											"end": 2225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2252,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2247,
											"end": 2248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2247,
											"end": 2253,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2247,
											"end": 2285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2247,
											"end": 2285,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2247,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2247,
											"end": 2285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2247,
											"end": 2285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2257,
											"end": 2263,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2273,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2257,
											"end": 2273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2257,
											"end": 2273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2257,
											"end": 2273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2257,
											"end": 2273,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2257,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2247,
											"end": 2285,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2247,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2243,
											"end": 2859,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2243,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2243,
											"end": 2859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2351,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2354,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2345,
											"end": 2354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2345,
											"end": 2354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2345,
											"end": 2354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2345,
											"end": 2354,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2345,
											"end": 2354,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2345,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2355,
											"end": 2371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2355,
											"end": 2371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2355,
											"end": 2371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2355,
											"end": 2371,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2355,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2374,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2381,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2391,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2375,
											"end": 2391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2375,
											"end": 2391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2375,
											"end": 2391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2375,
											"end": 2391,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2375,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2243,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2243,
											"end": 2859,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2243,
											"end": 2859,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2243,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2424,
											"end": 2425,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2419,
											"end": 2425,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2419,
											"end": 2453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2419,
											"end": 2453,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2419,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2419,
											"end": 2453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2419,
											"end": 2453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2429,
											"end": 2435,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2453,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2419,
											"end": 2453,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2419,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2859,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2416,
											"end": 2859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2511,
											"end": 2523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2511,
											"end": 2523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2511,
											"end": 2523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2511,
											"end": 2523,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2511,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2511,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 2524,
											"end": 2541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2524,
											"end": 2541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2524,
											"end": 2541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2524,
											"end": 2541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2524,
											"end": 2541,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2524,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2548,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2555,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2570,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2549,
											"end": 2570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2549,
											"end": 2570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2549,
											"end": 2570,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2549,
											"end": 2570,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2549,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2571,
											"end": 2577,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 2571,
											"end": 2593,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2571,
											"end": 2593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "PUSH",
											"source": 0,
											"value": "1E0"
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2608,
											"end": 2614,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 2608,
											"end": 2621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2608,
											"end": 2621,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 2608,
											"end": 2621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2608,
											"end": 2621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2608,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2608,
											"end": 2621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2608,
											"end": 2621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2608,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2608,
											"end": 2621,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2608,
											"end": 2621,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2608,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2628,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2637,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2622,
											"end": 2637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2637,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2498,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2416,
											"end": 2859,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2859,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2416,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2716,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2710,
											"end": 2728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2710,
											"end": 2728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2710,
											"end": 2728,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2710,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2730,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2738,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2732,
											"end": 2754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2732,
											"end": 2754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2732,
											"end": 2754,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2732,
											"end": 2754,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2732,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2756,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2757,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2758,
											"end": 2772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2758,
											"end": 2772,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2758,
											"end": 2772,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2758,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2774,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2782,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2785,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2776,
											"end": 2785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2785,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2776,
											"end": 2785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2776,
											"end": 2785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2776,
											"end": 2785,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2776,
											"end": 2785,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2776,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2801,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2786,
											"end": 2801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2801,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2826,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2691,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2859,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2416,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2243,
											"end": 2859,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2243,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2149,
											"end": 2152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2149,
											"end": 2152,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2149,
											"end": 2152,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2149,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2102,
											"end": 2877,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2877,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2102,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 2887,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 561,
											"end": 610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 610,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 5898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1305,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5927,
											"end": 5928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5918,
											"end": 5923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5918,
											"end": 5928,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5918,
											"end": 5928,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5910,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 5976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5964,
											"end": 5968,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5964,
											"end": 5976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5964,
											"end": 5976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5964,
											"end": 5976,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5964,
											"end": 5976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5993,
											"end": 5997,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5986,
											"end": 5997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 5997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6004,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6317,
											"end": 6329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6370,
											"end": 6380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6348,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "AD5C4648"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6348,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6340,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6340,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6396,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 506,
											"end": 531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 506,
											"end": 531,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 538,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 538,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 538,
											"end": 554,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 554,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5690,
											"end": 5694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1305,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5738,
											"end": 5739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5715,
											"end": 5740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5715,
											"end": 5740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5715,
											"end": 5740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5707,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5789,
											"end": 5800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5786,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5776,
											"end": 5786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5776,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5776,
											"end": 5800,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5800,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5776,
											"end": 5800,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5800,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5800,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5776,
											"end": 5800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5800,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5800,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5800,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5817,
											"end": 5821,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5810,
											"end": 5821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5810,
											"end": 5821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5828,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5116,
											"end": 5130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 5156,
											"end": 5160,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5146,
											"end": 5150,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5146,
											"end": 5150,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5133,
											"end": 5141,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5133,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5133,
											"end": 5145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5116,
											"end": 5161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5116,
											"end": 5161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5204,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5196,
											"end": 5213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5196,
											"end": 5213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5196,
											"end": 5213,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5196,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5183,
											"end": 5192,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5183,
											"end": 5213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5245,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 5276,
											"end": 5281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5276,
											"end": 5281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5281,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5276,
											"end": 5281,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5281,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5281,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5276,
											"end": 5281,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5245,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5245,
											"end": 5289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5245,
											"end": 5289,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 5245,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 641,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "D500B1D8E8EF31E21C99D1DB9A6444D3ADF1270"
										},
										{
											"begin": 5303,
											"end": 5324,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5303,
											"end": 5324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5324,
											"name": "PUSH",
											"source": 0,
											"value": "D0E30DB0"
										},
										{
											"begin": 5331,
											"end": 5339,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5358,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 641,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "D500B1D8E8EF31E21C99D1DB9A6444D3ADF1270"
										},
										{
											"begin": 5392,
											"end": 5395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5396,
											"end": 5404,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5358,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 5358,
											"end": 5405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5358,
											"end": 5405,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 5358,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5412,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1305,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5528,
											"end": 5529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5510,
											"end": 5530,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5510,
											"end": 5530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5530,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5510,
											"end": 5530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5530,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5530,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5502,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5580,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5566,
											"end": 5580,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5580,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5580,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5566,
											"end": 5580,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5580,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5580,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5580,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5566,
											"end": 5580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5580,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5580,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5580,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5597,
											"end": 5601,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5590,
											"end": 5601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5608,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1305,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1287,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6152,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6128,
											"end": 6154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6128,
											"end": 6154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6128,
											"end": 6140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6128,
											"end": 6154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6128,
											"end": 6154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6128,
											"end": 6154,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6128,
											"end": 6154,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6120,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6203,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6189,
											"end": 6210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 6209,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6210,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6189,
											"end": 6210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6210,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6189,
											"end": 6210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6210,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6242,
											"end": 6246,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6235,
											"end": 6246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6235,
											"end": 6246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6253,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4978,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 4879,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4910,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4917,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4895,
											"end": 4896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4895,
											"end": 4917,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 4879,
											"end": 4978,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4964,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4965,
											"end": 4966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4937,
											"end": 4967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4937,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 4937,
											"end": 4967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4937,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4937,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4937,
											"end": 4967,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4937,
											"end": 4967,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 4937,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4937,
											"end": 4967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4937,
											"end": 4967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 4919,
											"end": 4922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4919,
											"end": 4922,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4919,
											"end": 4922,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 4919,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 4879,
											"end": 4978,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4978,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 4879,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 5006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 5006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 5006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 5014,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1618,
											"end": 2077,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1618,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1676,
											"end": 1683,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1918,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1923,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1958,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 1913,
											"end": 1958,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1946,
											"end": 1947,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1947,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1939,
											"end": 1947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1939,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 1939,
											"end": 1947,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1958,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 1913,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 1977,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1984,
											"end": 1985,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 1981,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 1980,
											"end": 1985,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 1985,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 1980,
											"end": 1985,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1980,
											"end": 1985,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 1980,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 1985,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 1985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2012,
											"end": 2013,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2007,
											"end": 2008,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2003,
											"end": 2004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "tag",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2003,
											"end": 2013,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2062,
											"end": 2070,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2062,
											"end": 2070,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2062,
											"end": 2070,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 2077,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 1618,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 2077,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 2077,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 2077,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 2077,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 2077,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2539,
											"end": 2669,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2539,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 2627,
											"end": 2628,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2630,
											"end": 2631,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "PUSH",
											"source": 13,
											"value": "1A"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "PUSH",
											"source": 13,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2616,
											"end": 2662,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2616,
											"end": 2662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 2669,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 2669,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 2669,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 2669,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 2669,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1529,
											"end": 1743,
											"name": "tag",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 1529,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1621,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1634,
											"end": 1639,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "tag",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "tag",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "tag",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "226"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "tag",
											"source": 14,
											"value": "226"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "tag",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1600,
											"end": 1654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1600,
											"end": 1654,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1600,
											"end": 1654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1679,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "229"
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "tag",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "tag",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 1743,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 1743,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 1743,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 1743,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1033,
											"end": 1519,
											"name": "tag",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 1033,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1251,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1282,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1291,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1296,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1286,
											"end": 1296,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1320,
											"end": 1330,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 1332,
											"end": 1336,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1338,
											"end": 1340,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1342,
											"end": 1347,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "tag",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1348,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "tag",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "tag",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "tag",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1349,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1250,
											"end": 1349,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1250,
											"end": 1349,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1250,
											"end": 1349,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1250,
											"end": 1349,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1380,
											"end": 1387,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1380,
											"end": 1437,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1380,
											"end": 1437,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1380,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 1380,
											"end": 1437,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1380,
											"end": 1437,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 1408,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1396,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1392,
											"end": 1403,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1392,
											"end": 1436,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1392,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 1392,
											"end": 1436,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1392,
											"end": 1436,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1427,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "tag",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1392,
											"end": 1436,
											"name": "tag",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 1392,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1380,
											"end": 1437,
											"name": "tag",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 1380,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "tag",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "tag",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 1359,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1033,
											"end": 1519,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1033,
											"end": 1519,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1033,
											"end": 1519,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1033,
											"end": 1519,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1033,
											"end": 1519,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1033,
											"end": 1519,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1033,
											"end": 1519,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3639,
											"end": 3951,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3639,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3784,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3793,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3766,
											"end": 3793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3793,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 3794,
											"end": 3801,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3802,
											"end": 3805,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3816,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3844,
											"end": 3855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3856,
											"end": 3863,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 3867,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3816,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3816,
											"end": 3868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3816,
											"end": 3868,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3816,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3884,
											"end": 3891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3904,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3878,
											"end": 3904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3904,
											"name": "PUSH",
											"source": 0,
											"value": "3502EEA8"
										},
										{
											"begin": 3905,
											"end": 3908,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3920,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 3934,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3639,
											"end": 3951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3639,
											"end": 3951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3639,
											"end": 3951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3639,
											"end": 3951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3639,
											"end": 3951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3639,
											"end": 3951,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2923,
											"end": 3616,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2923,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3168,
											"end": 3193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3168,
											"end": 3193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3179,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3168,
											"end": 3193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3193,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 3165,
											"end": 3610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 3239,
											"end": 3246,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3253,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3254,
											"end": 3255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3247,
											"end": 3263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3208,
											"end": 3264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3208,
											"end": 3264,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 3208,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3291,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3307,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3278,
											"end": 3307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3307,
											"name": "PUSH",
											"source": 0,
											"value": "1738B50E"
										},
										{
											"begin": 3308,
											"end": 3313,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3327,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3335,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3342,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3343,
											"end": 3352,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 3165,
											"end": 3610,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3610,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 3165,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3382,
											"end": 3405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3405,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 3406,
											"end": 3413,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3420,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3430,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3414,
											"end": 3430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 3473,
											"end": 3484,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3492,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3445,
											"end": 3510,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3445,
											"end": 3510,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 3445,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3530,
											"end": 3537,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3553,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3524,
											"end": 3553,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3553,
											"name": "PUSH",
											"source": 0,
											"value": "1738B50E"
										},
										{
											"begin": 3554,
											"end": 3559,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 3566,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 3573,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3588,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3598,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3610,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 3165,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 3616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 3616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 3616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 3616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 3616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 3616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 3616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 3616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 3616,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3974,
											"end": 4729,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3974,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4197,
											"end": 4198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4174,
											"end": 4199,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4174,
											"end": 4199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4174,
											"end": 4185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4174,
											"end": 4199,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4174,
											"end": 4199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4174,
											"end": 4199,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 4171,
											"end": 4723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4222,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 4253,
											"end": 4260,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4261,
											"end": 4273,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4222,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4222,
											"end": 4274,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4222,
											"end": 4274,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 4222,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4309,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4321,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4296,
											"end": 4321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4321,
											"name": "PUSH",
											"source": 0,
											"value": "B1A271D4"
										},
										{
											"begin": 4322,
											"end": 4334,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4351,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4352,
											"end": 4360,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4361,
											"end": 4364,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4374,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4375,
											"end": 4386,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4387,
											"end": 4396,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 4171,
											"end": 4723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4723,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 4171,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4462,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4471,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4448,
											"end": 4471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4471,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 4472,
											"end": 4479,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4492,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4515,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 4543,
											"end": 4554,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4562,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 4515,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 4515,
											"end": 4576,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4515,
											"end": 4576,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 4515,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4611,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4598,
											"end": 4623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "B1A271D4"
										},
										{
											"begin": 4624,
											"end": 4636,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4637,
											"end": 4653,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4662,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4663,
											"end": 4666,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4667,
											"end": 4676,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4688,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4698,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4723,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 4171,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4729,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 1027,
											"name": "tag",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 589,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 769,
											"end": 781,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 800,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 804,
											"end": 809,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 804,
											"end": 814,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 804,
											"end": 814,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 838,
											"end": 848,
											"name": "PUSH",
											"source": 14,
											"value": "A9059CBB"
										},
										{
											"begin": 850,
											"end": 852,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 854,
											"end": 859,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 860,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 815,
											"end": 860,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 815,
											"end": 860,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 815,
											"end": 860,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 815,
											"end": 860,
											"name": "tag",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 815,
											"end": 860,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 860,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 815,
											"end": 860,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 860,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 815,
											"end": 860,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 815,
											"end": 860,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 815,
											"end": 860,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 815,
											"end": 860,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "tag",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "tag",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 804,
											"end": 861,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 804,
											"end": 861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 768,
											"end": 861,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 768,
											"end": 861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 768,
											"end": 861,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 768,
											"end": 861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 892,
											"end": 899,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 892,
											"end": 949,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 892,
											"end": 949,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 892,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 892,
											"end": 949,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 919,
											"end": 920,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 908,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 904,
											"end": 915,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 904,
											"end": 920,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 904,
											"end": 948,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 904,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 904,
											"end": 948,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 904,
											"end": 948,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 935,
											"end": 939,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 924,
											"end": 948,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 924,
											"end": 948,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 924,
											"end": 948,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 924,
											"end": 948,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 924,
											"end": 948,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 924,
											"end": 948,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 924,
											"end": 948,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 924,
											"end": 948,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 924,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 924,
											"end": 948,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 924,
											"end": 948,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 924,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 924,
											"end": 948,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 924,
											"end": 948,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 924,
											"end": 948,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 904,
											"end": 948,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 904,
											"end": 948,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 892,
											"end": 949,
											"name": "tag",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 871,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 589,
											"end": 1027,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 589,
											"end": 1027,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 589,
											"end": 1027,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 589,
											"end": 1027,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 589,
											"end": 1027,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 589,
											"end": 1027,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3151,
											"end": 3423,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 3151,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3237,
											"end": 3244,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3269,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3264,
											"end": 3265,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3264,
											"end": 3269,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3271,
											"end": 3283,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3294,
											"end": 3303,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3311,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3307,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 3306,
											"end": 3311,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3311,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 3306,
											"end": 3311,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3306,
											"end": 3311,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 3306,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3294,
											"end": 3311,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3294,
											"end": 3311,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3416,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3408,
											"end": 3416,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3408,
											"end": 3416,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3408,
											"end": 3416,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3423,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3423,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3423,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3423,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3423,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3423,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 44,
											"end": 722,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 44,
											"end": 722,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 44,
											"end": 722,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 196,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 211,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 299,
											"end": 305,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 211,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 211,
											"end": 306,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 211,
											"end": 306,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 211,
											"end": 306,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 196,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 196,
											"end": 307,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 307,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 196,
											"end": 307,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 187,
											"end": 307,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 187,
											"end": 307,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 327,
											"end": 332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 355,
											"end": 361,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 348,
											"end": 353,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 341,
											"end": 362,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 381,
											"end": 385,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 379,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 370,
											"end": 386,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 363,
											"end": 386,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 363,
											"end": 386,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 406,
											"end": 412,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 437,
											"end": 438,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 716,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 422,
											"end": 716,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 444,
											"end": 445,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 441,
											"end": 454,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 422,
											"end": 716,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 422,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 422,
											"end": 716,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 539,
											"end": 542,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 526,
											"end": 543,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 518,
											"end": 524,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 514,
											"end": 544,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 569,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 633,
											"end": 636,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 621,
											"end": 631,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 569,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 569,
											"end": 637,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 569,
											"end": 637,
											"name": "tag",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 569,
											"end": 637,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 564,
											"end": 567,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 557,
											"end": 638,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 667,
											"end": 671,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 662,
											"end": 665,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 658,
											"end": 672,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 651,
											"end": 672,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 651,
											"end": 672,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 701,
											"end": 705,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 696,
											"end": 699,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 692,
											"end": 706,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 685,
											"end": 706,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 685,
											"end": 706,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 482,
											"end": 716,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 469,
											"end": 470,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 467,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 462,
											"end": 471,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 457,
											"end": 471,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 457,
											"end": 471,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 422,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 422,
											"end": 716,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 422,
											"end": 716,
											"name": "tag",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 422,
											"end": 716,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 426,
											"end": 440,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 177,
											"end": 722,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 177,
											"end": 722,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 177,
											"end": 722,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 177,
											"end": 722,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 177,
											"end": 722,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 177,
											"end": 722,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 177,
											"end": 722,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 177,
											"end": 722,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 745,
											"end": 1367,
											"name": "tag",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 745,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 745,
											"end": 1367,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 938,
											"end": 944,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 881,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "tag",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 866,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 866,
											"end": 946,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 866,
											"end": 946,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 866,
											"end": 946,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 857,
											"end": 946,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 857,
											"end": 946,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 966,
											"end": 971,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 994,
											"end": 1000,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 987,
											"end": 992,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 980,
											"end": 1001,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1020,
											"end": 1024,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1018,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1009,
											"end": 1025,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1002,
											"end": 1025,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1002,
											"end": 1025,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1095,
											"end": 1098,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1087,
											"end": 1091,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1075,
											"end": 1092,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1073,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1093,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1063,
											"end": 1099,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "tag",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1140,
											"end": 1141,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1361,
											"name": "tag",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 1125,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1148,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1144,
											"end": 1157,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1125,
											"end": 1361,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1125,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 1125,
											"end": 1361,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1217,
											"end": 1220,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 1278,
											"end": 1281,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1266,
											"end": 1276,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 1245,
											"end": 1282,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1245,
											"end": 1282,
											"name": "tag",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 1245,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1240,
											"end": 1243,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1233,
											"end": 1283,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1312,
											"end": 1316,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1307,
											"end": 1310,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1303,
											"end": 1317,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1346,
											"end": 1350,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1351,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1351,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1185,
											"end": 1361,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1172,
											"end": 1173,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1169,
											"end": 1170,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1165,
											"end": 1174,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1160,
											"end": 1174,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1160,
											"end": 1174,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1125,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 1125,
											"end": 1361,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1125,
											"end": 1361,
											"name": "tag",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 1125,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1129,
											"end": 1143,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 847,
											"end": 1367,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 847,
											"end": 1367,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 847,
											"end": 1367,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 847,
											"end": 1367,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 847,
											"end": 1367,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 847,
											"end": 1367,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 847,
											"end": 1367,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 847,
											"end": 1367,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1373,
											"end": 1715,
											"name": "tag",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 1373,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1373,
											"end": 1715,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 1490,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1490,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 1490,
											"end": 1538,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1490,
											"end": 1538,
											"name": "tag",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 1490,
											"end": 1538,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1475,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 1475,
											"end": 1539,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1475,
											"end": 1539,
											"name": "tag",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 1475,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1539,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1539,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1568,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1555,
											"end": 1560,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1548,
											"end": 1569,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1600,
											"end": 1604,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1589,
											"end": 1605,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1638,
											"end": 1641,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1629,
											"end": 1635,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1624,
											"end": 1627,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1620,
											"end": 1636,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1617,
											"end": 1642,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1614,
											"end": 1616,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1614,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 1614,
											"end": 1616,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1655,
											"end": 1656,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1653,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1645,
											"end": 1657,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1614,
											"end": 1616,
											"name": "tag",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 1614,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1668,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 1702,
											"end": 1708,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1697,
											"end": 1700,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1692,
											"end": 1695,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1668,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 1668,
											"end": 1709,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1709,
											"name": "tag",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 1668,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1715,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1715,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1715,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1715,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1715,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1715,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1715,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1721,
											"end": 1860,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 1721,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1721,
											"end": 1860,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1783,
											"end": 1812,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1783,
											"end": 1812,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1821,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1821,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 1821,
											"end": 1854,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1821,
											"end": 1854,
											"name": "tag",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 1821,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1773,
											"end": 1860,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1773,
											"end": 1860,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1773,
											"end": 1860,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1773,
											"end": 1860,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1773,
											"end": 1860,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1866,
											"end": 2009,
											"name": "tag",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 1866,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1866,
											"end": 2009,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1948,
											"end": 1961,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1939,
											"end": 1961,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1939,
											"end": 1961,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1970,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 1997,
											"end": 2002,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1970,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 1970,
											"end": 2003,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1970,
											"end": 2003,
											"name": "tag",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 1970,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1929,
											"end": 2009,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1929,
											"end": 2009,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1929,
											"end": 2009,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1929,
											"end": 2009,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1929,
											"end": 2009,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2015,
											"end": 2170,
											"name": "tag",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 2015,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2015,
											"end": 2170,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2114,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2114,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2123,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 2158,
											"end": 2163,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2123,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 2123,
											"end": 2164,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2123,
											"end": 2164,
											"name": "tag",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 2123,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2075,
											"end": 2170,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2075,
											"end": 2170,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2075,
											"end": 2170,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2075,
											"end": 2170,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2075,
											"end": 2170,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2193,
											"end": 2496,
											"name": "tag",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 2193,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2193,
											"end": 2496,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2316,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2306,
											"end": 2310,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2298,
											"end": 2304,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2290,
											"end": 2317,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2280,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 2280,
											"end": 2282,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2331,
											"end": 2332,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2329,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2321,
											"end": 2333,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2280,
											"end": 2282,
											"name": "tag",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 2280,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2396,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 2486,
											"end": 2489,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2471,
											"end": 2475,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2469,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2459,
											"end": 2476,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2396,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 2396,
											"end": 2490,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2396,
											"end": 2490,
											"name": "tag",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 2396,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2387,
											"end": 2490,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2387,
											"end": 2490,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2270,
											"end": 2496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2270,
											"end": 2496,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2270,
											"end": 2496,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2270,
											"end": 2496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2270,
											"end": 2496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2270,
											"end": 2496,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2502,
											"end": 2635,
											"name": "tag",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 2502,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2502,
											"end": 2635,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2583,
											"end": 2589,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2570,
											"end": 2590,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2561,
											"end": 2590,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2561,
											"end": 2590,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 2623,
											"end": 2628,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "tag",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2551,
											"end": 2635,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2551,
											"end": 2635,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2551,
											"end": 2635,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2551,
											"end": 2635,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2551,
											"end": 2635,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2641,
											"end": 2778,
											"name": "tag",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 2641,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2641,
											"end": 2778,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2720,
											"end": 2733,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2711,
											"end": 2733,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2711,
											"end": 2733,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 2742,
											"end": 2772,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2742,
											"end": 2772,
											"name": "tag",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 2742,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2701,
											"end": 2778,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2701,
											"end": 2778,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2701,
											"end": 2778,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2701,
											"end": 2778,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2701,
											"end": 2778,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2784,
											"end": 2923,
											"name": "tag",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 2784,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2784,
											"end": 2923,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2874,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2855,
											"end": 2875,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2846,
											"end": 2875,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2846,
											"end": 2875,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2884,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 2911,
											"end": 2916,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2884,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 2884,
											"end": 2917,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2884,
											"end": 2917,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 2884,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2923,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2923,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2923,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2923,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2923,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2942,
											"end": 3213,
											"name": "tag",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 2942,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2942,
											"end": 3213,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3039,
											"end": 3043,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3031,
											"end": 3037,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3027,
											"end": 3044,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3023,
											"end": 3050,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3013,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 3013,
											"end": 3015,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3065,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3062,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3054,
											"end": 3066,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3013,
											"end": 3015,
											"name": "tag",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 3013,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3104,
											"end": 3110,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3091,
											"end": 3111,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3129,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 3203,
											"end": 3206,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3195,
											"end": 3201,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3188,
											"end": 3192,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3176,
											"end": 3193,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3129,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 3129,
											"end": 3207,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3129,
											"end": 3207,
											"name": "tag",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 3129,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3120,
											"end": 3207,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3120,
											"end": 3207,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3003,
											"end": 3213,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3003,
											"end": 3213,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3003,
											"end": 3213,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3003,
											"end": 3213,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3003,
											"end": 3213,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3003,
											"end": 3213,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3219,
											"end": 3384,
											"name": "tag",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 3219,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3219,
											"end": 3384,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3322,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3303,
											"end": 3323,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3294,
											"end": 3323,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3294,
											"end": 3323,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3332,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 3372,
											"end": 3377,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3332,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 3332,
											"end": 3378,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3332,
											"end": 3378,
											"name": "tag",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 3332,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3284,
											"end": 3384,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3284,
											"end": 3384,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3284,
											"end": 3384,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3284,
											"end": 3384,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3284,
											"end": 3384,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3436,
											"end": 3604,
											"name": "tag",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 3436,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3436,
											"end": 3604,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3556,
											"name": "PUSH",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 3544,
											"end": 3550,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3539,
											"end": 3542,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3535,
											"end": 3551,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3531,
											"end": 3557,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3528,
											"end": 3530,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3528,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 3528,
											"end": 3530,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3570,
											"end": 3571,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3568,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3560,
											"end": 3572,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3528,
											"end": 3530,
											"name": "tag",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 3528,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3592,
											"end": 3598,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3583,
											"end": 3598,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3583,
											"end": 3598,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3518,
											"end": 3604,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3518,
											"end": 3604,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3518,
											"end": 3604,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3518,
											"end": 3604,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3518,
											"end": 3604,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3645,
											"end": 4768,
											"name": "tag",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 3645,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3645,
											"end": 4768,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3773,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 3757,
											"end": 3766,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3752,
											"end": 3755,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3748,
											"end": 3767,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3744,
											"end": 3774,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3787,
											"end": 3788,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3785,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3777,
											"end": 3789,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "tag",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3809,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 3824,
											"end": 3828,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 3809,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 3809,
											"end": 3829,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3809,
											"end": 3829,
											"name": "tag",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 3809,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3800,
											"end": 3829,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3800,
											"end": 3829,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3890,
											"end": 3891,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 3975,
											"end": 3978,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3955,
											"end": 3964,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3951,
											"end": 3973,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3930,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 3930,
											"end": 3979,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3930,
											"end": 3979,
											"name": "tag",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 3930,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3923,
											"end": 3927,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3921,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3912,
											"end": 3928,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3905,
											"end": 3980,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3839,
											"end": 3991,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4058,
											"end": 4060,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4099,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 4144,
											"end": 4147,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4135,
											"end": 4141,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4124,
											"end": 4133,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4120,
											"end": 4142,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4099,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 4099,
											"end": 4148,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4099,
											"end": 4148,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 4099,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4092,
											"end": 4096,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4085,
											"end": 4090,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4081,
											"end": 4097,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4074,
											"end": 4149,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4001,
											"end": 4160,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4228,
											"end": 4230,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4269,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 4314,
											"end": 4317,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4305,
											"end": 4311,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4294,
											"end": 4303,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4290,
											"end": 4312,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4269,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 4269,
											"end": 4318,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4269,
											"end": 4318,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 4269,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4266,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4260,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4251,
											"end": 4267,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4244,
											"end": 4319,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4170,
											"end": 4330,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4391,
											"end": 4393,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4432,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 4477,
											"end": 4480,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4457,
											"end": 4466,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4432,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 4432,
											"end": 4481,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4432,
											"end": 4481,
											"name": "tag",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 4432,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4425,
											"end": 4429,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4418,
											"end": 4423,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4407,
											"end": 4482,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4340,
											"end": 4493,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4584,
											"end": 4587,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4573,
											"end": 4582,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4569,
											"end": 4588,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4556,
											"end": 4589,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4608,
											"end": 4614,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4602,
											"end": 4604,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4602,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 4602,
											"end": 4604,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4648,
											"end": 4649,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4645,
											"end": 4646,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4638,
											"end": 4650,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4602,
											"end": 4604,
											"name": "tag",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 4602,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4691,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 4745,
											"end": 4748,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4736,
											"end": 4742,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4725,
											"end": 4734,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4721,
											"end": 4743,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4691,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 4691,
											"end": 4749,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4691,
											"end": 4749,
											"name": "tag",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 4691,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4684,
											"end": 4688,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4677,
											"end": 4682,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4673,
											"end": 4689,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4666,
											"end": 4750,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4503,
											"end": 4761,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3731,
											"end": 4768,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3731,
											"end": 4768,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3731,
											"end": 4768,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3731,
											"end": 4768,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3731,
											"end": 4768,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4810,
											"end": 5682,
											"name": "tag",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 4810,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4810,
											"end": 5682,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4923,
											"end": 4932,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4918,
											"end": 4921,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4914,
											"end": 4933,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4907,
											"end": 4909,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4907,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 4907,
											"end": 4909,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4953,
											"end": 4954,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4951,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4943,
											"end": 4955,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4907,
											"end": 4909,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 4907,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "tag",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4966,
											"end": 4995,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4966,
											"end": 4995,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5056,
											"end": 5057,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 5141,
											"end": 5144,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5132,
											"end": 5138,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5121,
											"end": 5130,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5117,
											"end": 5139,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5096,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 5096,
											"end": 5145,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5096,
											"end": 5145,
											"name": "tag",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 5096,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5089,
											"end": 5093,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5082,
											"end": 5087,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5078,
											"end": 5094,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5071,
											"end": 5146,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5005,
											"end": 5157,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5231,
											"end": 5233,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5272,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5305,
											"end": 5311,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5294,
											"end": 5303,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5290,
											"end": 5312,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 5272,
											"end": 5318,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5272,
											"end": 5318,
											"name": "tag",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 5272,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5265,
											"end": 5269,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5258,
											"end": 5263,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5254,
											"end": 5270,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5247,
											"end": 5319,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5167,
											"end": 5330,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5394,
											"end": 5396,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5435,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 5488,
											"end": 5491,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5479,
											"end": 5485,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5468,
											"end": 5477,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5464,
											"end": 5486,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5435,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 5435,
											"end": 5492,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5435,
											"end": 5492,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 5435,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5428,
											"end": 5432,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5426,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5417,
											"end": 5433,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5410,
											"end": 5493,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5340,
											"end": 5504,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5576,
											"end": 5578,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5617,
											"end": 5663,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 5659,
											"end": 5662,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5650,
											"end": 5656,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5639,
											"end": 5648,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5635,
											"end": 5657,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5617,
											"end": 5663,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 5617,
											"end": 5663,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5617,
											"end": 5663,
											"name": "tag",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 5617,
											"end": 5663,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5610,
											"end": 5614,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5603,
											"end": 5608,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5599,
											"end": 5615,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5592,
											"end": 5664,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5514,
											"end": 5675,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4897,
											"end": 5682,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4897,
											"end": 5682,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4897,
											"end": 5682,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4897,
											"end": 5682,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4897,
											"end": 5682,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5688,
											"end": 5827,
											"name": "tag",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 5688,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5688,
											"end": 5827,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5772,
											"end": 5778,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5759,
											"end": 5779,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5750,
											"end": 5779,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5750,
											"end": 5779,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5788,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 5815,
											"end": 5820,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5788,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 5788,
											"end": 5821,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5788,
											"end": 5821,
											"name": "tag",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 5788,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5740,
											"end": 5827,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5740,
											"end": 5827,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5740,
											"end": 5827,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5740,
											"end": 5827,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5740,
											"end": 5827,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5833,
											"end": 6095,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 5833,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5833,
											"end": 6095,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5941,
											"end": 5943,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5929,
											"end": 5938,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5920,
											"end": 5927,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5916,
											"end": 5939,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5912,
											"end": 5944,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5909,
											"end": 5911,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5909,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 5909,
											"end": 5911,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5957,
											"end": 5958,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5954,
											"end": 5955,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5947,
											"end": 5959,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5909,
											"end": 5911,
											"name": "tag",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 5909,
											"end": 5911,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6000,
											"end": 6001,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 6070,
											"end": 6077,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6061,
											"end": 6067,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6050,
											"end": 6059,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6046,
											"end": 6068,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6025,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 6025,
											"end": 6078,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6025,
											"end": 6078,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 6025,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6015,
											"end": 6078,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6015,
											"end": 6078,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5971,
											"end": 6088,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5899,
											"end": 6095,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5899,
											"end": 6095,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5899,
											"end": 6095,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5899,
											"end": 6095,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5899,
											"end": 6095,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6101,
											"end": 6385,
											"name": "tag",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 6101,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6101,
											"end": 6385,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6220,
											"end": 6222,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6208,
											"end": 6217,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6199,
											"end": 6206,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6195,
											"end": 6218,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6191,
											"end": 6223,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6188,
											"end": 6190,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6188,
											"end": 6190,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 6188,
											"end": 6190,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6236,
											"end": 6237,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6234,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6238,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6188,
											"end": 6190,
											"name": "tag",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 6188,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6279,
											"end": 6280,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6304,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 6360,
											"end": 6367,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6351,
											"end": 6357,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6340,
											"end": 6349,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6336,
											"end": 6358,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6304,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 6304,
											"end": 6368,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6304,
											"end": 6368,
											"name": "tag",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 6304,
											"end": 6368,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6294,
											"end": 6368,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6294,
											"end": 6368,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6250,
											"end": 6378,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6178,
											"end": 6385,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6178,
											"end": 6385,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6178,
											"end": 6385,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6178,
											"end": 6385,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6178,
											"end": 6385,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6391,
											"end": 6669,
											"name": "tag",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 6391,
											"end": 6669,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6391,
											"end": 6669,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6507,
											"end": 6509,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6495,
											"end": 6504,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6486,
											"end": 6493,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6482,
											"end": 6505,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6478,
											"end": 6510,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6475,
											"end": 6477,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6475,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 6475,
											"end": 6477,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6523,
											"end": 6524,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6520,
											"end": 6521,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6513,
											"end": 6525,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6475,
											"end": 6477,
											"name": "tag",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 6475,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6566,
											"end": 6567,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6591,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 6644,
											"end": 6651,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6635,
											"end": 6641,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6624,
											"end": 6633,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6620,
											"end": 6642,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6591,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 6591,
											"end": 6652,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6591,
											"end": 6652,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 6591,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6581,
											"end": 6652,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6581,
											"end": 6652,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6537,
											"end": 6662,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6669,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6669,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6669,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6669,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6669,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6675,
											"end": 7080,
											"name": "tag",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 6675,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6675,
											"end": 7080,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6808,
											"end": 6810,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6796,
											"end": 6805,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6787,
											"end": 6794,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6783,
											"end": 6806,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6779,
											"end": 6811,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6776,
											"end": 6778,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6776,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 6776,
											"end": 6778,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6824,
											"end": 6825,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6821,
											"end": 6822,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6814,
											"end": 6826,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6776,
											"end": 6778,
											"name": "tag",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 6776,
											"end": 6778,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6895,
											"end": 6896,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6884,
											"end": 6893,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6880,
											"end": 6897,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6867,
											"end": 6898,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6917,
											"end": 6923,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6914,
											"end": 6944,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6911,
											"end": 6913,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6911,
											"end": 6913,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 6911,
											"end": 6913,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6957,
											"end": 6958,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6954,
											"end": 6955,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6947,
											"end": 6959,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6911,
											"end": 6913,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 6911,
											"end": 6913,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6985,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 7055,
											"end": 7062,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7046,
											"end": 7052,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7035,
											"end": 7044,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7031,
											"end": 7053,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6985,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 6985,
											"end": 7063,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6985,
											"end": 7063,
											"name": "tag",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 6985,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6975,
											"end": 7063,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6975,
											"end": 7063,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6838,
											"end": 7073,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6766,
											"end": 7080,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6766,
											"end": 7080,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6766,
											"end": 7080,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6766,
											"end": 7080,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6766,
											"end": 7080,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7086,
											"end": 7364,
											"name": "tag",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 7086,
											"end": 7364,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7086,
											"end": 7364,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7202,
											"end": 7204,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7190,
											"end": 7199,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7181,
											"end": 7188,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7177,
											"end": 7200,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7173,
											"end": 7205,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7170,
											"end": 7172,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7170,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 7170,
											"end": 7172,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7218,
											"end": 7219,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7215,
											"end": 7216,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7208,
											"end": 7220,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7170,
											"end": 7172,
											"name": "tag",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 7170,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7261,
											"end": 7262,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7347,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 7339,
											"end": 7346,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7315,
											"end": 7337,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7286,
											"end": 7347,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 7286,
											"end": 7347,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7286,
											"end": 7347,
											"name": "tag",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 7286,
											"end": 7347,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7276,
											"end": 7347,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7276,
											"end": 7347,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7232,
											"end": 7357,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7160,
											"end": 7364,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7160,
											"end": 7364,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7160,
											"end": 7364,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7160,
											"end": 7364,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7160,
											"end": 7364,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7370,
											"end": 7658,
											"name": "tag",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 7370,
											"end": 7658,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7370,
											"end": 7658,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7491,
											"end": 7493,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7479,
											"end": 7488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7470,
											"end": 7477,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7466,
											"end": 7489,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7462,
											"end": 7494,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7459,
											"end": 7461,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7459,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 7459,
											"end": 7461,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7507,
											"end": 7508,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7504,
											"end": 7505,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7497,
											"end": 7509,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7459,
											"end": 7461,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 7459,
											"end": 7461,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 7551,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7575,
											"end": 7641,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 7633,
											"end": 7640,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7613,
											"end": 7622,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7609,
											"end": 7631,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7575,
											"end": 7641,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 7575,
											"end": 7641,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7575,
											"end": 7641,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 7575,
											"end": 7641,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7565,
											"end": 7641,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7565,
											"end": 7641,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7521,
											"end": 7651,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7449,
											"end": 7658,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7449,
											"end": 7658,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7449,
											"end": 7658,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7449,
											"end": 7658,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7449,
											"end": 7658,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7664,
											"end": 8079,
											"name": "tag",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 7664,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7664,
											"end": 8079,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7802,
											"end": 7804,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7790,
											"end": 7799,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7781,
											"end": 7788,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7777,
											"end": 7800,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7773,
											"end": 7805,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7770,
											"end": 7772,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7770,
											"end": 7772,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 7770,
											"end": 7772,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7818,
											"end": 7819,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7816,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7808,
											"end": 7820,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7770,
											"end": 7772,
											"name": "tag",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 7770,
											"end": 7772,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7889,
											"end": 7890,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7878,
											"end": 7887,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7874,
											"end": 7891,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7861,
											"end": 7892,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7919,
											"end": 7937,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7911,
											"end": 7917,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7908,
											"end": 7938,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7905,
											"end": 7907,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7905,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 7905,
											"end": 7907,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7951,
											"end": 7952,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7941,
											"end": 7953,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7905,
											"end": 7907,
											"name": "tag",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 7905,
											"end": 7907,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7979,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8045,
											"end": 8051,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8034,
											"end": 8043,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8030,
											"end": 8052,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7979,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 7979,
											"end": 8062,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7979,
											"end": 8062,
											"name": "tag",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 7979,
											"end": 8062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 8062,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 8062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7832,
											"end": 8072,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7760,
											"end": 8079,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7760,
											"end": 8079,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7760,
											"end": 8079,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7760,
											"end": 8079,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7760,
											"end": 8079,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8085,
											"end": 8412,
											"name": "tag",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 8085,
											"end": 8412,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8085,
											"end": 8412,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8225,
											"end": 8228,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 8213,
											"end": 8222,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8204,
											"end": 8211,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8200,
											"end": 8223,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8196,
											"end": 8229,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8193,
											"end": 8195,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8193,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 8193,
											"end": 8195,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8239,
											"end": 8240,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8193,
											"end": 8195,
											"name": "tag",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 8193,
											"end": 8195,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8285,
											"end": 8286,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8395,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 8387,
											"end": 8394,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8378,
											"end": 8384,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8367,
											"end": 8376,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8363,
											"end": 8385,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8310,
											"end": 8395,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 8310,
											"end": 8395,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8310,
											"end": 8395,
											"name": "tag",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 8310,
											"end": 8395,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8300,
											"end": 8395,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8300,
											"end": 8395,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8256,
											"end": 8405,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8183,
											"end": 8412,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8183,
											"end": 8412,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8183,
											"end": 8412,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8183,
											"end": 8412,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8183,
											"end": 8412,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8418,
											"end": 8680,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 8418,
											"end": 8680,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8418,
											"end": 8680,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8526,
											"end": 8528,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8514,
											"end": 8523,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8505,
											"end": 8512,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8501,
											"end": 8524,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8497,
											"end": 8529,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8494,
											"end": 8496,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8494,
											"end": 8496,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 8494,
											"end": 8496,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8542,
											"end": 8543,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8539,
											"end": 8540,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8532,
											"end": 8544,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8494,
											"end": 8496,
											"name": "tag",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 8494,
											"end": 8496,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8585,
											"end": 8586,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8610,
											"end": 8663,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 8655,
											"end": 8662,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8646,
											"end": 8652,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8635,
											"end": 8644,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8631,
											"end": 8653,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8610,
											"end": 8663,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 8610,
											"end": 8663,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8610,
											"end": 8663,
											"name": "tag",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 8610,
											"end": 8663,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8600,
											"end": 8663,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8600,
											"end": 8663,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8556,
											"end": 8673,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8484,
											"end": 8680,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8484,
											"end": 8680,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8484,
											"end": 8680,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8484,
											"end": 8680,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8484,
											"end": 8680,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8686,
											"end": 9093,
											"name": "tag",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 8686,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8686,
											"end": 9093,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8686,
											"end": 9093,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8811,
											"end": 8813,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8799,
											"end": 8808,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8790,
											"end": 8797,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8786,
											"end": 8809,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8782,
											"end": 8814,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8779,
											"end": 8781,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8779,
											"end": 8781,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 8779,
											"end": 8781,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8827,
											"end": 8828,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8824,
											"end": 8825,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8817,
											"end": 8829,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8779,
											"end": 8781,
											"name": "tag",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 8779,
											"end": 8781,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8870,
											"end": 8871,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8895,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 8940,
											"end": 8947,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8931,
											"end": 8937,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8920,
											"end": 8929,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8916,
											"end": 8938,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8895,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 8895,
											"end": 8948,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8895,
											"end": 8948,
											"name": "tag",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 8895,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8841,
											"end": 8958,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8997,
											"end": 8999,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9023,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 9068,
											"end": 9075,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9059,
											"end": 9065,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9048,
											"end": 9057,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9044,
											"end": 9066,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9023,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 9023,
											"end": 9076,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9023,
											"end": 9076,
											"name": "tag",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 9023,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9013,
											"end": 9076,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9013,
											"end": 9076,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8968,
											"end": 9086,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8769,
											"end": 9093,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8769,
											"end": 9093,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8769,
											"end": 9093,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8769,
											"end": 9093,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8769,
											"end": 9093,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8769,
											"end": 9093,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9099,
											"end": 9306,
											"name": "tag",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 9099,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9099,
											"end": 9306,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9203,
											"end": 9263,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 9259,
											"end": 9262,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9251,
											"end": 9257,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9203,
											"end": 9263,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 9203,
											"end": 9263,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9203,
											"end": 9263,
											"name": "tag",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 9203,
											"end": 9263,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9295,
											"end": 9299,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9290,
											"end": 9293,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9286,
											"end": 9300,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9272,
											"end": 9300,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9272,
											"end": 9300,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9193,
											"end": 9306,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9193,
											"end": 9306,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9193,
											"end": 9306,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9193,
											"end": 9306,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9193,
											"end": 9306,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9312,
											"end": 9487,
											"name": "tag",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 9312,
											"end": 9487,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9312,
											"end": 9487,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9400,
											"end": 9444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 9440,
											"end": 9443,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9432,
											"end": 9438,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9400,
											"end": 9444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 9400,
											"end": 9444,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9400,
											"end": 9444,
											"name": "tag",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 9400,
											"end": 9444,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9476,
											"end": 9480,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9471,
											"end": 9474,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9467,
											"end": 9481,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9453,
											"end": 9481,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9453,
											"end": 9481,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9390,
											"end": 9487,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9390,
											"end": 9487,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9390,
											"end": 9487,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9390,
											"end": 9487,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9390,
											"end": 9487,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9493,
											"end": 9773,
											"name": "tag",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 9493,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9493,
											"end": 9773,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9659,
											"end": 9767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 9763,
											"end": 9766,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9755,
											"end": 9761,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9659,
											"end": 9767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 9659,
											"end": 9767,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9659,
											"end": 9767,
											"name": "tag",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 9659,
											"end": 9767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9645,
											"end": 9767,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9645,
											"end": 9767,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9635,
											"end": 9773,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9635,
											"end": 9773,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9635,
											"end": 9773,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9635,
											"end": 9773,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9635,
											"end": 9773,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9779,
											"end": 9958,
											"name": "tag",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 9779,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9779,
											"end": 9958,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9869,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 9911,
											"end": 9914,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9903,
											"end": 9909,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9869,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 9869,
											"end": 9915,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9869,
											"end": 9915,
											"name": "tag",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 9869,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9947,
											"end": 9951,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9942,
											"end": 9945,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9938,
											"end": 9952,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9924,
											"end": 9952,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9924,
											"end": 9952,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9859,
											"end": 9958,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9859,
											"end": 9958,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9859,
											"end": 9958,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9859,
											"end": 9958,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9859,
											"end": 9958,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9964,
											"end": 10096,
											"name": "tag",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 9964,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10057,
											"end": 10089,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 10083,
											"end": 10088,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10057,
											"end": 10089,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 10057,
											"end": 10089,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10057,
											"end": 10089,
											"name": "tag",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 10057,
											"end": 10089,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10052,
											"end": 10055,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10045,
											"end": 10090,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10035,
											"end": 10096,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10035,
											"end": 10096,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10035,
											"end": 10096,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10102,
											"end": 10244,
											"name": "tag",
											"source": 15,
											"value": "456"
										},
										{
											"begin": 10102,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10205,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 10231,
											"end": 10236,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10205,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 10205,
											"end": 10237,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10205,
											"end": 10237,
											"name": "tag",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 10205,
											"end": 10237,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10200,
											"end": 10203,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10193,
											"end": 10238,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10183,
											"end": 10244,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10183,
											"end": 10244,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10183,
											"end": 10244,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10250,
											"end": 10358,
											"name": "tag",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 10250,
											"end": 10358,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10327,
											"end": 10351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 10345,
											"end": 10350,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10327,
											"end": 10351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 10327,
											"end": 10351,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10327,
											"end": 10351,
											"name": "tag",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 10327,
											"end": 10351,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10322,
											"end": 10325,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10315,
											"end": 10352,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10305,
											"end": 10358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10305,
											"end": 10358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10305,
											"end": 10358,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10364,
											"end": 10482,
											"name": "tag",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 10364,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10451,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 10469,
											"end": 10474,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10451,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 10451,
											"end": 10475,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10451,
											"end": 10475,
											"name": "tag",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 10451,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10446,
											"end": 10449,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10439,
											"end": 10476,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10429,
											"end": 10482,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10429,
											"end": 10482,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10429,
											"end": 10482,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10526,
											"end": 11328,
											"name": "tag",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 10526,
											"end": 11328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10526,
											"end": 11328,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10688,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 10750,
											"end": 10755,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10688,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 10688,
											"end": 10756,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10688,
											"end": 10756,
											"name": "tag",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 10688,
											"end": 10756,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10772,
											"end": 10858,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 10851,
											"end": 10857,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10846,
											"end": 10849,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10772,
											"end": 10858,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 10772,
											"end": 10858,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10772,
											"end": 10858,
											"name": "tag",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 10772,
											"end": 10858,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10765,
											"end": 10858,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 10765,
											"end": 10858,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10882,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 10946,
											"end": 10951,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10882,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 10882,
											"end": 10952,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10882,
											"end": 10952,
											"name": "tag",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 10882,
											"end": 10952,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10975,
											"end": 10982,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11006,
											"end": 11007,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10991,
											"end": 11303,
											"name": "tag",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 10991,
											"end": 11303,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11016,
											"end": 11022,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11013,
											"end": 11014,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11010,
											"end": 11023,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 10991,
											"end": 11303,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10991,
											"end": 11303,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 10991,
											"end": 11303,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11092,
											"end": 11098,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11086,
											"end": 11099,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11119,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 11192,
											"end": 11195,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11177,
											"end": 11190,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11119,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 11119,
											"end": 11196,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11119,
											"end": 11196,
											"name": "tag",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 11119,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11112,
											"end": 11196,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 11112,
											"end": 11196,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11219,
											"end": 11293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 11286,
											"end": 11292,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11219,
											"end": 11293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 11219,
											"end": 11293,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11219,
											"end": 11293,
											"name": "tag",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 11219,
											"end": 11293,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11209,
											"end": 11293,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11209,
											"end": 11293,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11051,
											"end": 11303,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11038,
											"end": 11039,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 11035,
											"end": 11036,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11031,
											"end": 11040,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11026,
											"end": 11040,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11026,
											"end": 11040,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10991,
											"end": 11303,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 10991,
											"end": 11303,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10991,
											"end": 11303,
											"name": "tag",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 10991,
											"end": 11303,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10995,
											"end": 11009,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11319,
											"end": 11322,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11312,
											"end": 11322,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 11312,
											"end": 11322,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10664,
											"end": 11328,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10664,
											"end": 11328,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10664,
											"end": 11328,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10664,
											"end": 11328,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10664,
											"end": 11328,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10664,
											"end": 11328,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10664,
											"end": 11328,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10664,
											"end": 11328,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11362,
											"end": 12086,
											"name": "tag",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 11362,
											"end": 12086,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11362,
											"end": 12086,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11508,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 11555,
											"end": 11560,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11508,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 11508,
											"end": 11561,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11508,
											"end": 11561,
											"name": "tag",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 11508,
											"end": 11561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11577,
											"end": 11662,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 11655,
											"end": 11661,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11650,
											"end": 11653,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11577,
											"end": 11662,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 11577,
											"end": 11662,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11577,
											"end": 11662,
											"name": "tag",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 11577,
											"end": 11662,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11570,
											"end": 11662,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 11570,
											"end": 11662,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11686,
											"end": 11741,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 11735,
											"end": 11740,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11686,
											"end": 11741,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 11686,
											"end": 11741,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11686,
											"end": 11741,
											"name": "tag",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 11686,
											"end": 11741,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11764,
											"end": 11771,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11795,
											"end": 11796,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11780,
											"end": 12061,
											"name": "tag",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 11780,
											"end": 12061,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11805,
											"end": 11811,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11802,
											"end": 11803,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11799,
											"end": 11812,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 11780,
											"end": 12061,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11780,
											"end": 12061,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 11780,
											"end": 12061,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11881,
											"end": 11887,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11875,
											"end": 11888,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11908,
											"end": 11969,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 11965,
											"end": 11968,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11950,
											"end": 11963,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11908,
											"end": 11969,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 11908,
											"end": 11969,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11908,
											"end": 11969,
											"name": "tag",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 11908,
											"end": 11969,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11901,
											"end": 11969,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 11901,
											"end": 11969,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11992,
											"end": 12051,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 12044,
											"end": 12050,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11992,
											"end": 12051,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 11992,
											"end": 12051,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11992,
											"end": 12051,
											"name": "tag",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 11992,
											"end": 12051,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11982,
											"end": 12051,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11982,
											"end": 12051,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11840,
											"end": 12061,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11827,
											"end": 11828,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 11824,
											"end": 11825,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11820,
											"end": 11829,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11815,
											"end": 11829,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11815,
											"end": 11829,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11780,
											"end": 12061,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 11780,
											"end": 12061,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11780,
											"end": 12061,
											"name": "tag",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 11780,
											"end": 12061,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11784,
											"end": 11798,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12077,
											"end": 12080,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12070,
											"end": 12080,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 12070,
											"end": 12080,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11484,
											"end": 12086,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11484,
											"end": 12086,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11484,
											"end": 12086,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11484,
											"end": 12086,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11484,
											"end": 12086,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11484,
											"end": 12086,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11484,
											"end": 12086,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11484,
											"end": 12086,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 12162,
											"end": 13321,
											"name": "tag",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 12162,
											"end": 13321,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12162,
											"end": 13321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12372,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 12451,
											"end": 12456,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12372,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 12372,
											"end": 12457,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 12372,
											"end": 12457,
											"name": "tag",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 12372,
											"end": 12457,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12473,
											"end": 12590,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 12583,
											"end": 12589,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12578,
											"end": 12581,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12473,
											"end": 12590,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 12473,
											"end": 12590,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 12473,
											"end": 12590,
											"name": "tag",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 12473,
											"end": 12590,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12466,
											"end": 12590,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 12466,
											"end": 12590,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12616,
											"end": 12619,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12661,
											"end": 12665,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12653,
											"end": 12659,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12649,
											"end": 12666,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 12644,
											"end": 12647,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12640,
											"end": 12667,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12691,
											"end": 12778,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 12772,
											"end": 12777,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12691,
											"end": 12778,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 12691,
											"end": 12778,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 12691,
											"end": 12778,
											"name": "tag",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 12691,
											"end": 12778,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12801,
											"end": 12808,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12832,
											"end": 12833,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12817,
											"end": 13276,
											"name": "tag",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 12817,
											"end": 13276,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12842,
											"end": 12848,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12840,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12836,
											"end": 12849,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12817,
											"end": 13276,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12817,
											"end": 13276,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 12817,
											"end": 13276,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12913,
											"end": 12922,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12907,
											"end": 12911,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12903,
											"end": 12923,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12898,
											"end": 12901,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 12891,
											"end": 12924,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12964,
											"end": 12970,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12958,
											"end": 12971,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12992,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 13113,
											"end": 13117,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13098,
											"end": 13111,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12992,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 12992,
											"end": 13118,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 12992,
											"end": 13118,
											"name": "tag",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 12992,
											"end": 13118,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12984,
											"end": 13118,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 12984,
											"end": 13118,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13141,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 13225,
											"end": 13231,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13141,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 13141,
											"end": 13232,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 13141,
											"end": 13232,
											"name": "tag",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 13141,
											"end": 13232,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13131,
											"end": 13232,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13131,
											"end": 13232,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13261,
											"end": 13265,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13256,
											"end": 13259,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 13252,
											"end": 13266,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13245,
											"end": 13266,
											"name": "SWAP10",
											"source": 15
										},
										{
											"begin": 13245,
											"end": 13266,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12877,
											"end": 13276,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12864,
											"end": 12865,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 12861,
											"end": 12862,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12857,
											"end": 12866,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12852,
											"end": 12866,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12852,
											"end": 12866,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12817,
											"end": 13276,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 12817,
											"end": 13276,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12817,
											"end": 13276,
											"name": "tag",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 12817,
											"end": 13276,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12821,
											"end": 12835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13292,
											"end": 13296,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13285,
											"end": 13296,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 13285,
											"end": 13296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13312,
											"end": 13315,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 13305,
											"end": 13315,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 13305,
											"end": 13315,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12348,
											"end": 13321,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12348,
											"end": 13321,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12348,
											"end": 13321,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12348,
											"end": 13321,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12348,
											"end": 13321,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12348,
											"end": 13321,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12348,
											"end": 13321,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12348,
											"end": 13321,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12348,
											"end": 13321,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12348,
											"end": 13321,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 13357,
											"end": 14089,
											"name": "tag",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 13357,
											"end": 14089,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13357,
											"end": 14089,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13505,
											"end": 13559,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 13553,
											"end": 13558,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13505,
											"end": 13559,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 13505,
											"end": 13559,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 13505,
											"end": 13559,
											"name": "tag",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 13505,
											"end": 13559,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13575,
											"end": 13661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 13654,
											"end": 13660,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13649,
											"end": 13652,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13575,
											"end": 13661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 13575,
											"end": 13661,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 13575,
											"end": 13661,
											"name": "tag",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 13575,
											"end": 13661,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13568,
											"end": 13661,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 13568,
											"end": 13661,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13685,
											"end": 13741,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 13735,
											"end": 13740,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13685,
											"end": 13741,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 13685,
											"end": 13741,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 13685,
											"end": 13741,
											"name": "tag",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 13685,
											"end": 13741,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13764,
											"end": 13771,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13795,
											"end": 13796,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13780,
											"end": 14064,
											"name": "tag",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 13780,
											"end": 14064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13805,
											"end": 13811,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13802,
											"end": 13803,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13799,
											"end": 13812,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 13780,
											"end": 14064,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13780,
											"end": 14064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 13780,
											"end": 14064,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13881,
											"end": 13887,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13875,
											"end": 13888,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 13908,
											"end": 13971,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 13967,
											"end": 13970,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 13952,
											"end": 13965,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13908,
											"end": 13971,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 13908,
											"end": 13971,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 13908,
											"end": 13971,
											"name": "tag",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 13908,
											"end": 13971,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13901,
											"end": 13971,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 13901,
											"end": 13971,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13994,
											"end": 14054,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 14047,
											"end": 14053,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13994,
											"end": 14054,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 13994,
											"end": 14054,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 13994,
											"end": 14054,
											"name": "tag",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 13994,
											"end": 14054,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13984,
											"end": 14054,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13984,
											"end": 14054,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13840,
											"end": 14064,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13827,
											"end": 13828,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 13824,
											"end": 13825,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13820,
											"end": 13829,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13815,
											"end": 13829,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13815,
											"end": 13829,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13780,
											"end": 14064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 13780,
											"end": 14064,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13780,
											"end": 14064,
											"name": "tag",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 13780,
											"end": 14064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13784,
											"end": 13798,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14080,
											"end": 14083,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14073,
											"end": 14083,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 14073,
											"end": 14083,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13481,
											"end": 14089,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13481,
											"end": 14089,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13481,
											"end": 14089,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13481,
											"end": 14089,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13481,
											"end": 14089,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13481,
											"end": 14089,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13481,
											"end": 14089,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13481,
											"end": 14089,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 14095,
											"end": 14194,
											"name": "tag",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 14095,
											"end": 14194,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14166,
											"end": 14187,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 14181,
											"end": 14186,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14166,
											"end": 14187,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 14166,
											"end": 14187,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 14166,
											"end": 14187,
											"name": "tag",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 14166,
											"end": 14187,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14161,
											"end": 14164,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14154,
											"end": 14188,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14144,
											"end": 14194,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14144,
											"end": 14194,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14144,
											"end": 14194,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 14200,
											"end": 14309,
											"name": "tag",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 14200,
											"end": 14309,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14281,
											"end": 14302,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "528"
										},
										{
											"begin": 14296,
											"end": 14301,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14281,
											"end": 14302,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 14281,
											"end": 14302,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 14281,
											"end": 14302,
											"name": "tag",
											"source": 15,
											"value": "528"
										},
										{
											"begin": 14281,
											"end": 14302,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14276,
											"end": 14279,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14269,
											"end": 14303,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14259,
											"end": 14309,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14259,
											"end": 14309,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14259,
											"end": 14309,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 14315,
											"end": 14423,
											"name": "tag",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 14315,
											"end": 14423,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 14410,
											"end": 14415,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "tag",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14387,
											"end": 14390,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14380,
											"end": 14417,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14370,
											"end": 14423,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14370,
											"end": 14423,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14370,
											"end": 14423,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 14429,
											"end": 14769,
											"name": "tag",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 14429,
											"end": 14769,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14429,
											"end": 14769,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14533,
											"end": 14571,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 14565,
											"end": 14570,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14533,
											"end": 14571,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 14533,
											"end": 14571,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 14533,
											"end": 14571,
											"name": "tag",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 14533,
											"end": 14571,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14587,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 14640,
											"end": 14646,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14635,
											"end": 14638,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14587,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 14587,
											"end": 14647,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 14587,
											"end": 14647,
											"name": "tag",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 14587,
											"end": 14647,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14580,
											"end": 14647,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 14580,
											"end": 14647,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14656,
											"end": 14708,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 14701,
											"end": 14707,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14696,
											"end": 14699,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14689,
											"end": 14693,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14682,
											"end": 14687,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 14678,
											"end": 14694,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14656,
											"end": 14708,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 14656,
											"end": 14708,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 14656,
											"end": 14708,
											"name": "tag",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 14656,
											"end": 14708,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14733,
											"end": 14762,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 14755,
											"end": 14761,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14733,
											"end": 14762,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 14733,
											"end": 14762,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 14733,
											"end": 14762,
											"name": "tag",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 14733,
											"end": 14762,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14728,
											"end": 14731,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14724,
											"end": 14763,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14717,
											"end": 14763,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14717,
											"end": 14763,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14509,
											"end": 14769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14509,
											"end": 14769,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14509,
											"end": 14769,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14509,
											"end": 14769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14509,
											"end": 14769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14509,
											"end": 14769,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 14775,
											"end": 15135,
											"name": "tag",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 14775,
											"end": 15135,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14775,
											"end": 15135,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14889,
											"end": 14927,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "545"
										},
										{
											"begin": 14921,
											"end": 14926,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14889,
											"end": 14927,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 14889,
											"end": 14927,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 14889,
											"end": 14927,
											"name": "tag",
											"source": 15,
											"value": "545"
										},
										{
											"begin": 14889,
											"end": 14927,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14943,
											"end": 15013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 15006,
											"end": 15012,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15001,
											"end": 15004,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14943,
											"end": 15013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 14943,
											"end": 15013,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 14943,
											"end": 15013,
											"name": "tag",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 14943,
											"end": 15013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14936,
											"end": 15013,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 14936,
											"end": 15013,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15022,
											"end": 15074,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 15067,
											"end": 15073,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15062,
											"end": 15065,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15055,
											"end": 15059,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15048,
											"end": 15053,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 15044,
											"end": 15060,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15022,
											"end": 15074,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 15022,
											"end": 15074,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 15022,
											"end": 15074,
											"name": "tag",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 15022,
											"end": 15074,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15099,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "549"
										},
										{
											"begin": 15121,
											"end": 15127,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15099,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 15099,
											"end": 15128,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 15099,
											"end": 15128,
											"name": "tag",
											"source": 15,
											"value": "549"
										},
										{
											"begin": 15099,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15094,
											"end": 15097,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15090,
											"end": 15129,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15083,
											"end": 15129,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15083,
											"end": 15129,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14865,
											"end": 15135,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14865,
											"end": 15135,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14865,
											"end": 15135,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14865,
											"end": 15135,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14865,
											"end": 15135,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14865,
											"end": 15135,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 15141,
											"end": 15514,
											"name": "tag",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 15141,
											"end": 15514,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15141,
											"end": 15514,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15273,
											"end": 15311,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 15305,
											"end": 15310,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15273,
											"end": 15311,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 15273,
											"end": 15311,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 15273,
											"end": 15311,
											"name": "tag",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 15273,
											"end": 15311,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15327,
											"end": 15415,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 15408,
											"end": 15414,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15403,
											"end": 15406,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15327,
											"end": 15415,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 15327,
											"end": 15415,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 15327,
											"end": 15415,
											"name": "tag",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 15327,
											"end": 15415,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15320,
											"end": 15415,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 15320,
											"end": 15415,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15424,
											"end": 15476,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 15469,
											"end": 15475,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15464,
											"end": 15467,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15457,
											"end": 15461,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15450,
											"end": 15455,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 15446,
											"end": 15462,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15424,
											"end": 15476,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 15424,
											"end": 15476,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 15424,
											"end": 15476,
											"name": "tag",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 15424,
											"end": 15476,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15501,
											"end": 15507,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15496,
											"end": 15499,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15492,
											"end": 15508,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15485,
											"end": 15508,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15485,
											"end": 15508,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15249,
											"end": 15514,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15249,
											"end": 15514,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15249,
											"end": 15514,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15249,
											"end": 15514,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15249,
											"end": 15514,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15249,
											"end": 15514,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 15520,
											"end": 15669,
											"name": "tag",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 15520,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15611,
											"end": 15662,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 15656,
											"end": 15661,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15611,
											"end": 15662,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 15611,
											"end": 15662,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 15611,
											"end": 15662,
											"name": "tag",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 15611,
											"end": 15662,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15606,
											"end": 15609,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15599,
											"end": 15663,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15589,
											"end": 15669,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15589,
											"end": 15669,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15589,
											"end": 15669,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 15675,
											"end": 15828,
											"name": "tag",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 15675,
											"end": 15828,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15773,
											"end": 15821,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 15815,
											"end": 15820,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15773,
											"end": 15821,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 15773,
											"end": 15821,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 15773,
											"end": 15821,
											"name": "tag",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 15773,
											"end": 15821,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15768,
											"end": 15771,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15761,
											"end": 15822,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15751,
											"end": 15828,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15751,
											"end": 15828,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15751,
											"end": 15828,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 15834,
											"end": 15939,
											"name": "tag",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 15834,
											"end": 15939,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15909,
											"end": 15932,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 15926,
											"end": 15931,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15909,
											"end": 15932,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 15909,
											"end": 15932,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 15909,
											"end": 15932,
											"name": "tag",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 15909,
											"end": 15932,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15904,
											"end": 15907,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15897,
											"end": 15933,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15887,
											"end": 15939,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15887,
											"end": 15939,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15887,
											"end": 15939,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 15945,
											"end": 16309,
											"name": "tag",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 15945,
											"end": 16309,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15945,
											"end": 16309,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16061,
											"end": 16100,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 16094,
											"end": 16099,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16061,
											"end": 16100,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 16061,
											"end": 16100,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 16061,
											"end": 16100,
											"name": "tag",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 16061,
											"end": 16100,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16116,
											"end": 16187,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 16180,
											"end": 16186,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16175,
											"end": 16178,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16116,
											"end": 16187,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 16116,
											"end": 16187,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 16116,
											"end": 16187,
											"name": "tag",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 16116,
											"end": 16187,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16109,
											"end": 16187,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 16109,
											"end": 16187,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16196,
											"end": 16248,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "572"
										},
										{
											"begin": 16241,
											"end": 16247,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16236,
											"end": 16239,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16229,
											"end": 16233,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16222,
											"end": 16227,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16218,
											"end": 16234,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16196,
											"end": 16248,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 16196,
											"end": 16248,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 16196,
											"end": 16248,
											"name": "tag",
											"source": 15,
											"value": "572"
										},
										{
											"begin": 16196,
											"end": 16248,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16273,
											"end": 16302,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 16295,
											"end": 16301,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16273,
											"end": 16302,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 16273,
											"end": 16302,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 16273,
											"end": 16302,
											"name": "tag",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 16273,
											"end": 16302,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16268,
											"end": 16271,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16264,
											"end": 16303,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16257,
											"end": 16303,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16257,
											"end": 16303,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16037,
											"end": 16309,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16037,
											"end": 16309,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16037,
											"end": 16309,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16037,
											"end": 16309,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16037,
											"end": 16309,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16037,
											"end": 16309,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 16315,
											"end": 16696,
											"name": "tag",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 16315,
											"end": 16696,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16315,
											"end": 16696,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16478,
											"end": 16545,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 16542,
											"end": 16544,
											"name": "PUSH",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 16537,
											"end": 16540,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16478,
											"end": 16545,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 16478,
											"end": 16545,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 16478,
											"end": 16545,
											"name": "tag",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 16478,
											"end": 16545,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16471,
											"end": 16545,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16471,
											"end": 16545,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16575,
											"end": 16609,
											"name": "PUSH",
											"source": 15,
											"value": "5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472"
										},
										{
											"begin": 16571,
											"end": 16572,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16566,
											"end": 16569,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16562,
											"end": 16573,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16555,
											"end": 16610,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16641,
											"end": 16660,
											"name": "PUSH",
											"source": 15,
											"value": "616E7366657246726F6D206661696C6564000000000000000000000000000000"
										},
										{
											"begin": 16636,
											"end": 16638,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16631,
											"end": 16634,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16627,
											"end": 16639,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16620,
											"end": 16661,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16687,
											"end": 16689,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16682,
											"end": 16685,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16678,
											"end": 16690,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16671,
											"end": 16690,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16671,
											"end": 16690,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16461,
											"end": 16696,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16461,
											"end": 16696,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16461,
											"end": 16696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16461,
											"end": 16696,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 16702,
											"end": 17086,
											"name": "tag",
											"source": 15,
											"value": "577"
										},
										{
											"begin": 16702,
											"end": 17086,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16702,
											"end": 17086,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16865,
											"end": 16932,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "579"
										},
										{
											"begin": 16929,
											"end": 16931,
											"name": "PUSH",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 16924,
											"end": 16927,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16865,
											"end": 16932,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 16865,
											"end": 16932,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 16865,
											"end": 16932,
											"name": "tag",
											"source": 15,
											"value": "579"
										},
										{
											"begin": 16865,
											"end": 16932,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16858,
											"end": 16932,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16858,
											"end": 16932,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16962,
											"end": 16996,
											"name": "PUSH",
											"source": 15,
											"value": "5472616E7366657248656C7065723A3A736166655472616E736665724554483A"
										},
										{
											"begin": 16958,
											"end": 16959,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16953,
											"end": 16956,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16949,
											"end": 16960,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16942,
											"end": 16997,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17028,
											"end": 17050,
											"name": "PUSH",
											"source": 15,
											"value": "20455448207472616E73666572206661696C6564000000000000000000000000"
										},
										{
											"begin": 17023,
											"end": 17025,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17018,
											"end": 17021,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17014,
											"end": 17026,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17007,
											"end": 17051,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17077,
											"end": 17079,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17075,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17068,
											"end": 17080,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17061,
											"end": 17080,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17061,
											"end": 17080,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16848,
											"end": 17086,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16848,
											"end": 17086,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16848,
											"end": 17086,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16848,
											"end": 17086,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 17092,
											"end": 17457,
											"name": "tag",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 17092,
											"end": 17457,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17092,
											"end": 17457,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17255,
											"end": 17322,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "582"
										},
										{
											"begin": 17319,
											"end": 17321,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 17314,
											"end": 17317,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17255,
											"end": 17322,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 17255,
											"end": 17322,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 17255,
											"end": 17322,
											"name": "tag",
											"source": 15,
											"value": "582"
										},
										{
											"begin": 17255,
											"end": 17322,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17248,
											"end": 17322,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17248,
											"end": 17322,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17352,
											"end": 17386,
											"name": "PUSH",
											"source": 15,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 17348,
											"end": 17349,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17343,
											"end": 17346,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17339,
											"end": 17350,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17332,
											"end": 17387,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17418,
											"end": 17421,
											"name": "PUSH",
											"source": 15,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17413,
											"end": 17415,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17408,
											"end": 17411,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17404,
											"end": 17416,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17397,
											"end": 17422,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17448,
											"end": 17450,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 17443,
											"end": 17446,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17439,
											"end": 17451,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17432,
											"end": 17451,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17432,
											"end": 17451,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17238,
											"end": 17457,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17238,
											"end": 17457,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17238,
											"end": 17457,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17238,
											"end": 17457,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 17463,
											"end": 17788,
											"name": "tag",
											"source": 15,
											"value": "583"
										},
										{
											"begin": 17463,
											"end": 17788,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17463,
											"end": 17788,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17626,
											"end": 17693,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "585"
										},
										{
											"begin": 17690,
											"end": 17692,
											"name": "PUSH",
											"source": 15,
											"value": "1B"
										},
										{
											"begin": 17685,
											"end": 17688,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17626,
											"end": 17693,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 17626,
											"end": 17693,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 17626,
											"end": 17693,
											"name": "tag",
											"source": 15,
											"value": "585"
										},
										{
											"begin": 17626,
											"end": 17693,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17619,
											"end": 17693,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17619,
											"end": 17693,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17723,
											"end": 17752,
											"name": "PUSH",
											"source": 15,
											"value": "426172746572737761705632526F757465723A20455850495245440000000000"
										},
										{
											"begin": 17719,
											"end": 17720,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17714,
											"end": 17717,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17710,
											"end": 17721,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17703,
											"end": 17753,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17779,
											"end": 17781,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17774,
											"end": 17777,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17770,
											"end": 17782,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17763,
											"end": 17782,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17763,
											"end": 17782,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17609,
											"end": 17788,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17609,
											"end": 17788,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17609,
											"end": 17788,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17609,
											"end": 17788,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 17794,
											"end": 18171,
											"name": "tag",
											"source": 15,
											"value": "586"
										},
										{
											"begin": 17794,
											"end": 18171,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17794,
											"end": 18171,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17957,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "588"
										},
										{
											"begin": 18021,
											"end": 18023,
											"name": "PUSH",
											"source": 15,
											"value": "2D"
										},
										{
											"begin": 18016,
											"end": 18019,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17957,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 17957,
											"end": 18024,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 17957,
											"end": 18024,
											"name": "tag",
											"source": 15,
											"value": "588"
										},
										{
											"begin": 17957,
											"end": 18024,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17950,
											"end": 18024,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17950,
											"end": 18024,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18054,
											"end": 18088,
											"name": "PUSH",
											"source": 15,
											"value": "5472616E7366657248656C7065723A3A736166655472616E736665723A207472"
										},
										{
											"begin": 18050,
											"end": 18051,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18045,
											"end": 18048,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18041,
											"end": 18052,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18034,
											"end": 18089,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18120,
											"end": 18135,
											"name": "PUSH",
											"source": 15,
											"value": "616E73666572206661696C656400000000000000000000000000000000000000"
										},
										{
											"begin": 18115,
											"end": 18117,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18110,
											"end": 18113,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18106,
											"end": 18118,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18099,
											"end": 18136,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18162,
											"end": 18164,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 18157,
											"end": 18160,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18153,
											"end": 18165,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18146,
											"end": 18165,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18146,
											"end": 18165,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17940,
											"end": 18171,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17940,
											"end": 18171,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17940,
											"end": 18171,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17940,
											"end": 18171,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 18177,
											"end": 18496,
											"name": "tag",
											"source": 15,
											"value": "589"
										},
										{
											"begin": 18177,
											"end": 18496,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18177,
											"end": 18496,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18340,
											"end": 18407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 18404,
											"end": 18406,
											"name": "PUSH",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 18399,
											"end": 18402,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18340,
											"end": 18407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 18340,
											"end": 18407,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 18340,
											"end": 18407,
											"name": "tag",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 18340,
											"end": 18407,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18333,
											"end": 18407,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18333,
											"end": 18407,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18437,
											"end": 18460,
											"name": "PUSH",
											"source": 15,
											"value": "426172746572737761703A20464F5242494444454E0000000000000000000000"
										},
										{
											"begin": 18433,
											"end": 18434,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18428,
											"end": 18431,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18424,
											"end": 18435,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18417,
											"end": 18461,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18487,
											"end": 18489,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18482,
											"end": 18485,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18478,
											"end": 18490,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18471,
											"end": 18490,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18471,
											"end": 18490,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18323,
											"end": 18496,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18323,
											"end": 18496,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18323,
											"end": 18496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18323,
											"end": 18496,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 18502,
											"end": 18814,
											"name": "tag",
											"source": 15,
											"value": "592"
										},
										{
											"begin": 18502,
											"end": 18814,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18502,
											"end": 18814,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18665,
											"end": 18732,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "594"
										},
										{
											"begin": 18729,
											"end": 18731,
											"name": "PUSH",
											"source": 15,
											"value": "E"
										},
										{
											"begin": 18724,
											"end": 18727,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18665,
											"end": 18732,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 18665,
											"end": 18732,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 18665,
											"end": 18732,
											"name": "tag",
											"source": 15,
											"value": "594"
										},
										{
											"begin": 18665,
											"end": 18732,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18658,
											"end": 18732,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18658,
											"end": 18732,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18762,
											"end": 18778,
											"name": "PUSH",
											"source": 15,
											"value": "50726963652069732077726F6E67000000000000000000000000000000000000"
										},
										{
											"begin": 18758,
											"end": 18759,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18753,
											"end": 18756,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18749,
											"end": 18760,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18742,
											"end": 18779,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18805,
											"end": 18807,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18800,
											"end": 18803,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18796,
											"end": 18808,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18789,
											"end": 18808,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18789,
											"end": 18808,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18648,
											"end": 18814,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18648,
											"end": 18814,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18648,
											"end": 18814,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18648,
											"end": 18814,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 18886,
											"end": 20039,
											"name": "tag",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 18886,
											"end": 20039,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18886,
											"end": 20039,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19043,
											"end": 19047,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 19038,
											"end": 19041,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19034,
											"end": 19048,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19132,
											"end": 19136,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19125,
											"end": 19130,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19121,
											"end": 19137,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19115,
											"end": 19138,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 19151,
											"end": 19214,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "596"
										},
										{
											"begin": 19208,
											"end": 19212,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19203,
											"end": 19206,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19199,
											"end": 19213,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19185,
											"end": 19197,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19151,
											"end": 19214,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 19151,
											"end": 19214,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 19151,
											"end": 19214,
											"name": "tag",
											"source": 15,
											"value": "596"
										},
										{
											"begin": 19151,
											"end": 19214,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19058,
											"end": 19224,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19314,
											"end": 19318,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19307,
											"end": 19312,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19303,
											"end": 19319,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19297,
											"end": 19320,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 19333,
											"end": 19396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "597"
										},
										{
											"begin": 19390,
											"end": 19394,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19385,
											"end": 19388,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19381,
											"end": 19395,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19367,
											"end": 19379,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19333,
											"end": 19396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 19333,
											"end": 19396,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 19333,
											"end": 19396,
											"name": "tag",
											"source": 15,
											"value": "597"
										},
										{
											"begin": 19333,
											"end": 19396,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19234,
											"end": 19406,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19497,
											"end": 19501,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 19490,
											"end": 19495,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19486,
											"end": 19502,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19480,
											"end": 19503,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 19516,
											"end": 19579,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "598"
										},
										{
											"begin": 19573,
											"end": 19577,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 19568,
											"end": 19571,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19564,
											"end": 19578,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19550,
											"end": 19562,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19516,
											"end": 19579,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 19516,
											"end": 19579,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 19516,
											"end": 19579,
											"name": "tag",
											"source": 15,
											"value": "598"
										},
										{
											"begin": 19516,
											"end": 19579,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19416,
											"end": 19589,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19673,
											"end": 19677,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 19666,
											"end": 19671,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19662,
											"end": 19678,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19656,
											"end": 19679,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 19692,
											"end": 19755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "599"
										},
										{
											"begin": 19749,
											"end": 19753,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 19744,
											"end": 19747,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19740,
											"end": 19754,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19726,
											"end": 19738,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19692,
											"end": 19755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 19692,
											"end": 19755,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 19692,
											"end": 19755,
											"name": "tag",
											"source": 15,
											"value": "599"
										},
										{
											"begin": 19692,
											"end": 19755,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19599,
											"end": 19765,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19851,
											"end": 19855,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 19844,
											"end": 19849,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19840,
											"end": 19856,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19834,
											"end": 19857,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 19904,
											"end": 19907,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 19898,
											"end": 19902,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19894,
											"end": 19908,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 19887,
											"end": 19891,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 19882,
											"end": 19885,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19878,
											"end": 19892,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19871,
											"end": 19909,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19930,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "600"
										},
										{
											"begin": 19996,
											"end": 20000,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19982,
											"end": 19994,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19930,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 19930,
											"end": 20001,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 19930,
											"end": 20001,
											"name": "tag",
											"source": 15,
											"value": "600"
										},
										{
											"begin": 19930,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19922,
											"end": 20001,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19922,
											"end": 20001,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19775,
											"end": 20012,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20029,
											"end": 20033,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 20022,
											"end": 20033,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20022,
											"end": 20033,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19012,
											"end": 20039,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19012,
											"end": 20039,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19012,
											"end": 20039,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19012,
											"end": 20039,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19012,
											"end": 20039,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19012,
											"end": 20039,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 20113,
											"end": 21021,
											"name": "tag",
											"source": 15,
											"value": "601"
										},
										{
											"begin": 20113,
											"end": 21021,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20274,
											"end": 20278,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 20269,
											"end": 20272,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20265,
											"end": 20279,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20363,
											"end": 20367,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20356,
											"end": 20361,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20352,
											"end": 20368,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20346,
											"end": 20369,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 20382,
											"end": 20445,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "603"
										},
										{
											"begin": 20439,
											"end": 20443,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20434,
											"end": 20437,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 20430,
											"end": 20444,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20416,
											"end": 20428,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20382,
											"end": 20445,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 20382,
											"end": 20445,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 20382,
											"end": 20445,
											"name": "tag",
											"source": 15,
											"value": "603"
										},
										{
											"begin": 20382,
											"end": 20445,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20289,
											"end": 20455,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20552,
											"end": 20556,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20545,
											"end": 20550,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20541,
											"end": 20557,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20535,
											"end": 20558,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 20571,
											"end": 20628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 20622,
											"end": 20626,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20617,
											"end": 20620,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 20613,
											"end": 20627,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20599,
											"end": 20611,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20571,
											"end": 20628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 20571,
											"end": 20628,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 20571,
											"end": 20628,
											"name": "tag",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 20571,
											"end": 20628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20465,
											"end": 20638,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20725,
											"end": 20729,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 20718,
											"end": 20723,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20714,
											"end": 20730,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20708,
											"end": 20731,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 20744,
											"end": 20823,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "605"
										},
										{
											"begin": 20817,
											"end": 20821,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 20812,
											"end": 20815,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 20808,
											"end": 20822,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20794,
											"end": 20806,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20744,
											"end": 20823,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 20744,
											"end": 20823,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 20744,
											"end": 20823,
											"name": "tag",
											"source": 15,
											"value": "605"
										},
										{
											"begin": 20744,
											"end": 20823,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20648,
											"end": 20833,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20928,
											"end": 20932,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 20921,
											"end": 20926,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20917,
											"end": 20933,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20911,
											"end": 20934,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 20947,
											"end": 21004,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 20998,
											"end": 21002,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 20993,
											"end": 20996,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 20989,
											"end": 21003,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20975,
											"end": 20987,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20947,
											"end": 21004,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 20947,
											"end": 21004,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 20947,
											"end": 21004,
											"name": "tag",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 20947,
											"end": 21004,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20843,
											"end": 21014,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20243,
											"end": 21021,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20243,
											"end": 21021,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20243,
											"end": 21021,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20243,
											"end": 21021,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 21027,
											"end": 21135,
											"name": "tag",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 21027,
											"end": 21135,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21104,
											"end": 21128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "608"
										},
										{
											"begin": 21122,
											"end": 21127,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21104,
											"end": 21128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 21104,
											"end": 21128,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 21104,
											"end": 21128,
											"name": "tag",
											"source": 15,
											"value": "608"
										},
										{
											"begin": 21104,
											"end": 21128,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21099,
											"end": 21102,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21092,
											"end": 21129,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21082,
											"end": 21135,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21082,
											"end": 21135,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21082,
											"end": 21135,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 21141,
											"end": 21259,
											"name": "tag",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 21141,
											"end": 21259,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21228,
											"end": 21252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "612"
										},
										{
											"begin": 21246,
											"end": 21251,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21228,
											"end": 21252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 21228,
											"end": 21252,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 21228,
											"end": 21252,
											"name": "tag",
											"source": 15,
											"value": "612"
										},
										{
											"begin": 21228,
											"end": 21252,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21223,
											"end": 21226,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21216,
											"end": 21253,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21206,
											"end": 21259,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21206,
											"end": 21259,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21206,
											"end": 21259,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 21265,
											"end": 21536,
											"name": "tag",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 21265,
											"end": 21536,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21265,
											"end": 21536,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21417,
											"end": 21510,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "614"
										},
										{
											"begin": 21506,
											"end": 21509,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21497,
											"end": 21503,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 21417,
											"end": 21510,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 21417,
											"end": 21510,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 21417,
											"end": 21510,
											"name": "tag",
											"source": 15,
											"value": "614"
										},
										{
											"begin": 21417,
											"end": 21510,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21410,
											"end": 21510,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21410,
											"end": 21510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21527,
											"end": 21530,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21520,
											"end": 21530,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21520,
											"end": 21530,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21399,
											"end": 21536,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21399,
											"end": 21536,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21399,
											"end": 21536,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21399,
											"end": 21536,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21399,
											"end": 21536,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 21542,
											"end": 21764,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 21542,
											"end": 21764,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21542,
											"end": 21764,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21673,
											"end": 21675,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21662,
											"end": 21671,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21658,
											"end": 21676,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21650,
											"end": 21676,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21650,
											"end": 21676,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21686,
											"end": 21757,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "616"
										},
										{
											"begin": 21754,
											"end": 21755,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21743,
											"end": 21752,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21739,
											"end": 21756,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21730,
											"end": 21736,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 21686,
											"end": 21757,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 21686,
											"end": 21757,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 21686,
											"end": 21757,
											"name": "tag",
											"source": 15,
											"value": "616"
										},
										{
											"begin": 21686,
											"end": 21757,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21640,
											"end": 21764,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21640,
											"end": 21764,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21640,
											"end": 21764,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21640,
											"end": 21764,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21640,
											"end": 21764,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 21770,
											"end": 22024,
											"name": "tag",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 21770,
											"end": 22024,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21770,
											"end": 22024,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21917,
											"end": 21919,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21906,
											"end": 21915,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21902,
											"end": 21920,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21894,
											"end": 21920,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21894,
											"end": 21920,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21930,
											"end": 22017,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "618"
										},
										{
											"begin": 22014,
											"end": 22015,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22003,
											"end": 22012,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21999,
											"end": 22016,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21990,
											"end": 21996,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 21930,
											"end": 22017,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "456"
										},
										{
											"begin": 21930,
											"end": 22017,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 21930,
											"end": 22017,
											"name": "tag",
											"source": 15,
											"value": "618"
										},
										{
											"begin": 21930,
											"end": 22017,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21884,
											"end": 22024,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21884,
											"end": 22024,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21884,
											"end": 22024,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21884,
											"end": 22024,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21884,
											"end": 22024,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 22030,
											"end": 22623,
											"name": "tag",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 22030,
											"end": 22623,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22030,
											"end": 22623,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22267,
											"end": 22269,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 22256,
											"end": 22265,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22252,
											"end": 22270,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22280,
											"end": 22351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "620"
										},
										{
											"begin": 22348,
											"end": 22349,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22337,
											"end": 22346,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22333,
											"end": 22350,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22324,
											"end": 22330,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 22280,
											"end": 22351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 22280,
											"end": 22351,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 22280,
											"end": 22351,
											"name": "tag",
											"source": 15,
											"value": "620"
										},
										{
											"begin": 22280,
											"end": 22351,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22361,
											"end": 22433,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "621"
										},
										{
											"begin": 22429,
											"end": 22431,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22418,
											"end": 22427,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22414,
											"end": 22432,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22405,
											"end": 22411,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 22361,
											"end": 22433,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 22361,
											"end": 22433,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 22361,
											"end": 22433,
											"name": "tag",
											"source": 15,
											"value": "621"
										},
										{
											"begin": 22361,
											"end": 22433,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22480,
											"end": 22489,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22474,
											"end": 22478,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22470,
											"end": 22490,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 22465,
											"end": 22467,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 22454,
											"end": 22463,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22450,
											"end": 22468,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22443,
											"end": 22491,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22508,
											"end": 22616,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "622"
										},
										{
											"begin": 22611,
											"end": 22615,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22602,
											"end": 22608,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 22508,
											"end": 22616,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 22508,
											"end": 22616,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 22508,
											"end": 22616,
											"name": "tag",
											"source": 15,
											"value": "622"
										},
										{
											"begin": 22508,
											"end": 22616,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22500,
											"end": 22616,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22500,
											"end": 22616,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22234,
											"end": 22623,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 22234,
											"end": 22623,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 22234,
											"end": 22623,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22234,
											"end": 22623,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22234,
											"end": 22623,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22234,
											"end": 22623,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22234,
											"end": 22623,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 22629,
											"end": 23071,
											"name": "tag",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 22629,
											"end": 23071,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22629,
											"end": 23071,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22816,
											"end": 22818,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 22805,
											"end": 22814,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22801,
											"end": 22819,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22793,
											"end": 22819,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22793,
											"end": 22819,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22829,
											"end": 22900,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "624"
										},
										{
											"begin": 22897,
											"end": 22898,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22886,
											"end": 22895,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22882,
											"end": 22899,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22873,
											"end": 22879,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 22829,
											"end": 22900,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 22829,
											"end": 22900,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 22829,
											"end": 22900,
											"name": "tag",
											"source": 15,
											"value": "624"
										},
										{
											"begin": 22829,
											"end": 22900,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22910,
											"end": 22982,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "625"
										},
										{
											"begin": 22978,
											"end": 22980,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22967,
											"end": 22976,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22963,
											"end": 22981,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22954,
											"end": 22960,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 22910,
											"end": 22982,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 22910,
											"end": 22982,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 22910,
											"end": 22982,
											"name": "tag",
											"source": 15,
											"value": "625"
										},
										{
											"begin": 22910,
											"end": 22982,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22992,
											"end": 23064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "626"
										},
										{
											"begin": 23060,
											"end": 23062,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 23049,
											"end": 23058,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23045,
											"end": 23063,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23036,
											"end": 23042,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 22992,
											"end": 23064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 22992,
											"end": 23064,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 22992,
											"end": 23064,
											"name": "tag",
											"source": 15,
											"value": "626"
										},
										{
											"begin": 22992,
											"end": 23064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22783,
											"end": 23071,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 22783,
											"end": 23071,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 22783,
											"end": 23071,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22783,
											"end": 23071,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22783,
											"end": 23071,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22783,
											"end": 23071,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22783,
											"end": 23071,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 23077,
											"end": 23409,
											"name": "tag",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 23077,
											"end": 23409,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23077,
											"end": 23409,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23236,
											"end": 23238,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 23225,
											"end": 23234,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23221,
											"end": 23239,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23213,
											"end": 23239,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23213,
											"end": 23239,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23249,
											"end": 23320,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "628"
										},
										{
											"begin": 23317,
											"end": 23318,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23306,
											"end": 23315,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23302,
											"end": 23319,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23293,
											"end": 23299,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 23249,
											"end": 23320,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 23249,
											"end": 23320,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 23249,
											"end": 23320,
											"name": "tag",
											"source": 15,
											"value": "628"
										},
										{
											"begin": 23249,
											"end": 23320,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23330,
											"end": 23402,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "629"
										},
										{
											"begin": 23398,
											"end": 23400,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 23387,
											"end": 23396,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23383,
											"end": 23401,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23374,
											"end": 23380,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23330,
											"end": 23402,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 23330,
											"end": 23402,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 23330,
											"end": 23402,
											"name": "tag",
											"source": 15,
											"value": "629"
										},
										{
											"begin": 23330,
											"end": 23402,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23203,
											"end": 23409,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 23203,
											"end": 23409,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23203,
											"end": 23409,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23203,
											"end": 23409,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23203,
											"end": 23409,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23203,
											"end": 23409,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 23415,
											"end": 23625,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 23415,
											"end": 23625,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23415,
											"end": 23625,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23540,
											"end": 23542,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 23529,
											"end": 23538,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23525,
											"end": 23543,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23517,
											"end": 23543,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23517,
											"end": 23543,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23553,
											"end": 23618,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "631"
										},
										{
											"begin": 23615,
											"end": 23616,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23604,
											"end": 23613,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23600,
											"end": 23617,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23591,
											"end": 23597,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23553,
											"end": 23618,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 23553,
											"end": 23618,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 23553,
											"end": 23618,
											"name": "tag",
											"source": 15,
											"value": "631"
										},
										{
											"begin": 23553,
											"end": 23618,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23507,
											"end": 23625,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23507,
											"end": 23625,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23507,
											"end": 23625,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23507,
											"end": 23625,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23507,
											"end": 23625,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 23631,
											"end": 25158,
											"name": "tag",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 23631,
											"end": 25158,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23631,
											"end": 25158,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24201,
											"end": 24204,
											"name": "PUSH",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 24190,
											"end": 24199,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24186,
											"end": 24205,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24178,
											"end": 24205,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24178,
											"end": 24205,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24215,
											"end": 24297,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "633"
										},
										{
											"begin": 24294,
											"end": 24295,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24283,
											"end": 24292,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24279,
											"end": 24296,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24270,
											"end": 24276,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 24215,
											"end": 24297,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 24215,
											"end": 24297,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 24215,
											"end": 24297,
											"name": "tag",
											"source": 15,
											"value": "633"
										},
										{
											"begin": 24215,
											"end": 24297,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24344,
											"end": 24353,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24338,
											"end": 24342,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24334,
											"end": 24354,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 24329,
											"end": 24331,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 24318,
											"end": 24327,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24314,
											"end": 24332,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24307,
											"end": 24355,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24372,
											"end": 24542,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "634"
										},
										{
											"begin": 24537,
											"end": 24541,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24528,
											"end": 24534,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 24372,
											"end": 24542,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 24372,
											"end": 24542,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 24372,
											"end": 24542,
											"name": "tag",
											"source": 15,
											"value": "634"
										},
										{
											"begin": 24372,
											"end": 24542,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24364,
											"end": 24542,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24364,
											"end": 24542,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24552,
											"end": 24688,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "635"
										},
										{
											"begin": 24684,
											"end": 24686,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 24673,
											"end": 24682,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24669,
											"end": 24687,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24660,
											"end": 24666,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 24552,
											"end": 24688,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "601"
										},
										{
											"begin": 24552,
											"end": 24688,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 24552,
											"end": 24688,
											"name": "tag",
											"source": 15,
											"value": "635"
										},
										{
											"begin": 24552,
											"end": 24688,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24736,
											"end": 24745,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24730,
											"end": 24734,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24726,
											"end": 24746,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 24720,
											"end": 24723,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 24709,
											"end": 24718,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24705,
											"end": 24724,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24698,
											"end": 24747,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24764,
											"end": 24886,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "636"
										},
										{
											"begin": 24881,
											"end": 24885,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24872,
											"end": 24878,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 24764,
											"end": 24886,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 24764,
											"end": 24886,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 24764,
											"end": 24886,
											"name": "tag",
											"source": 15,
											"value": "636"
										},
										{
											"begin": 24764,
											"end": 24886,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24756,
											"end": 24886,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24756,
											"end": 24886,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24934,
											"end": 24943,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24928,
											"end": 24932,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24924,
											"end": 24944,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 24918,
											"end": 24921,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 24907,
											"end": 24916,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24903,
											"end": 24922,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24896,
											"end": 24945,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24962,
											"end": 25068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "637"
										},
										{
											"begin": 25063,
											"end": 25067,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25054,
											"end": 25060,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 24962,
											"end": 25068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 24962,
											"end": 25068,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 24962,
											"end": 25068,
											"name": "tag",
											"source": 15,
											"value": "637"
										},
										{
											"begin": 24962,
											"end": 25068,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24954,
											"end": 25068,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24954,
											"end": 25068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25078,
											"end": 25151,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "638"
										},
										{
											"begin": 25146,
											"end": 25149,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 25135,
											"end": 25144,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25131,
											"end": 25150,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25122,
											"end": 25128,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 25078,
											"end": 25151,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 25078,
											"end": 25151,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 25078,
											"end": 25151,
											"name": "tag",
											"source": 15,
											"value": "638"
										},
										{
											"begin": 25078,
											"end": 25151,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24168,
											"end": 25158,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 24168,
											"end": 25158,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 24168,
											"end": 25158,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24168,
											"end": 25158,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24168,
											"end": 25158,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24168,
											"end": 25158,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24168,
											"end": 25158,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24168,
											"end": 25158,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24168,
											"end": 25158,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24168,
											"end": 25158,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 25164,
											"end": 25477,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 25164,
											"end": 25477,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25164,
											"end": 25477,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25315,
											"end": 25317,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 25304,
											"end": 25313,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25300,
											"end": 25318,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25292,
											"end": 25318,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25292,
											"end": 25318,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25364,
											"end": 25373,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25358,
											"end": 25362,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25354,
											"end": 25374,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 25350,
											"end": 25351,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25339,
											"end": 25348,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25335,
											"end": 25352,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25328,
											"end": 25375,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 25392,
											"end": 25470,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "640"
										},
										{
											"begin": 25465,
											"end": 25469,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25456,
											"end": 25462,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 25392,
											"end": 25470,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 25392,
											"end": 25470,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 25392,
											"end": 25470,
											"name": "tag",
											"source": 15,
											"value": "640"
										},
										{
											"begin": 25392,
											"end": 25470,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25384,
											"end": 25470,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25384,
											"end": 25470,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25282,
											"end": 25477,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 25282,
											"end": 25477,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25282,
											"end": 25477,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25282,
											"end": 25477,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25282,
											"end": 25477,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 25483,
											"end": 25902,
											"name": "tag",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 25483,
											"end": 25902,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25483,
											"end": 25902,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25687,
											"end": 25689,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 25676,
											"end": 25685,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25672,
											"end": 25690,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25664,
											"end": 25690,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25664,
											"end": 25690,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25736,
											"end": 25745,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25730,
											"end": 25734,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25726,
											"end": 25746,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 25722,
											"end": 25723,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25711,
											"end": 25720,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25707,
											"end": 25724,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25700,
											"end": 25747,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 25764,
											"end": 25895,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "642"
										},
										{
											"begin": 25890,
											"end": 25894,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25764,
											"end": 25895,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 25764,
											"end": 25895,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 25764,
											"end": 25895,
											"name": "tag",
											"source": 15,
											"value": "642"
										},
										{
											"begin": 25764,
											"end": 25895,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25756,
											"end": 25895,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25756,
											"end": 25895,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25654,
											"end": 25902,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25654,
											"end": 25902,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25654,
											"end": 25902,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25654,
											"end": 25902,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 25908,
											"end": 26327,
											"name": "tag",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 25908,
											"end": 26327,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25908,
											"end": 26327,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26112,
											"end": 26114,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26101,
											"end": 26110,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26097,
											"end": 26115,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26089,
											"end": 26115,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26089,
											"end": 26115,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26161,
											"end": 26170,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26155,
											"end": 26159,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26151,
											"end": 26171,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 26147,
											"end": 26148,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26136,
											"end": 26145,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26132,
											"end": 26149,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26125,
											"end": 26172,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 26189,
											"end": 26320,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "644"
										},
										{
											"begin": 26315,
											"end": 26319,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26189,
											"end": 26320,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "577"
										},
										{
											"begin": 26189,
											"end": 26320,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 26189,
											"end": 26320,
											"name": "tag",
											"source": 15,
											"value": "644"
										},
										{
											"begin": 26189,
											"end": 26320,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26181,
											"end": 26320,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26181,
											"end": 26320,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26079,
											"end": 26327,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26079,
											"end": 26327,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26079,
											"end": 26327,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26079,
											"end": 26327,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 26333,
											"end": 26752,
											"name": "tag",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 26333,
											"end": 26752,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26333,
											"end": 26752,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26537,
											"end": 26539,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26526,
											"end": 26535,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26522,
											"end": 26540,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26514,
											"end": 26540,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26514,
											"end": 26540,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26586,
											"end": 26595,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26580,
											"end": 26584,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26576,
											"end": 26596,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 26572,
											"end": 26573,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26561,
											"end": 26570,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26557,
											"end": 26574,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26550,
											"end": 26597,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 26614,
											"end": 26745,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "646"
										},
										{
											"begin": 26740,
											"end": 26744,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26614,
											"end": 26745,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 26614,
											"end": 26745,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 26614,
											"end": 26745,
											"name": "tag",
											"source": 15,
											"value": "646"
										},
										{
											"begin": 26614,
											"end": 26745,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26606,
											"end": 26745,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26606,
											"end": 26745,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26504,
											"end": 26752,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26504,
											"end": 26752,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26504,
											"end": 26752,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26504,
											"end": 26752,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 26758,
											"end": 27177,
											"name": "tag",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 26758,
											"end": 27177,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26758,
											"end": 27177,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26962,
											"end": 26964,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26951,
											"end": 26960,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26947,
											"end": 26965,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26939,
											"end": 26965,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26939,
											"end": 26965,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27011,
											"end": 27020,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27005,
											"end": 27009,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27001,
											"end": 27021,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 26997,
											"end": 26998,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26986,
											"end": 26995,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26982,
											"end": 26999,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26975,
											"end": 27022,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 27039,
											"end": 27170,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "648"
										},
										{
											"begin": 27165,
											"end": 27169,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27039,
											"end": 27170,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "583"
										},
										{
											"begin": 27039,
											"end": 27170,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 27039,
											"end": 27170,
											"name": "tag",
											"source": 15,
											"value": "648"
										},
										{
											"begin": 27039,
											"end": 27170,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27031,
											"end": 27170,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27031,
											"end": 27170,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26929,
											"end": 27177,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26929,
											"end": 27177,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26929,
											"end": 27177,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26929,
											"end": 27177,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 27183,
											"end": 27602,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 27183,
											"end": 27602,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27183,
											"end": 27602,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27387,
											"end": 27389,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 27376,
											"end": 27385,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27372,
											"end": 27390,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27364,
											"end": 27390,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27364,
											"end": 27390,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27436,
											"end": 27445,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27430,
											"end": 27434,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27426,
											"end": 27446,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 27422,
											"end": 27423,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27411,
											"end": 27420,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27407,
											"end": 27424,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27400,
											"end": 27447,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 27464,
											"end": 27595,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "650"
										},
										{
											"begin": 27590,
											"end": 27594,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27464,
											"end": 27595,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "586"
										},
										{
											"begin": 27464,
											"end": 27595,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 27464,
											"end": 27595,
											"name": "tag",
											"source": 15,
											"value": "650"
										},
										{
											"begin": 27464,
											"end": 27595,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27456,
											"end": 27595,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27456,
											"end": 27595,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27354,
											"end": 27602,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27354,
											"end": 27602,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27354,
											"end": 27602,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27354,
											"end": 27602,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 27608,
											"end": 28027,
											"name": "tag",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 27608,
											"end": 28027,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27608,
											"end": 28027,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27812,
											"end": 27814,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 27801,
											"end": 27810,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27797,
											"end": 27815,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27789,
											"end": 27815,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27789,
											"end": 27815,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27861,
											"end": 27870,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27855,
											"end": 27859,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27851,
											"end": 27871,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 27847,
											"end": 27848,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27836,
											"end": 27845,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27832,
											"end": 27849,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27825,
											"end": 27872,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 27889,
											"end": 28020,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "652"
										},
										{
											"begin": 28015,
											"end": 28019,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27889,
											"end": 28020,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "589"
										},
										{
											"begin": 27889,
											"end": 28020,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 27889,
											"end": 28020,
											"name": "tag",
											"source": 15,
											"value": "652"
										},
										{
											"begin": 27889,
											"end": 28020,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27881,
											"end": 28020,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27881,
											"end": 28020,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27779,
											"end": 28027,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27779,
											"end": 28027,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27779,
											"end": 28027,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27779,
											"end": 28027,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 28033,
											"end": 28452,
											"name": "tag",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 28033,
											"end": 28452,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28033,
											"end": 28452,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28237,
											"end": 28239,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 28226,
											"end": 28235,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28222,
											"end": 28240,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28214,
											"end": 28240,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28214,
											"end": 28240,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28286,
											"end": 28295,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28280,
											"end": 28284,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28276,
											"end": 28296,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 28272,
											"end": 28273,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28261,
											"end": 28270,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28257,
											"end": 28274,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28250,
											"end": 28297,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 28314,
											"end": 28445,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "654"
										},
										{
											"begin": 28440,
											"end": 28444,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28314,
											"end": 28445,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "592"
										},
										{
											"begin": 28314,
											"end": 28445,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 28314,
											"end": 28445,
											"name": "tag",
											"source": 15,
											"value": "654"
										},
										{
											"begin": 28314,
											"end": 28445,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28306,
											"end": 28445,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28306,
											"end": 28445,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28204,
											"end": 28452,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28204,
											"end": 28452,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28204,
											"end": 28452,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28204,
											"end": 28452,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 28458,
											"end": 28680,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 28458,
											"end": 28680,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28458,
											"end": 28680,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28589,
											"end": 28591,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 28578,
											"end": 28587,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28574,
											"end": 28592,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28566,
											"end": 28592,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28566,
											"end": 28592,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28602,
											"end": 28673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "656"
										},
										{
											"begin": 28670,
											"end": 28671,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28659,
											"end": 28668,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28655,
											"end": 28672,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28646,
											"end": 28652,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 28602,
											"end": 28673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 28602,
											"end": 28673,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 28602,
											"end": 28673,
											"name": "tag",
											"source": 15,
											"value": "656"
										},
										{
											"begin": 28602,
											"end": 28673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28556,
											"end": 28680,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 28556,
											"end": 28680,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28556,
											"end": 28680,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28556,
											"end": 28680,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28556,
											"end": 28680,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 28686,
											"end": 29659,
											"name": "tag",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 28686,
											"end": 29659,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28686,
											"end": 29659,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29003,
											"end": 29006,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 28992,
											"end": 29001,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28988,
											"end": 29007,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28980,
											"end": 29007,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28980,
											"end": 29007,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29017,
											"end": 29088,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "658"
										},
										{
											"begin": 29085,
											"end": 29086,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29074,
											"end": 29083,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29070,
											"end": 29087,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29061,
											"end": 29067,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 29017,
											"end": 29088,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 29017,
											"end": 29088,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 29017,
											"end": 29088,
											"name": "tag",
											"source": 15,
											"value": "658"
										},
										{
											"begin": 29017,
											"end": 29088,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29098,
											"end": 29170,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "659"
										},
										{
											"begin": 29166,
											"end": 29168,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 29155,
											"end": 29164,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29151,
											"end": 29169,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29142,
											"end": 29148,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 29098,
											"end": 29170,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 29098,
											"end": 29170,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 29098,
											"end": 29170,
											"name": "tag",
											"source": 15,
											"value": "659"
										},
										{
											"begin": 29098,
											"end": 29170,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29217,
											"end": 29226,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29211,
											"end": 29215,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29207,
											"end": 29227,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 29202,
											"end": 29204,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 29191,
											"end": 29200,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29187,
											"end": 29205,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29180,
											"end": 29228,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 29245,
											"end": 29321,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "660"
										},
										{
											"begin": 29316,
											"end": 29320,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29307,
											"end": 29313,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 29245,
											"end": 29321,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 29245,
											"end": 29321,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 29245,
											"end": 29321,
											"name": "tag",
											"source": 15,
											"value": "660"
										},
										{
											"begin": 29245,
											"end": 29321,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29237,
											"end": 29321,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29237,
											"end": 29321,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29331,
											"end": 29403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "661"
										},
										{
											"begin": 29399,
											"end": 29401,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 29388,
											"end": 29397,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29384,
											"end": 29402,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29375,
											"end": 29381,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 29331,
											"end": 29403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 29331,
											"end": 29403,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 29331,
											"end": 29403,
											"name": "tag",
											"source": 15,
											"value": "661"
										},
										{
											"begin": 29331,
											"end": 29403,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29413,
											"end": 29486,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "662"
										},
										{
											"begin": 29481,
											"end": 29484,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 29470,
											"end": 29479,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29466,
											"end": 29485,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29457,
											"end": 29463,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 29413,
											"end": 29486,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 29413,
											"end": 29486,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 29413,
											"end": 29486,
											"name": "tag",
											"source": 15,
											"value": "662"
										},
										{
											"begin": 29413,
											"end": 29486,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29496,
											"end": 29569,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "663"
										},
										{
											"begin": 29564,
											"end": 29567,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 29553,
											"end": 29562,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29549,
											"end": 29568,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29540,
											"end": 29546,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 29496,
											"end": 29569,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 29496,
											"end": 29569,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 29496,
											"end": 29569,
											"name": "tag",
											"source": 15,
											"value": "663"
										},
										{
											"begin": 29496,
											"end": 29569,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29579,
											"end": 29652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "664"
										},
										{
											"begin": 29647,
											"end": 29650,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 29636,
											"end": 29645,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29632,
											"end": 29651,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29623,
											"end": 29629,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 29579,
											"end": 29652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 29579,
											"end": 29652,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 29579,
											"end": 29652,
											"name": "tag",
											"source": 15,
											"value": "664"
										},
										{
											"begin": 29579,
											"end": 29652,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28970,
											"end": 29659,
											"name": "SWAP9",
											"source": 15
										},
										{
											"begin": 28970,
											"end": 29659,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 28970,
											"end": 29659,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28970,
											"end": 29659,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28970,
											"end": 29659,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28970,
											"end": 29659,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28970,
											"end": 29659,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28970,
											"end": 29659,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28970,
											"end": 29659,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28970,
											"end": 29659,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28970,
											"end": 29659,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 29665,
											"end": 30215,
											"name": "tag",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 29665,
											"end": 30215,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29665,
											"end": 30215,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29665,
											"end": 30215,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 29831,
											"end": 29842,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29818,
											"end": 29843,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 29931,
											"end": 29932,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 29925,
											"end": 29929,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 29921,
											"end": 29933,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 29910,
											"end": 29918,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 29894,
											"end": 29908,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 29890,
											"end": 29919,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 29886,
											"end": 29934,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 29866,
											"end": 29884,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29862,
											"end": 29935,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 29852,
											"end": 29854,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "666"
										},
										{
											"begin": 29852,
											"end": 29854,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 29949,
											"end": 29950,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29946,
											"end": 29947,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 29852,
											"end": 29854,
											"name": "tag",
											"source": 15,
											"value": "666"
										},
										{
											"begin": 29852,
											"end": 29854,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29984,
											"end": 30002,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 29974,
											"end": 29982,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 29970,
											"end": 30003,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29962,
											"end": 30003,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 29962,
											"end": 30003,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30036,
											"end": 30040,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30023,
											"end": 30041,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 30013,
											"end": 30041,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30013,
											"end": 30041,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30064,
											"end": 30082,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30056,
											"end": 30062,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30053,
											"end": 30083,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 30050,
											"end": 30052,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 30050,
											"end": 30052,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "667"
										},
										{
											"begin": 30050,
											"end": 30052,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 30096,
											"end": 30097,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30093,
											"end": 30094,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 30086,
											"end": 30098,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 30050,
											"end": 30052,
											"name": "tag",
											"source": 15,
											"value": "667"
										},
										{
											"begin": 30050,
											"end": 30052,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30127,
											"end": 30129,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 30121,
											"end": 30125,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30117,
											"end": 30130,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30109,
											"end": 30130,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 30109,
											"end": 30130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30184,
											"end": 30188,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 30176,
											"end": 30182,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30172,
											"end": 30189,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 30156,
											"end": 30170,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 30152,
											"end": 30190,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 30146,
											"end": 30150,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30142,
											"end": 30191,
											"name": "SGT",
											"source": 15
										},
										{
											"begin": 30139,
											"end": 30141,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 30139,
											"end": 30141,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "668"
										},
										{
											"begin": 30139,
											"end": 30141,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 30204,
											"end": 30205,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30201,
											"end": 30202,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 30194,
											"end": 30206,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 30139,
											"end": 30141,
											"name": "tag",
											"source": 15,
											"value": "668"
										},
										{
											"begin": 30139,
											"end": 30141,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29782,
											"end": 30215,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29782,
											"end": 30215,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 29782,
											"end": 30215,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29782,
											"end": 30215,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 29782,
											"end": 30215,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29782,
											"end": 30215,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29782,
											"end": 30215,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 30221,
											"end": 30774,
											"name": "tag",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 30221,
											"end": 30774,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30221,
											"end": 30774,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30221,
											"end": 30774,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 30390,
											"end": 30401,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30377,
											"end": 30402,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 30490,
											"end": 30491,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 30484,
											"end": 30488,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 30480,
											"end": 30492,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 30469,
											"end": 30477,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 30453,
											"end": 30467,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 30449,
											"end": 30478,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 30445,
											"end": 30493,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 30425,
											"end": 30443,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30421,
											"end": 30494,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 30411,
											"end": 30413,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "670"
										},
										{
											"begin": 30411,
											"end": 30413,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 30508,
											"end": 30509,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30505,
											"end": 30506,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 30498,
											"end": 30510,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 30411,
											"end": 30413,
											"name": "tag",
											"source": 15,
											"value": "670"
										},
										{
											"begin": 30411,
											"end": 30413,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30543,
											"end": 30561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 30533,
											"end": 30541,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 30529,
											"end": 30562,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30521,
											"end": 30562,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 30521,
											"end": 30562,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30595,
											"end": 30599,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30582,
											"end": 30600,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 30572,
											"end": 30600,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30572,
											"end": 30600,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30623,
											"end": 30641,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30615,
											"end": 30621,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30612,
											"end": 30642,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 30609,
											"end": 30611,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 30609,
											"end": 30611,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "671"
										},
										{
											"begin": 30609,
											"end": 30611,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 30655,
											"end": 30656,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30652,
											"end": 30653,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 30645,
											"end": 30657,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 30609,
											"end": 30611,
											"name": "tag",
											"source": 15,
											"value": "671"
										},
										{
											"begin": 30609,
											"end": 30611,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30686,
											"end": 30688,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 30680,
											"end": 30684,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30676,
											"end": 30689,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30668,
											"end": 30689,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 30668,
											"end": 30689,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30743,
											"end": 30747,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 30735,
											"end": 30741,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30731,
											"end": 30748,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 30715,
											"end": 30729,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 30711,
											"end": 30749,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 30705,
											"end": 30709,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30701,
											"end": 30750,
											"name": "SGT",
											"source": 15
										},
										{
											"begin": 30698,
											"end": 30700,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 30698,
											"end": 30700,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "672"
										},
										{
											"begin": 30698,
											"end": 30700,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 30763,
											"end": 30764,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30760,
											"end": 30761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 30753,
											"end": 30765,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 30698,
											"end": 30700,
											"name": "tag",
											"source": 15,
											"value": "672"
										},
										{
											"begin": 30698,
											"end": 30700,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30341,
											"end": 30774,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30341,
											"end": 30774,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 30341,
											"end": 30774,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30341,
											"end": 30774,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 30341,
											"end": 30774,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30341,
											"end": 30774,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30341,
											"end": 30774,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 30780,
											"end": 31318,
											"name": "tag",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 30780,
											"end": 31318,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30780,
											"end": 31318,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30780,
											"end": 31318,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 30934,
											"end": 30945,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30921,
											"end": 30946,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 31034,
											"end": 31035,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 31028,
											"end": 31032,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 31024,
											"end": 31036,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 31013,
											"end": 31021,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 30997,
											"end": 31011,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 30993,
											"end": 31022,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 30989,
											"end": 31037,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 30969,
											"end": 30987,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30965,
											"end": 31038,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 30955,
											"end": 30957,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "674"
										},
										{
											"begin": 30955,
											"end": 30957,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 31052,
											"end": 31053,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31049,
											"end": 31050,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 31042,
											"end": 31054,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 30955,
											"end": 30957,
											"name": "tag",
											"source": 15,
											"value": "674"
										},
										{
											"begin": 30955,
											"end": 30957,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31087,
											"end": 31105,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 31077,
											"end": 31085,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 31073,
											"end": 31106,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31065,
											"end": 31106,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 31065,
											"end": 31106,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31139,
											"end": 31143,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31126,
											"end": 31144,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 31116,
											"end": 31144,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 31116,
											"end": 31144,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31167,
											"end": 31185,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31159,
											"end": 31165,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31156,
											"end": 31186,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 31153,
											"end": 31155,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 31153,
											"end": 31155,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "675"
										},
										{
											"begin": 31153,
											"end": 31155,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 31199,
											"end": 31200,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31196,
											"end": 31197,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 31189,
											"end": 31201,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 31153,
											"end": 31155,
											"name": "tag",
											"source": 15,
											"value": "675"
										},
										{
											"begin": 31153,
											"end": 31155,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31230,
											"end": 31232,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 31224,
											"end": 31228,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31220,
											"end": 31233,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31212,
											"end": 31233,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 31212,
											"end": 31233,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31287,
											"end": 31291,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 31279,
											"end": 31285,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31275,
											"end": 31292,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 31259,
											"end": 31273,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 31255,
											"end": 31293,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 31249,
											"end": 31253,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31245,
											"end": 31294,
											"name": "SGT",
											"source": 15
										},
										{
											"begin": 31242,
											"end": 31244,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 31242,
											"end": 31244,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "676"
										},
										{
											"begin": 31242,
											"end": 31244,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 31307,
											"end": 31308,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31304,
											"end": 31305,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 31297,
											"end": 31309,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 31242,
											"end": 31244,
											"name": "tag",
											"source": 15,
											"value": "676"
										},
										{
											"begin": 31242,
											"end": 31244,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30885,
											"end": 31318,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30885,
											"end": 31318,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 30885,
											"end": 31318,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30885,
											"end": 31318,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 30885,
											"end": 31318,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30885,
											"end": 31318,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30885,
											"end": 31318,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 31324,
											"end": 31896,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 31324,
											"end": 31896,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31324,
											"end": 31896,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31324,
											"end": 31896,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 31512,
											"end": 31523,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31499,
											"end": 31524,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 31612,
											"end": 31613,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 31606,
											"end": 31610,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 31602,
											"end": 31614,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 31591,
											"end": 31599,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 31575,
											"end": 31589,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 31571,
											"end": 31600,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 31567,
											"end": 31615,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 31547,
											"end": 31565,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31543,
											"end": 31616,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 31533,
											"end": 31535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "678"
										},
										{
											"begin": 31533,
											"end": 31535,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 31630,
											"end": 31631,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31627,
											"end": 31628,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 31620,
											"end": 31632,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 31533,
											"end": 31535,
											"name": "tag",
											"source": 15,
											"value": "678"
										},
										{
											"begin": 31533,
											"end": 31535,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31665,
											"end": 31683,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 31655,
											"end": 31663,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 31651,
											"end": 31684,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31643,
											"end": 31684,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 31643,
											"end": 31684,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31717,
											"end": 31721,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31704,
											"end": 31722,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 31694,
											"end": 31722,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 31694,
											"end": 31722,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31745,
											"end": 31763,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31737,
											"end": 31743,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31734,
											"end": 31764,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 31731,
											"end": 31733,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 31731,
											"end": 31733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "679"
										},
										{
											"begin": 31731,
											"end": 31733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 31777,
											"end": 31778,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31774,
											"end": 31775,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 31767,
											"end": 31779,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 31731,
											"end": 31733,
											"name": "tag",
											"source": 15,
											"value": "679"
										},
										{
											"begin": 31731,
											"end": 31733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31808,
											"end": 31810,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 31802,
											"end": 31806,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31798,
											"end": 31811,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31790,
											"end": 31811,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 31790,
											"end": 31811,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31865,
											"end": 31869,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 31857,
											"end": 31863,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31853,
											"end": 31870,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 31837,
											"end": 31851,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 31833,
											"end": 31871,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 31827,
											"end": 31831,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31823,
											"end": 31872,
											"name": "SGT",
											"source": 15
										},
										{
											"begin": 31820,
											"end": 31822,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 31820,
											"end": 31822,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "680"
										},
										{
											"begin": 31820,
											"end": 31822,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 31885,
											"end": 31886,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31882,
											"end": 31883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 31875,
											"end": 31887,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 31820,
											"end": 31822,
											"name": "tag",
											"source": 15,
											"value": "680"
										},
										{
											"begin": 31820,
											"end": 31822,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31463,
											"end": 31896,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31463,
											"end": 31896,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 31463,
											"end": 31896,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31463,
											"end": 31896,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 31463,
											"end": 31896,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31463,
											"end": 31896,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31463,
											"end": 31896,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 31902,
											"end": 32441,
											"name": "tag",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 31902,
											"end": 32441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31902,
											"end": 32441,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31902,
											"end": 32441,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 32057,
											"end": 32068,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 32044,
											"end": 32069,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 32157,
											"end": 32158,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 32151,
											"end": 32155,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 32147,
											"end": 32159,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 32136,
											"end": 32144,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 32120,
											"end": 32134,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 32116,
											"end": 32145,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 32112,
											"end": 32160,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 32092,
											"end": 32110,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 32088,
											"end": 32161,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 32078,
											"end": 32080,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "682"
										},
										{
											"begin": 32078,
											"end": 32080,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 32175,
											"end": 32176,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32172,
											"end": 32173,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 32165,
											"end": 32177,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 32078,
											"end": 32080,
											"name": "tag",
											"source": 15,
											"value": "682"
										},
										{
											"begin": 32078,
											"end": 32080,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32210,
											"end": 32228,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 32200,
											"end": 32208,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 32196,
											"end": 32229,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 32188,
											"end": 32229,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 32188,
											"end": 32229,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32262,
											"end": 32266,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 32249,
											"end": 32267,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 32239,
											"end": 32267,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 32239,
											"end": 32267,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32290,
											"end": 32308,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32282,
											"end": 32288,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 32279,
											"end": 32309,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 32276,
											"end": 32278,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 32276,
											"end": 32278,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "683"
										},
										{
											"begin": 32276,
											"end": 32278,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 32322,
											"end": 32323,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32319,
											"end": 32320,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 32312,
											"end": 32324,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 32276,
											"end": 32278,
											"name": "tag",
											"source": 15,
											"value": "683"
										},
										{
											"begin": 32276,
											"end": 32278,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32353,
											"end": 32355,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 32347,
											"end": 32351,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 32343,
											"end": 32356,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 32335,
											"end": 32356,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 32335,
											"end": 32356,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32410,
											"end": 32414,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 32402,
											"end": 32408,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 32398,
											"end": 32415,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 32382,
											"end": 32396,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 32378,
											"end": 32416,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 32372,
											"end": 32376,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 32368,
											"end": 32417,
											"name": "SGT",
											"source": 15
										},
										{
											"begin": 32365,
											"end": 32367,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 32365,
											"end": 32367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "684"
										},
										{
											"begin": 32365,
											"end": 32367,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 32430,
											"end": 32431,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32427,
											"end": 32428,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 32420,
											"end": 32432,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 32365,
											"end": 32367,
											"name": "tag",
											"source": 15,
											"value": "684"
										},
										{
											"begin": 32365,
											"end": 32367,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32008,
											"end": 32441,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32008,
											"end": 32441,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 32008,
											"end": 32441,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32008,
											"end": 32441,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 32008,
											"end": 32441,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 32008,
											"end": 32441,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32008,
											"end": 32441,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 32447,
											"end": 32970,
											"name": "tag",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 32447,
											"end": 32970,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32447,
											"end": 32970,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32447,
											"end": 32970,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 32586,
											"end": 32597,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 32573,
											"end": 32598,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 32686,
											"end": 32687,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 32680,
											"end": 32684,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 32676,
											"end": 32688,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 32665,
											"end": 32673,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 32649,
											"end": 32663,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 32645,
											"end": 32674,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 32641,
											"end": 32689,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 32621,
											"end": 32639,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 32617,
											"end": 32690,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 32607,
											"end": 32609,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "686"
										},
										{
											"begin": 32607,
											"end": 32609,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 32704,
											"end": 32705,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32701,
											"end": 32702,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 32694,
											"end": 32706,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 32607,
											"end": 32609,
											"name": "tag",
											"source": 15,
											"value": "686"
										},
										{
											"begin": 32607,
											"end": 32609,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32739,
											"end": 32757,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 32729,
											"end": 32737,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 32725,
											"end": 32758,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 32717,
											"end": 32758,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 32717,
											"end": 32758,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32791,
											"end": 32795,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 32778,
											"end": 32796,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 32768,
											"end": 32796,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 32768,
											"end": 32796,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32819,
											"end": 32837,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32811,
											"end": 32817,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 32808,
											"end": 32838,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 32805,
											"end": 32807,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 32805,
											"end": 32807,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "687"
										},
										{
											"begin": 32805,
											"end": 32807,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 32851,
											"end": 32852,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32848,
											"end": 32849,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 32841,
											"end": 32853,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 32805,
											"end": 32807,
											"name": "tag",
											"source": 15,
											"value": "687"
										},
										{
											"begin": 32805,
											"end": 32807,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32882,
											"end": 32884,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 32876,
											"end": 32880,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 32872,
											"end": 32885,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 32864,
											"end": 32885,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 32864,
											"end": 32885,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32939,
											"end": 32943,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 32931,
											"end": 32937,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 32927,
											"end": 32944,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 32911,
											"end": 32925,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 32907,
											"end": 32945,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 32901,
											"end": 32905,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 32897,
											"end": 32946,
											"name": "SGT",
											"source": 15
										},
										{
											"begin": 32894,
											"end": 32896,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 32894,
											"end": 32896,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "688"
										},
										{
											"begin": 32894,
											"end": 32896,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 32959,
											"end": 32960,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32956,
											"end": 32957,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 32949,
											"end": 32961,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 32894,
											"end": 32896,
											"name": "tag",
											"source": 15,
											"value": "688"
										},
										{
											"begin": 32894,
											"end": 32896,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32537,
											"end": 32970,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32537,
											"end": 32970,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 32537,
											"end": 32970,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32537,
											"end": 32970,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 32537,
											"end": 32970,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 32537,
											"end": 32970,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32537,
											"end": 32970,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 32976,
											"end": 33259,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 32976,
											"end": 33259,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32976,
											"end": 33259,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 33042,
											"end": 33044,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 33036,
											"end": 33045,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 33026,
											"end": 33045,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 33026,
											"end": 33045,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33084,
											"end": 33088,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 33076,
											"end": 33082,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 33072,
											"end": 33089,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 33191,
											"end": 33197,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 33179,
											"end": 33189,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 33176,
											"end": 33198,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 33155,
											"end": 33173,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33143,
											"end": 33153,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 33140,
											"end": 33174,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 33137,
											"end": 33199,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 33134,
											"end": 33136,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 33134,
											"end": 33136,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "690"
										},
										{
											"begin": 33134,
											"end": 33136,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 33202,
											"end": 33220,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "691"
										},
										{
											"begin": 33202,
											"end": 33220,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "692"
										},
										{
											"begin": 33202,
											"end": 33220,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 33202,
											"end": 33220,
											"name": "tag",
											"source": 15,
											"value": "691"
										},
										{
											"begin": 33202,
											"end": 33220,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 33134,
											"end": 33136,
											"name": "tag",
											"source": 15,
											"value": "690"
										},
										{
											"begin": 33134,
											"end": 33136,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 33242,
											"end": 33252,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 33238,
											"end": 33240,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 33231,
											"end": 33253,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 33016,
											"end": 33259,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33016,
											"end": 33259,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 33016,
											"end": 33259,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 33016,
											"end": 33259,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33016,
											"end": 33259,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 33265,
											"end": 33607,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 33265,
											"end": 33607,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 33265,
											"end": 33607,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 33463,
											"end": 33481,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33455,
											"end": 33461,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 33452,
											"end": 33482,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 33449,
											"end": 33451,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 33449,
											"end": 33451,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "694"
										},
										{
											"begin": 33449,
											"end": 33451,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 33485,
											"end": 33503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "695"
										},
										{
											"begin": 33485,
											"end": 33503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "692"
										},
										{
											"begin": 33485,
											"end": 33503,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 33485,
											"end": 33503,
											"name": "tag",
											"source": 15,
											"value": "695"
										},
										{
											"begin": 33485,
											"end": 33503,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 33449,
											"end": 33451,
											"name": "tag",
											"source": 15,
											"value": "694"
										},
										{
											"begin": 33449,
											"end": 33451,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 33535,
											"end": 33539,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 33527,
											"end": 33533,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 33523,
											"end": 33540,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 33515,
											"end": 33540,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 33515,
											"end": 33540,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33595,
											"end": 33599,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 33589,
											"end": 33593,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 33585,
											"end": 33600,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 33577,
											"end": 33600,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 33577,
											"end": 33600,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33378,
											"end": 33607,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 33378,
											"end": 33607,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 33378,
											"end": 33607,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33378,
											"end": 33607,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 33613,
											"end": 33924,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 33613,
											"end": 33924,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 33613,
											"end": 33924,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 33780,
											"end": 33798,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33772,
											"end": 33778,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 33769,
											"end": 33799,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 33766,
											"end": 33768,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 33766,
											"end": 33768,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "697"
										},
										{
											"begin": 33766,
											"end": 33768,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 33802,
											"end": 33820,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "698"
										},
										{
											"begin": 33802,
											"end": 33820,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "692"
										},
										{
											"begin": 33802,
											"end": 33820,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 33802,
											"end": 33820,
											"name": "tag",
											"source": 15,
											"value": "698"
										},
										{
											"begin": 33802,
											"end": 33820,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 33766,
											"end": 33768,
											"name": "tag",
											"source": 15,
											"value": "697"
										},
										{
											"begin": 33766,
											"end": 33768,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 33852,
											"end": 33856,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 33844,
											"end": 33850,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 33840,
											"end": 33857,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 33832,
											"end": 33857,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 33832,
											"end": 33857,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33912,
											"end": 33916,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 33906,
											"end": 33910,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 33902,
											"end": 33917,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 33894,
											"end": 33917,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 33894,
											"end": 33917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33695,
											"end": 33924,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 33695,
											"end": 33924,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 33695,
											"end": 33924,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33695,
											"end": 33924,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 33930,
											"end": 34261,
											"name": "tag",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 33930,
											"end": 34261,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 33930,
											"end": 34261,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 34081,
											"end": 34099,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34073,
											"end": 34079,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 34070,
											"end": 34100,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 34067,
											"end": 34069,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 34067,
											"end": 34069,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "700"
										},
										{
											"begin": 34067,
											"end": 34069,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 34103,
											"end": 34121,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "701"
										},
										{
											"begin": 34103,
											"end": 34121,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "692"
										},
										{
											"begin": 34103,
											"end": 34121,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 34103,
											"end": 34121,
											"name": "tag",
											"source": 15,
											"value": "701"
										},
										{
											"begin": 34103,
											"end": 34121,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 34067,
											"end": 34069,
											"name": "tag",
											"source": 15,
											"value": "700"
										},
										{
											"begin": 34067,
											"end": 34069,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 34188,
											"end": 34192,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 34184,
											"end": 34193,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 34177,
											"end": 34181,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 34169,
											"end": 34175,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 34165,
											"end": 34182,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 34161,
											"end": 34194,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 34153,
											"end": 34194,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 34153,
											"end": 34194,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 34249,
											"end": 34253,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 34243,
											"end": 34247,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 34239,
											"end": 34254,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 34231,
											"end": 34254,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 34231,
											"end": 34254,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33996,
											"end": 34261,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 33996,
											"end": 34261,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 33996,
											"end": 34261,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33996,
											"end": 34261,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 34267,
											"end": 34413,
											"name": "tag",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 34267,
											"end": 34413,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 34267,
											"end": 34413,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 34371,
											"end": 34374,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 34363,
											"end": 34374,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 34363,
											"end": 34374,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 34401,
											"end": 34405,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 34396,
											"end": 34399,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 34392,
											"end": 34406,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 34384,
											"end": 34406,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 34384,
											"end": 34406,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 34353,
											"end": 34413,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 34353,
											"end": 34413,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 34353,
											"end": 34413,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 34353,
											"end": 34413,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 34419,
											"end": 34550,
											"name": "tag",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 34419,
											"end": 34550,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 34419,
											"end": 34550,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 34508,
											"end": 34511,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 34500,
											"end": 34511,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 34500,
											"end": 34511,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 34538,
											"end": 34542,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 34533,
											"end": 34536,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 34529,
											"end": 34543,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 34521,
											"end": 34543,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 34521,
											"end": 34543,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 34490,
											"end": 34550,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 34490,
											"end": 34550,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 34490,
											"end": 34550,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 34490,
											"end": 34550,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 34556,
											"end": 34719,
											"name": "tag",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 34556,
											"end": 34719,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 34556,
											"end": 34719,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 34677,
											"end": 34680,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 34669,
											"end": 34680,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 34669,
											"end": 34680,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 34707,
											"end": 34711,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 34702,
											"end": 34705,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 34698,
											"end": 34712,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 34690,
											"end": 34712,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 34690,
											"end": 34712,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 34659,
											"end": 34719,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 34659,
											"end": 34719,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 34659,
											"end": 34719,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 34659,
											"end": 34719,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 34725,
											"end": 34857,
											"name": "tag",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 34725,
											"end": 34857,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 34725,
											"end": 34857,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 34815,
											"end": 34818,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 34807,
											"end": 34818,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 34807,
											"end": 34818,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 34845,
											"end": 34849,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 34840,
											"end": 34843,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 34836,
											"end": 34850,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 34828,
											"end": 34850,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 34828,
											"end": 34850,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 34797,
											"end": 34857,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 34797,
											"end": 34857,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 34797,
											"end": 34857,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 34797,
											"end": 34857,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 34863,
											"end": 34991,
											"name": "tag",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 34863,
											"end": 34991,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 34863,
											"end": 34991,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 34978,
											"end": 34983,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 34972,
											"end": 34984,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 34962,
											"end": 34984,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 34962,
											"end": 34984,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 34951,
											"end": 34991,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 34951,
											"end": 34991,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 34951,
											"end": 34991,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 34951,
											"end": 34991,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 34997,
											"end": 35110,
											"name": "tag",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 34997,
											"end": 35110,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 34997,
											"end": 35110,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 35097,
											"end": 35102,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 35091,
											"end": 35103,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 35081,
											"end": 35103,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 35081,
											"end": 35103,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 35070,
											"end": 35110,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 35070,
											"end": 35110,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 35070,
											"end": 35110,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 35070,
											"end": 35110,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 35116,
											"end": 35261,
											"name": "tag",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 35116,
											"end": 35261,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 35116,
											"end": 35261,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 35248,
											"end": 35253,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 35242,
											"end": 35254,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 35232,
											"end": 35254,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 35232,
											"end": 35254,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 35221,
											"end": 35261,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 35221,
											"end": 35261,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 35221,
											"end": 35261,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 35221,
											"end": 35261,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 35267,
											"end": 35381,
											"name": "tag",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 35267,
											"end": 35381,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 35267,
											"end": 35381,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 35368,
											"end": 35373,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 35362,
											"end": 35374,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 35352,
											"end": 35374,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 35352,
											"end": 35374,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 35341,
											"end": 35381,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 35341,
											"end": 35381,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 35341,
											"end": 35381,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 35341,
											"end": 35381,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 35387,
											"end": 35485,
											"name": "tag",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 35387,
											"end": 35485,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 35387,
											"end": 35485,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 35472,
											"end": 35477,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 35466,
											"end": 35478,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 35456,
											"end": 35478,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 35456,
											"end": 35478,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 35445,
											"end": 35485,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 35445,
											"end": 35485,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 35445,
											"end": 35485,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 35445,
											"end": 35485,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 35491,
											"end": 35590,
											"name": "tag",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 35491,
											"end": 35590,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 35491,
											"end": 35590,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 35577,
											"end": 35582,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 35571,
											"end": 35583,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 35561,
											"end": 35583,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 35561,
											"end": 35583,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 35550,
											"end": 35590,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 35550,
											"end": 35590,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 35550,
											"end": 35590,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 35550,
											"end": 35590,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 35596,
											"end": 35723,
											"name": "tag",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 35596,
											"end": 35723,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 35596,
											"end": 35723,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 35712,
											"end": 35716,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 35707,
											"end": 35710,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 35703,
											"end": 35717,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 35695,
											"end": 35717,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 35695,
											"end": 35717,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 35685,
											"end": 35723,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 35685,
											"end": 35723,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 35685,
											"end": 35723,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 35685,
											"end": 35723,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 35729,
											"end": 35841,
											"name": "tag",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 35729,
											"end": 35841,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 35729,
											"end": 35841,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 35830,
											"end": 35834,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 35825,
											"end": 35828,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 35821,
											"end": 35835,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 35813,
											"end": 35835,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 35813,
											"end": 35835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 35803,
											"end": 35841,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 35803,
											"end": 35841,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 35803,
											"end": 35841,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 35803,
											"end": 35841,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 35847,
											"end": 35991,
											"name": "tag",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 35847,
											"end": 35991,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 35847,
											"end": 35991,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 35980,
											"end": 35984,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 35975,
											"end": 35978,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 35971,
											"end": 35985,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 35963,
											"end": 35985,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 35963,
											"end": 35985,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 35953,
											"end": 35991,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 35953,
											"end": 35991,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 35953,
											"end": 35991,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 35953,
											"end": 35991,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 35997,
											"end": 36110,
											"name": "tag",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 35997,
											"end": 36110,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 35997,
											"end": 36110,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 36099,
											"end": 36103,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 36094,
											"end": 36097,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 36090,
											"end": 36104,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 36082,
											"end": 36104,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 36082,
											"end": 36104,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 36072,
											"end": 36110,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 36072,
											"end": 36110,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 36072,
											"end": 36110,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 36072,
											"end": 36110,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 36116,
											"end": 36300,
											"name": "tag",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 36116,
											"end": 36300,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 36116,
											"end": 36300,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 36249,
											"end": 36255,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 36244,
											"end": 36247,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 36237,
											"end": 36256,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 36289,
											"end": 36293,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 36284,
											"end": 36287,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 36280,
											"end": 36294,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 36265,
											"end": 36294,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 36265,
											"end": 36294,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 36227,
											"end": 36300,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 36227,
											"end": 36300,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 36227,
											"end": 36300,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 36227,
											"end": 36300,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 36227,
											"end": 36300,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 36306,
											"end": 36489,
											"name": "tag",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 36306,
											"end": 36489,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 36306,
											"end": 36489,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 36438,
											"end": 36444,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 36433,
											"end": 36436,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 36426,
											"end": 36445,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 36478,
											"end": 36482,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 36473,
											"end": 36476,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 36469,
											"end": 36483,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 36454,
											"end": 36483,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 36454,
											"end": 36483,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 36416,
											"end": 36489,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 36416,
											"end": 36489,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 36416,
											"end": 36489,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 36416,
											"end": 36489,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 36416,
											"end": 36489,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 36495,
											"end": 36710,
											"name": "tag",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 36495,
											"end": 36710,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 36495,
											"end": 36710,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 36659,
											"end": 36665,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 36654,
											"end": 36657,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 36647,
											"end": 36666,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 36699,
											"end": 36703,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 36694,
											"end": 36697,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 36690,
											"end": 36704,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 36675,
											"end": 36704,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 36675,
											"end": 36704,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 36637,
											"end": 36710,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 36637,
											"end": 36710,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 36637,
											"end": 36710,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 36637,
											"end": 36710,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 36637,
											"end": 36710,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 36716,
											"end": 36900,
											"name": "tag",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 36716,
											"end": 36900,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 36716,
											"end": 36900,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 36849,
											"end": 36855,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 36844,
											"end": 36847,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 36837,
											"end": 36856,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 36889,
											"end": 36893,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 36884,
											"end": 36887,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 36880,
											"end": 36894,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 36865,
											"end": 36894,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 36865,
											"end": 36894,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 36827,
											"end": 36900,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 36827,
											"end": 36900,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 36827,
											"end": 36900,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 36827,
											"end": 36900,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 36827,
											"end": 36900,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 36906,
											"end": 37064,
											"name": "tag",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 36906,
											"end": 37064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 36906,
											"end": 37064,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 37013,
											"end": 37019,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 37008,
											"end": 37011,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 37001,
											"end": 37020,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 37053,
											"end": 37057,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 37048,
											"end": 37051,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 37044,
											"end": 37058,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 37029,
											"end": 37058,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 37029,
											"end": 37058,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 36991,
											"end": 37064,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 36991,
											"end": 37064,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 36991,
											"end": 37064,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 36991,
											"end": 37064,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 36991,
											"end": 37064,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 37070,
											"end": 37238,
											"name": "tag",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 37070,
											"end": 37238,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 37070,
											"end": 37238,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 37187,
											"end": 37193,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 37182,
											"end": 37185,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 37175,
											"end": 37194,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 37227,
											"end": 37231,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 37222,
											"end": 37225,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 37218,
											"end": 37232,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 37203,
											"end": 37232,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 37203,
											"end": 37232,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 37165,
											"end": 37238,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 37165,
											"end": 37238,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 37165,
											"end": 37238,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 37165,
											"end": 37238,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 37165,
											"end": 37238,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 37244,
											"end": 37391,
											"name": "tag",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 37244,
											"end": 37391,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 37244,
											"end": 37391,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 37382,
											"end": 37385,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 37367,
											"end": 37385,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 37367,
											"end": 37385,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 37357,
											"end": 37391,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 37357,
											"end": 37391,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 37357,
											"end": 37391,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 37357,
											"end": 37391,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 37357,
											"end": 37391,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 37397,
											"end": 37566,
											"name": "tag",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 37397,
											"end": 37566,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 37397,
											"end": 37566,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 37515,
											"end": 37521,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 37510,
											"end": 37513,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 37503,
											"end": 37522,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 37555,
											"end": 37559,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 37550,
											"end": 37553,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 37546,
											"end": 37560,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 37531,
											"end": 37560,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 37531,
											"end": 37560,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 37493,
											"end": 37566,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 37493,
											"end": 37566,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 37493,
											"end": 37566,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 37493,
											"end": 37566,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 37493,
											"end": 37566,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 37572,
											"end": 37877,
											"name": "tag",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 37572,
											"end": 37877,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 37572,
											"end": 37877,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 37631,
											"end": 37651,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "725"
										},
										{
											"begin": 37649,
											"end": 37650,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 37631,
											"end": 37651,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 37631,
											"end": 37651,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 37631,
											"end": 37651,
											"name": "tag",
											"source": 15,
											"value": "725"
										},
										{
											"begin": 37631,
											"end": 37651,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 37626,
											"end": 37651,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 37626,
											"end": 37651,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 37665,
											"end": 37685,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "726"
										},
										{
											"begin": 37683,
											"end": 37684,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 37665,
											"end": 37685,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 37665,
											"end": 37685,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 37665,
											"end": 37685,
											"name": "tag",
											"source": 15,
											"value": "726"
										},
										{
											"begin": 37665,
											"end": 37685,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 37660,
											"end": 37685,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 37660,
											"end": 37685,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 37819,
											"end": 37820,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 37751,
											"end": 37817,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37747,
											"end": 37821,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 37744,
											"end": 37745,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 37741,
											"end": 37822,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 37738,
											"end": 37740,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 37738,
											"end": 37740,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "727"
										},
										{
											"begin": 37738,
											"end": 37740,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 37825,
											"end": 37843,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "728"
										},
										{
											"begin": 37825,
											"end": 37843,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "729"
										},
										{
											"begin": 37825,
											"end": 37843,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 37825,
											"end": 37843,
											"name": "tag",
											"source": 15,
											"value": "728"
										},
										{
											"begin": 37825,
											"end": 37843,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 37738,
											"end": 37740,
											"name": "tag",
											"source": 15,
											"value": "727"
										},
										{
											"begin": 37738,
											"end": 37740,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 37869,
											"end": 37870,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 37866,
											"end": 37867,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 37862,
											"end": 37871,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 37855,
											"end": 37871,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 37855,
											"end": 37871,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 37616,
											"end": 37877,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 37616,
											"end": 37877,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 37616,
											"end": 37877,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 37616,
											"end": 37877,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 37616,
											"end": 37877,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 37883,
											"end": 38068,
											"name": "tag",
											"source": 15,
											"value": "212"
										},
										{
											"begin": 37883,
											"end": 38068,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 37883,
											"end": 38068,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 37940,
											"end": 37960,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "731"
										},
										{
											"begin": 37958,
											"end": 37959,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 37940,
											"end": 37960,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 37940,
											"end": 37960,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 37940,
											"end": 37960,
											"name": "tag",
											"source": 15,
											"value": "731"
										},
										{
											"begin": 37940,
											"end": 37960,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 37935,
											"end": 37960,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 37935,
											"end": 37960,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 37974,
											"end": 37994,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "732"
										},
										{
											"begin": 37992,
											"end": 37993,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 37974,
											"end": 37994,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 37974,
											"end": 37994,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 37974,
											"end": 37994,
											"name": "tag",
											"source": 15,
											"value": "732"
										},
										{
											"begin": 37974,
											"end": 37994,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 37969,
											"end": 37994,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 37969,
											"end": 37994,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 38013,
											"end": 38014,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 38003,
											"end": 38005,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "733"
										},
										{
											"begin": 38003,
											"end": 38005,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 38018,
											"end": 38036,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "734"
										},
										{
											"begin": 38018,
											"end": 38036,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "735"
										},
										{
											"begin": 38018,
											"end": 38036,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 38018,
											"end": 38036,
											"name": "tag",
											"source": 15,
											"value": "734"
										},
										{
											"begin": 38018,
											"end": 38036,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 38003,
											"end": 38005,
											"name": "tag",
											"source": 15,
											"value": "733"
										},
										{
											"begin": 38003,
											"end": 38005,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 38060,
											"end": 38061,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 38057,
											"end": 38058,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 38053,
											"end": 38062,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 38048,
											"end": 38062,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 38048,
											"end": 38062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 37925,
											"end": 38068,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 37925,
											"end": 38068,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 37925,
											"end": 38068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 37925,
											"end": 38068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 37925,
											"end": 38068,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 38074,
											"end": 38422,
											"name": "tag",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 38074,
											"end": 38422,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 38074,
											"end": 38422,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 38137,
											"end": 38157,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "737"
										},
										{
											"begin": 38155,
											"end": 38156,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 38137,
											"end": 38157,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 38137,
											"end": 38157,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 38137,
											"end": 38157,
											"name": "tag",
											"source": 15,
											"value": "737"
										},
										{
											"begin": 38137,
											"end": 38157,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 38132,
											"end": 38157,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 38132,
											"end": 38157,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 38171,
											"end": 38191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "738"
										},
										{
											"begin": 38189,
											"end": 38190,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 38171,
											"end": 38191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 38171,
											"end": 38191,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 38171,
											"end": 38191,
											"name": "tag",
											"source": 15,
											"value": "738"
										},
										{
											"begin": 38171,
											"end": 38191,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 38166,
											"end": 38191,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 38166,
											"end": 38191,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 38359,
											"end": 38360,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 38291,
											"end": 38357,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38287,
											"end": 38361,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 38284,
											"end": 38285,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 38281,
											"end": 38362,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 38276,
											"end": 38277,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 38269,
											"end": 38278,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 38262,
											"end": 38279,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 38258,
											"end": 38363,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 38255,
											"end": 38257,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 38255,
											"end": 38257,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "739"
										},
										{
											"begin": 38255,
											"end": 38257,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 38366,
											"end": 38384,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "740"
										},
										{
											"begin": 38366,
											"end": 38384,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "729"
										},
										{
											"begin": 38366,
											"end": 38384,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 38366,
											"end": 38384,
											"name": "tag",
											"source": 15,
											"value": "740"
										},
										{
											"begin": 38366,
											"end": 38384,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 38255,
											"end": 38257,
											"name": "tag",
											"source": 15,
											"value": "739"
										},
										{
											"begin": 38255,
											"end": 38257,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 38414,
											"end": 38415,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 38411,
											"end": 38412,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 38407,
											"end": 38416,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 38396,
											"end": 38416,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 38396,
											"end": 38416,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 38122,
											"end": 38422,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 38122,
											"end": 38422,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 38122,
											"end": 38422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 38122,
											"end": 38422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 38122,
											"end": 38422,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 38428,
											"end": 38524,
											"name": "tag",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 38428,
											"end": 38524,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 38428,
											"end": 38524,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 38494,
											"end": 38518,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "742"
										},
										{
											"begin": 38512,
											"end": 38517,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 38494,
											"end": 38518,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "743"
										},
										{
											"begin": 38494,
											"end": 38518,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 38494,
											"end": 38518,
											"name": "tag",
											"source": 15,
											"value": "742"
										},
										{
											"begin": 38494,
											"end": 38518,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 38483,
											"end": 38518,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 38483,
											"end": 38518,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 38473,
											"end": 38524,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 38473,
											"end": 38524,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 38473,
											"end": 38524,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 38473,
											"end": 38524,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 38530,
											"end": 38634,
											"name": "tag",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 38530,
											"end": 38634,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 38530,
											"end": 38634,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 38604,
											"end": 38628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "745"
										},
										{
											"begin": 38622,
											"end": 38627,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 38604,
											"end": 38628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "743"
										},
										{
											"begin": 38604,
											"end": 38628,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 38604,
											"end": 38628,
											"name": "tag",
											"source": 15,
											"value": "745"
										},
										{
											"begin": 38604,
											"end": 38628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 38593,
											"end": 38628,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 38593,
											"end": 38628,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 38583,
											"end": 38634,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 38583,
											"end": 38634,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 38583,
											"end": 38634,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 38583,
											"end": 38634,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 38640,
											"end": 38730,
											"name": "tag",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 38640,
											"end": 38730,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 38640,
											"end": 38730,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 38717,
											"end": 38722,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 38710,
											"end": 38723,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 38703,
											"end": 38724,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 38692,
											"end": 38724,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 38692,
											"end": 38724,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 38682,
											"end": 38730,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 38682,
											"end": 38730,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 38682,
											"end": 38730,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 38682,
											"end": 38730,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 38736,
											"end": 38813,
											"name": "tag",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 38736,
											"end": 38813,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 38736,
											"end": 38813,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 38802,
											"end": 38807,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 38791,
											"end": 38807,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 38791,
											"end": 38807,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 38781,
											"end": 38813,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 38781,
											"end": 38813,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 38781,
											"end": 38813,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 38781,
											"end": 38813,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 38819,
											"end": 38956,
											"name": "tag",
											"source": 15,
											"value": "748"
										},
										{
											"begin": 38819,
											"end": 38956,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 38819,
											"end": 38956,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 38898,
											"end": 38903,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 38887,
											"end": 38903,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 38887,
											"end": 38903,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 38904,
											"end": 38950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "750"
										},
										{
											"begin": 38944,
											"end": 38949,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 38904,
											"end": 38950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "751"
										},
										{
											"begin": 38904,
											"end": 38950,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 38904,
											"end": 38950,
											"name": "tag",
											"source": 15,
											"value": "750"
										},
										{
											"begin": 38904,
											"end": 38950,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 38877,
											"end": 38956,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 38877,
											"end": 38956,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 38877,
											"end": 38956,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 38877,
											"end": 38956,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 38962,
											"end": 39038,
											"name": "tag",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 38962,
											"end": 39038,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 38962,
											"end": 39038,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 39027,
											"end": 39032,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 39016,
											"end": 39032,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 39016,
											"end": 39032,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 39006,
											"end": 39038,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 39006,
											"end": 39038,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 39006,
											"end": 39038,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 39006,
											"end": 39038,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 39044,
											"end": 39170,
											"name": "tag",
											"source": 15,
											"value": "743"
										},
										{
											"begin": 39044,
											"end": 39170,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 39044,
											"end": 39170,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 39121,
											"end": 39163,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39114,
											"end": 39119,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 39110,
											"end": 39164,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 39099,
											"end": 39164,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 39099,
											"end": 39164,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 39089,
											"end": 39170,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 39089,
											"end": 39170,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 39089,
											"end": 39170,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 39089,
											"end": 39170,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 39176,
											"end": 39253,
											"name": "tag",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 39176,
											"end": 39253,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 39176,
											"end": 39253,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 39242,
											"end": 39247,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 39231,
											"end": 39247,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 39231,
											"end": 39247,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 39221,
											"end": 39253,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 39221,
											"end": 39253,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 39221,
											"end": 39253,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 39221,
											"end": 39253,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 39259,
											"end": 39668,
											"name": "tag",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 39259,
											"end": 39668,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 39259,
											"end": 39668,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 39537,
											"end": 39661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "756"
										},
										{
											"begin": 39646,
											"end": 39660,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 39638,
											"end": 39644,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 39631,
											"end": 39636,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 39537,
											"end": 39661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 39537,
											"end": 39661,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 39537,
											"end": 39661,
											"name": "tag",
											"source": 15,
											"value": "756"
										},
										{
											"begin": 39537,
											"end": 39661,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 39515,
											"end": 39661,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 39515,
											"end": 39661,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 39449,
											"end": 39668,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 39449,
											"end": 39668,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 39449,
											"end": 39668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 39449,
											"end": 39668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 39449,
											"end": 39668,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 39674,
											"end": 39828,
											"name": "tag",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 39674,
											"end": 39828,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 39674,
											"end": 39828,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 39771,
											"end": 39822,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "758"
										},
										{
											"begin": 39816,
											"end": 39821,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 39771,
											"end": 39822,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "759"
										},
										{
											"begin": 39771,
											"end": 39822,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 39771,
											"end": 39822,
											"name": "tag",
											"source": 15,
											"value": "758"
										},
										{
											"begin": 39771,
											"end": 39822,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 39758,
											"end": 39822,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 39758,
											"end": 39822,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 39748,
											"end": 39828,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 39748,
											"end": 39828,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 39748,
											"end": 39828,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 39748,
											"end": 39828,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 39834,
											"end": 39961,
											"name": "tag",
											"source": 15,
											"value": "759"
										},
										{
											"begin": 39834,
											"end": 39961,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 39834,
											"end": 39961,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 39931,
											"end": 39955,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "761"
										},
										{
											"begin": 39949,
											"end": 39954,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 39931,
											"end": 39955,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "743"
										},
										{
											"begin": 39931,
											"end": 39955,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 39931,
											"end": 39955,
											"name": "tag",
											"source": 15,
											"value": "761"
										},
										{
											"begin": 39931,
											"end": 39955,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 39918,
											"end": 39955,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 39918,
											"end": 39955,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 39908,
											"end": 39961,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 39908,
											"end": 39961,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 39908,
											"end": 39961,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 39908,
											"end": 39961,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 39967,
											"end": 40104,
											"name": "tag",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 39967,
											"end": 40104,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 39967,
											"end": 40104,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 40061,
											"end": 40098,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "763"
										},
										{
											"begin": 40092,
											"end": 40097,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 40061,
											"end": 40098,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "748"
										},
										{
											"begin": 40061,
											"end": 40098,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 40061,
											"end": 40098,
											"name": "tag",
											"source": 15,
											"value": "763"
										},
										{
											"begin": 40061,
											"end": 40098,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40048,
											"end": 40098,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 40048,
											"end": 40098,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 40038,
											"end": 40104,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 40038,
											"end": 40104,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 40038,
											"end": 40104,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 40038,
											"end": 40104,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 40110,
											"end": 40264,
											"name": "tag",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 40110,
											"end": 40264,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40194,
											"end": 40200,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 40189,
											"end": 40192,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 40184,
											"end": 40187,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 40171,
											"end": 40201,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 40256,
											"end": 40257,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 40247,
											"end": 40253,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 40242,
											"end": 40245,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 40238,
											"end": 40254,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 40231,
											"end": 40258,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 40161,
											"end": 40264,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 40161,
											"end": 40264,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 40161,
											"end": 40264,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 40161,
											"end": 40264,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 40270,
											"end": 40577,
											"name": "tag",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 40270,
											"end": 40577,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40338,
											"end": 40339,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 40348,
											"end": 40461,
											"name": "tag",
											"source": 15,
											"value": "766"
										},
										{
											"begin": 40348,
											"end": 40461,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40362,
											"end": 40368,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 40359,
											"end": 40360,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 40356,
											"end": 40369,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 40348,
											"end": 40461,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 40348,
											"end": 40461,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "768"
										},
										{
											"begin": 40348,
											"end": 40461,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 40447,
											"end": 40448,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 40442,
											"end": 40445,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 40438,
											"end": 40449,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 40432,
											"end": 40450,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 40428,
											"end": 40429,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 40423,
											"end": 40426,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 40419,
											"end": 40430,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 40412,
											"end": 40451,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 40384,
											"end": 40386,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 40381,
											"end": 40382,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 40377,
											"end": 40387,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 40372,
											"end": 40387,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 40372,
											"end": 40387,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 40348,
											"end": 40461,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "766"
										},
										{
											"begin": 40348,
											"end": 40461,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 40348,
											"end": 40461,
											"name": "tag",
											"source": 15,
											"value": "768"
										},
										{
											"begin": 40348,
											"end": 40461,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40479,
											"end": 40485,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 40476,
											"end": 40477,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 40473,
											"end": 40486,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 40470,
											"end": 40472,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 40470,
											"end": 40472,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "769"
										},
										{
											"begin": 40470,
											"end": 40472,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 40559,
											"end": 40560,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 40550,
											"end": 40556,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 40545,
											"end": 40548,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 40541,
											"end": 40557,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 40534,
											"end": 40561,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 40470,
											"end": 40472,
											"name": "tag",
											"source": 15,
											"value": "769"
										},
										{
											"begin": 40470,
											"end": 40472,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40319,
											"end": 40577,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 40319,
											"end": 40577,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 40319,
											"end": 40577,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 40319,
											"end": 40577,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 40319,
											"end": 40577,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 40583,
											"end": 40816,
											"name": "tag",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 40583,
											"end": 40816,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40583,
											"end": 40816,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 40645,
											"end": 40669,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "771"
										},
										{
											"begin": 40663,
											"end": 40668,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 40645,
											"end": 40669,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 40645,
											"end": 40669,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 40645,
											"end": 40669,
											"name": "tag",
											"source": 15,
											"value": "771"
										},
										{
											"begin": 40645,
											"end": 40669,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40636,
											"end": 40669,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 40636,
											"end": 40669,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 40691,
											"end": 40757,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40684,
											"end": 40689,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 40681,
											"end": 40758,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 40678,
											"end": 40680,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 40678,
											"end": 40680,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "772"
										},
										{
											"begin": 40678,
											"end": 40680,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 40761,
											"end": 40779,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "773"
										},
										{
											"begin": 40761,
											"end": 40779,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "729"
										},
										{
											"begin": 40761,
											"end": 40779,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 40761,
											"end": 40779,
											"name": "tag",
											"source": 15,
											"value": "773"
										},
										{
											"begin": 40761,
											"end": 40779,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40678,
											"end": 40680,
											"name": "tag",
											"source": 15,
											"value": "772"
										},
										{
											"begin": 40678,
											"end": 40680,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40808,
											"end": 40809,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 40801,
											"end": 40806,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 40797,
											"end": 40810,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 40790,
											"end": 40810,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 40790,
											"end": 40810,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 40626,
											"end": 40816,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 40626,
											"end": 40816,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 40626,
											"end": 40816,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 40626,
											"end": 40816,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 40822,
											"end": 41002,
											"name": "tag",
											"source": 15,
											"value": "729"
										},
										{
											"begin": 40822,
											"end": 41002,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40870,
											"end": 40947,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 40867,
											"end": 40868,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 40860,
											"end": 40948,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 40967,
											"end": 40971,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 40964,
											"end": 40965,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 40957,
											"end": 40972,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 40991,
											"end": 40995,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 40988,
											"end": 40989,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 40981,
											"end": 40996,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 41008,
											"end": 41188,
											"name": "tag",
											"source": 15,
											"value": "735"
										},
										{
											"begin": 41008,
											"end": 41188,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 41056,
											"end": 41133,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 41053,
											"end": 41054,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 41046,
											"end": 41134,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 41153,
											"end": 41157,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 41150,
											"end": 41151,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 41143,
											"end": 41158,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 41177,
											"end": 41181,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 41174,
											"end": 41175,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 41167,
											"end": 41182,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 41194,
											"end": 41374,
											"name": "tag",
											"source": 15,
											"value": "776"
										},
										{
											"begin": 41194,
											"end": 41374,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 41242,
											"end": 41319,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 41239,
											"end": 41240,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 41232,
											"end": 41320,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 41339,
											"end": 41343,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 41336,
											"end": 41337,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 41329,
											"end": 41344,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 41363,
											"end": 41367,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 41360,
											"end": 41361,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 41353,
											"end": 41368,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 41380,
											"end": 41560,
											"name": "tag",
											"source": 15,
											"value": "692"
										},
										{
											"begin": 41380,
											"end": 41560,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 41428,
											"end": 41505,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 41425,
											"end": 41426,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 41418,
											"end": 41506,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 41525,
											"end": 41529,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 41522,
											"end": 41523,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 41515,
											"end": 41530,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 41549,
											"end": 41553,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 41546,
											"end": 41547,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 41539,
											"end": 41554,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 41566,
											"end": 41668,
											"name": "tag",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 41566,
											"end": 41668,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 41566,
											"end": 41668,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 41658,
											"end": 41660,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 41654,
											"end": 41661,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 41649,
											"end": 41651,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 41642,
											"end": 41647,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 41638,
											"end": 41652,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 41634,
											"end": 41662,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 41624,
											"end": 41662,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 41624,
											"end": 41662,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 41614,
											"end": 41668,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 41614,
											"end": 41668,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 41614,
											"end": 41668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 41614,
											"end": 41668,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 41674,
											"end": 41792,
											"name": "tag",
											"source": 15,
											"value": "751"
										},
										{
											"begin": 41674,
											"end": 41792,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 41760,
											"end": 41761,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 41753,
											"end": 41758,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 41750,
											"end": 41762,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 41740,
											"end": 41742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "781"
										},
										{
											"begin": 41740,
											"end": 41742,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 41766,
											"end": 41784,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "782"
										},
										{
											"begin": 41766,
											"end": 41784,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "776"
										},
										{
											"begin": 41766,
											"end": 41784,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 41766,
											"end": 41784,
											"name": "tag",
											"source": 15,
											"value": "782"
										},
										{
											"begin": 41766,
											"end": 41784,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 41740,
											"end": 41742,
											"name": "tag",
											"source": 15,
											"value": "781"
										},
										{
											"begin": 41740,
											"end": 41742,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 41730,
											"end": 41792,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 41730,
											"end": 41792,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 41798,
											"end": 41920,
											"name": "tag",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 41798,
											"end": 41920,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 41871,
											"end": 41895,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "784"
										},
										{
											"begin": 41889,
											"end": 41894,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 41871,
											"end": 41895,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 41871,
											"end": 41895,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 41871,
											"end": 41895,
											"name": "tag",
											"source": 15,
											"value": "784"
										},
										{
											"begin": 41871,
											"end": 41895,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 41864,
											"end": 41869,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 41861,
											"end": 41896,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 41851,
											"end": 41853,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "785"
										},
										{
											"begin": 41851,
											"end": 41853,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 41910,
											"end": 41911,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 41907,
											"end": 41908,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 41900,
											"end": 41912,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 41851,
											"end": 41853,
											"name": "tag",
											"source": 15,
											"value": "785"
										},
										{
											"begin": 41851,
											"end": 41853,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 41841,
											"end": 41920,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 41841,
											"end": 41920,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 41926,
											"end": 42064,
											"name": "tag",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 41926,
											"end": 42064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 42007,
											"end": 42039,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "787"
										},
										{
											"begin": 42033,
											"end": 42038,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 42007,
											"end": 42039,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 42007,
											"end": 42039,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 42007,
											"end": 42039,
											"name": "tag",
											"source": 15,
											"value": "787"
										},
										{
											"begin": 42007,
											"end": 42039,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 42000,
											"end": 42005,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 41997,
											"end": 42040,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 41987,
											"end": 41989,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "788"
										},
										{
											"begin": 41987,
											"end": 41989,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 42054,
											"end": 42055,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 42051,
											"end": 42052,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 42044,
											"end": 42056,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 41987,
											"end": 41989,
											"name": "tag",
											"source": 15,
											"value": "788"
										},
										{
											"begin": 41987,
											"end": 41989,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 41977,
											"end": 42064,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 41977,
											"end": 42064,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 42070,
											"end": 42186,
											"name": "tag",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 42070,
											"end": 42186,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 42140,
											"end": 42161,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "790"
										},
										{
											"begin": 42155,
											"end": 42160,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 42140,
											"end": 42161,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 42140,
											"end": 42161,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 42140,
											"end": 42161,
											"name": "tag",
											"source": 15,
											"value": "790"
										},
										{
											"begin": 42140,
											"end": 42161,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 42133,
											"end": 42138,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 42130,
											"end": 42162,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 42120,
											"end": 42122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "791"
										},
										{
											"begin": 42120,
											"end": 42122,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 42176,
											"end": 42177,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 42173,
											"end": 42174,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 42166,
											"end": 42178,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 42120,
											"end": 42122,
											"name": "tag",
											"source": 15,
											"value": "791"
										},
										{
											"begin": 42120,
											"end": 42122,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 42110,
											"end": 42186,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 42110,
											"end": 42186,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 42192,
											"end": 42314,
											"name": "tag",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 42192,
											"end": 42314,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 42265,
											"end": 42289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "793"
										},
										{
											"begin": 42283,
											"end": 42288,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 42265,
											"end": 42289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 42265,
											"end": 42289,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 42265,
											"end": 42289,
											"name": "tag",
											"source": 15,
											"value": "793"
										},
										{
											"begin": 42265,
											"end": 42289,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 42258,
											"end": 42263,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 42255,
											"end": 42290,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 42245,
											"end": 42247,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "794"
										},
										{
											"begin": 42245,
											"end": 42247,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 42304,
											"end": 42305,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 42301,
											"end": 42302,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 42294,
											"end": 42306,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 42245,
											"end": 42247,
											"name": "tag",
											"source": 15,
											"value": "794"
										},
										{
											"begin": 42245,
											"end": 42247,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 42235,
											"end": 42314,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 42235,
											"end": 42314,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 42320,
											"end": 42432,
											"name": "tag",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 42320,
											"end": 42432,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 42406,
											"end": 42407,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 42399,
											"end": 42404,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 42396,
											"end": 42408,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 42386,
											"end": 42388,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "796"
										},
										{
											"begin": 42386,
											"end": 42388,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 42422,
											"end": 42423,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 42419,
											"end": 42420,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 42412,
											"end": 42424,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 42386,
											"end": 42388,
											"name": "tag",
											"source": 15,
											"value": "796"
										},
										{
											"begin": 42386,
											"end": 42388,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 42376,
											"end": 42432,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 42376,
											"end": 42432,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 42438,
											"end": 42560,
											"name": "tag",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 42438,
											"end": 42560,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 42511,
											"end": 42535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "798"
										},
										{
											"begin": 42529,
											"end": 42534,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 42511,
											"end": 42535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 42511,
											"end": 42535,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 42511,
											"end": 42535,
											"name": "tag",
											"source": 15,
											"value": "798"
										},
										{
											"begin": 42511,
											"end": 42535,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 42504,
											"end": 42509,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 42501,
											"end": 42536,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 42491,
											"end": 42493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "799"
										},
										{
											"begin": 42491,
											"end": 42493,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 42550,
											"end": 42551,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 42547,
											"end": 42548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 42540,
											"end": 42552,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 42491,
											"end": 42493,
											"name": "tag",
											"source": 15,
											"value": "799"
										},
										{
											"begin": 42491,
											"end": 42493,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 42481,
											"end": 42560,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 42481,
											"end": 42560,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"ethToWeth(uint256,address)": "ef3858ab",
							"feeTo()": "017e7e58",
							"feeToAdmin()": "8e7fa96a",
							"fees()": "9af1d35a",
							"getAmountInAll(uint256[])": "fd07291f",
							"getWeth(address)": "8ac051f2",
							"multiSwap((uint256[],uint256[],bytes[],address,uint256,address,address,uint256[],uint256[],(bytes32,uint256,uint256,uint256,bytes)[],(address,bool,address,bool),int256[],address[],uint8))": "239aad0a",
							"routerAddreAll(uint256)": "257b66b0",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6",
							"setFees(uint256)": "3d18678e",
							"setRouterAddreAll(uint256,address)": "f654df7a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToAdmin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ethToWeth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountInArr\",\"type\":\"uint256[]\"}],\"name\":\"getAmountInAll\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_routerArr\",\"type\":\"address\"}],\"name\":\"getWeth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"WETH\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"amountInArr\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountOutMinArr\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"pathArr\",\"type\":\"bytes[]\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadLine\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"inputAddre\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outAddre\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"routerIndex\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"crvParams\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"batchSwapSteps\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"fundManaGements\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"_kind\",\"type\":\"uint8\"}],\"internalType\":\"struct BarterswapRouterV1.AccessParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"multiSwap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"routerAddreAll\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feetoAdmin\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fees\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_routeraddre\",\"type\":\"address\"}],\"name\":\"setRouterAddreAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BarterswapRouter.sol\":\"BarterswapRouterV1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BarterswapRouter.sol\":{\"keccak256\":\"0xd87db761130d9124bef404060a43b4effbb696e81cc0183c9c4ac74eefd9c39f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3f39833855a50c0c60a61c657b9cb036f44e5da08a306671e8ff6416434342b\",\"dweb:/ipfs/QmTyf8MPhYUToQMeDEZyHLq8GGEpCJHkWzavjMQrLLjxad\"]},\"interface/IBalancerSwap/IAsset.sol\":{\"keccak256\":\"0xf9b97c4e6ad7d344013a3071282f213038924e9c3b6ac6f17196a40941fd64d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b06f4cccbe42b2f974fe2571f2267414bbfb491c0b2d94017f5f832b18c7f956\",\"dweb:/ipfs/QmZKi6Hd3nnhS3Rtd5Umz4eSVZ3kufyFARRuyeaeeaAbHT\"]},\"interface/IBalancerSwap/IAuthorizer.sol\":{\"keccak256\":\"0xe9cf877950117afb454027ea900a563bd6b643bf4425b19dcc1e5954a267fe51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99a8246517f1eafabec673ef93d0863aaccf0aa3b6fdb096d88e8f531e241f58\",\"dweb:/ipfs/QmNi32iE95ocFG8pjLNWbgQdqATPjJH8enSA2hFSP2HJ9h\"]},\"interface/IBalancerSwap/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xb6e7d4649590d068d010a9ed4e06388c11a224708357371e89374f9199d5dfdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1c14e57b54eb3089611debfd069c6efd798647c7b0057b37d6df9f9d35e0be3\",\"dweb:/ipfs/QmaaCtfeKBisvW4T6GrwsxpocK6ruUyyJTUFAjZRjvLuFQ\"]},\"interface/IBalancerSwap/IProtocolFeesCollector.sol\":{\"keccak256\":\"0x62f4f3cca283df89f13c476bb5991938e0683949ebee0ee6336b8d8d7f84320e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://081cc19ea0b102d54426442bb0840d5a981a301b5441298dee07f198c61f1cd5\",\"dweb:/ipfs/QmRZ5JprGS9nGmX7hWpAfWguiPC8ohjj5hCtCcHSLCKY4X\"]},\"interface/IBalancerSwap/ISignaturesValidator.sol\":{\"keccak256\":\"0x4ab58b8091a33a19a893227764df867cd88a995a9dcb25949d7678897767d734\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c09782570400bbb4fb2ac88595e260029dcbdc0aff8bb22cf32ed3b57fb31e5\",\"dweb:/ipfs/QmbtyGBEc6TpyQupBnKK77AdeZuW93T8r9Ti2CR7xphcR4\"]},\"interface/IBalancerSwap/ITemporarilyPausable.sol\":{\"keccak256\":\"0xa98e85df4eda1a5ad27df1b40b2b09ded7359a9802856b3c80cf6f80db194d10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://883bbe9f194e440fa25904d231937d881f1c148935bb1078fd4f402bdc2ac56c\",\"dweb:/ipfs/QmZTdcv2PdBPJv4vvtTNRV4UfEZ22f9TCpNfX7PjV9qXWA\"]},\"interface/IBalancerSwap/IVault.sol\":{\"keccak256\":\"0xe0d5b33db297fba76bcc6d5693aeb91b719936007947976e35a317fb5f0eb882\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a364d9973454264984567cd8f967f7535e0bf49999e7bdb0f69c2bd3146e873a\",\"dweb:/ipfs/Qmdb7ARgPNTrS2LwXaNvTNJDabgMnNxC37jmba6BkUqBpZ\"]},\"interface/IBalancerSwap/IWETH.sol\":{\"keccak256\":\"0x0ab6cce9eb4524e1696a264f8248c070888249eeddb2069b54b97a9b51d9dced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4eb664a3f3293da94fef29be643ce24489b8400ed3abb4f8cb9bbdb820f7963\",\"dweb:/ipfs/QmWYSvpdamh599WboKCLdmPTnrpVCZiiKy5z2dJbNCkJwf\"]},\"interface/IBarterswapV2Router01.sol\":{\"keccak256\":\"0x891e6625090bc8343409a946d29eb82be0a323d2d8233066ee60d53ac7fbdab4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6b224ba9f1157692d1cf28606abb6c63bda0e5f56726165615a45f24d35b90\",\"dweb:/ipfs/QmTox7NatzKkrAVtnxCcoUpqGp6uvvtj7WwSRJaTz5MyxZ\"]},\"interface/IERC20.sol\":{\"keccak256\":\"0x03ccb68ee528c8622d5724957a73d3e44bad34b72bd2c60eba1cd34f64648a44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7547429308e6183385c591133716e070fa171218d4c83069d3861546c9bf245a\",\"dweb:/ipfs/QmTuSMH6F7b3iz3fooHu4fA8xW3GpaV3u7XQszcQGxkX3f\"]},\"interface/ISwap.sol\":{\"keccak256\":\"0x262c1adbd8e45f82687a76fd51b6075fdd1113f9e40552549c3f42dd78c8de57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0e9240c74716ac827bc44c6e925b70fc1688f28758224af38e66e6dcbf11b88\",\"dweb:/ipfs/QmPMHtJAnuvbXS8wT98P5cN4TNUMBadFJEyCFU9gBoXGyU\"]},\"interface/IWETH9.sol\":{\"keccak256\":\"0x1770d90fecc676a948b02cd4391a58a57c8b9e441fedbaee96270ac537998392\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee337144705d3a966aeb618acdd3c3553251c65285b38fb97128d40d85f788c3\",\"dweb:/ipfs/QmXi1BDhKk2SEDrbDNH7LDpjfcNxhHfQ9g2NFwUGS7Jfsw\"]},\"libs/SafeMath.sol\":{\"keccak256\":\"0x857f2ba1d26da4919d4390ddd984a96e76730ee198550e3522f667297a084dda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1143a136d8b711d81feda93ac644fa9658c07de29ba69adcfae8b1213c56f0e\",\"dweb:/ipfs/QmbMNeiLRc3vwTWzseUMCxKEE7ARrNvN1CNKPu2EcV9sNG\"]},\"libs/TransferHelper.sol\":{\"keccak256\":\"0xcd705d1b09a0d682d73dd0d9ba5a386401d2814cf275f793c9f961e5395b7947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aabce1a5dc16787e6203fb3f0acfca05fd9a3351706a95718094a677ba73dca0\",\"dweb:/ipfs/QmYDEaqULCmGNUDdBJ2Ax6Jg5a777iV4B6Ka2urjzWNu2C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "BarterswapRouter.sol:BarterswapRouterV1",
								"label": "feeTo",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 17,
								"contract": "BarterswapRouter.sol:BarterswapRouterV1",
								"label": "feeToAdmin",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 19,
								"contract": "BarterswapRouter.sol:BarterswapRouterV1",
								"label": "fees",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "BarterswapRouter.sol:BarterswapRouterV1",
								"label": "routerAddreAll",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IBalancerSwap/IAsset.sol": {
				"IAsset": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IBalancerSwap/IAsset.sol\":\"IAsset\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IBalancerSwap/IAsset.sol\":{\"keccak256\":\"0xf9b97c4e6ad7d344013a3071282f213038924e9c3b6ac6f17196a40941fd64d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b06f4cccbe42b2f974fe2571f2267414bbfb491c0b2d94017f5f832b18c7f956\",\"dweb:/ipfs/QmZKi6Hd3nnhS3Rtd5Umz4eSVZ3kufyFARRuyeaeeaAbHT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IBalancerSwap/IAuthorizer.sol": {
				"IAuthorizer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "actionId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "where",
									"type": "address"
								}
							],
							"name": "canPerform",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"canPerform(bytes32,address,address)": {
								"details": "Returns true if `account` can perform the action described by `actionId` in the contract `where`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"canPerform(bytes32,address,address)": "9be2a884"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canPerform(bytes32,address,address)\":{\"details\":\"Returns true if `account` can perform the action described by `actionId` in the contract `where`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IBalancerSwap/IAuthorizer.sol\":\"IAuthorizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IBalancerSwap/IAuthorizer.sol\":{\"keccak256\":\"0xe9cf877950117afb454027ea900a563bd6b643bf4425b19dcc1e5954a267fe51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99a8246517f1eafabec673ef93d0863aaccf0aa3b6fdb096d88e8f531e241f58\",\"dweb:/ipfs/QmNi32iE95ocFG8pjLNWbgQdqATPjJH8enSA2hFSP2HJ9h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IBalancerSwap/IFlashLoanRecipient.sol": {
				"IFlashLoanRecipient": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "feeAmounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								}
							],
							"name": "receiveFlashLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"receiveFlashLoan(address[],uint256[],uint256[],bytes)": {
								"details": "When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveFlashLoan(address[],uint256[],uint256[],bytes)": "f04f2707"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IBalancerSwap/IFlashLoanRecipient.sol\":\"IFlashLoanRecipient\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IBalancerSwap/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xb6e7d4649590d068d010a9ed4e06388c11a224708357371e89374f9199d5dfdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1c14e57b54eb3089611debfd069c6efd798647c7b0057b37d6df9f9d35e0be3\",\"dweb:/ipfs/QmaaCtfeKBisvW4T6GrwsxpocK6ruUyyJTUFAjZRjvLuFQ\"]},\"interface/IERC20.sol\":{\"keccak256\":\"0x03ccb68ee528c8622d5724957a73d3e44bad34b72bd2c60eba1cd34f64648a44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7547429308e6183385c591133716e070fa171218d4c83069d3861546c9bf245a\",\"dweb:/ipfs/QmTuSMH6F7b3iz3fooHu4fA8xW3GpaV3u7XQszcQGxkX3f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IBalancerSwap/IProtocolFeesCollector.sol": {
				"IProtocolFeesCollector": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFlashLoanFeePercentage",
									"type": "uint256"
								}
							],
							"name": "FlashLoanFeePercentageChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newSwapFeePercentage",
									"type": "uint256"
								}
							],
							"name": "SwapFeePercentageChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getAuthorizer",
							"outputs": [
								{
									"internalType": "contract IAuthorizer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "getCollectedFeeAmounts",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "feeAmounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFlashLoanFeePercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSwapFeePercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newFlashLoanFeePercentage",
									"type": "uint256"
								}
							],
							"name": "setFlashLoanFeePercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newSwapFeePercentage",
									"type": "uint256"
								}
							],
							"name": "setSwapFeePercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vault",
							"outputs": [
								{
									"internalType": "contract IVault",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "withdrawCollectedFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAuthorizer()": "aaabadc5",
							"getCollectedFeeAmounts(address[])": "e42abf35",
							"getFlashLoanFeePercentage()": "d877845c",
							"getSwapFeePercentage()": "55c67628",
							"setFlashLoanFeePercentage(uint256)": "6b6b9f69",
							"setSwapFeePercentage(uint256)": "38e9922e",
							"vault()": "fbfa77cf",
							"withdrawCollectedFees(address[],uint256[],address)": "6daefab6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFlashLoanFeePercentage\",\"type\":\"uint256\"}],\"name\":\"FlashLoanFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"SwapFeePercentageChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getCollectedFeeAmounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlashLoanFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFlashLoanFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setFlashLoanFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawCollectedFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IBalancerSwap/IProtocolFeesCollector.sol\":\"IProtocolFeesCollector\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IBalancerSwap/IAsset.sol\":{\"keccak256\":\"0xf9b97c4e6ad7d344013a3071282f213038924e9c3b6ac6f17196a40941fd64d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b06f4cccbe42b2f974fe2571f2267414bbfb491c0b2d94017f5f832b18c7f956\",\"dweb:/ipfs/QmZKi6Hd3nnhS3Rtd5Umz4eSVZ3kufyFARRuyeaeeaAbHT\"]},\"interface/IBalancerSwap/IAuthorizer.sol\":{\"keccak256\":\"0xe9cf877950117afb454027ea900a563bd6b643bf4425b19dcc1e5954a267fe51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99a8246517f1eafabec673ef93d0863aaccf0aa3b6fdb096d88e8f531e241f58\",\"dweb:/ipfs/QmNi32iE95ocFG8pjLNWbgQdqATPjJH8enSA2hFSP2HJ9h\"]},\"interface/IBalancerSwap/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xb6e7d4649590d068d010a9ed4e06388c11a224708357371e89374f9199d5dfdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1c14e57b54eb3089611debfd069c6efd798647c7b0057b37d6df9f9d35e0be3\",\"dweb:/ipfs/QmaaCtfeKBisvW4T6GrwsxpocK6ruUyyJTUFAjZRjvLuFQ\"]},\"interface/IBalancerSwap/IProtocolFeesCollector.sol\":{\"keccak256\":\"0x62f4f3cca283df89f13c476bb5991938e0683949ebee0ee6336b8d8d7f84320e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://081cc19ea0b102d54426442bb0840d5a981a301b5441298dee07f198c61f1cd5\",\"dweb:/ipfs/QmRZ5JprGS9nGmX7hWpAfWguiPC8ohjj5hCtCcHSLCKY4X\"]},\"interface/IBalancerSwap/ISignaturesValidator.sol\":{\"keccak256\":\"0x4ab58b8091a33a19a893227764df867cd88a995a9dcb25949d7678897767d734\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c09782570400bbb4fb2ac88595e260029dcbdc0aff8bb22cf32ed3b57fb31e5\",\"dweb:/ipfs/QmbtyGBEc6TpyQupBnKK77AdeZuW93T8r9Ti2CR7xphcR4\"]},\"interface/IBalancerSwap/ITemporarilyPausable.sol\":{\"keccak256\":\"0xa98e85df4eda1a5ad27df1b40b2b09ded7359a9802856b3c80cf6f80db194d10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://883bbe9f194e440fa25904d231937d881f1c148935bb1078fd4f402bdc2ac56c\",\"dweb:/ipfs/QmZTdcv2PdBPJv4vvtTNRV4UfEZ22f9TCpNfX7PjV9qXWA\"]},\"interface/IBalancerSwap/IVault.sol\":{\"keccak256\":\"0xe0d5b33db297fba76bcc6d5693aeb91b719936007947976e35a317fb5f0eb882\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a364d9973454264984567cd8f967f7535e0bf49999e7bdb0f69c2bd3146e873a\",\"dweb:/ipfs/Qmdb7ARgPNTrS2LwXaNvTNJDabgMnNxC37jmba6BkUqBpZ\"]},\"interface/IBalancerSwap/IWETH.sol\":{\"keccak256\":\"0x0ab6cce9eb4524e1696a264f8248c070888249eeddb2069b54b97a9b51d9dced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4eb664a3f3293da94fef29be643ce24489b8400ed3abb4f8cb9bbdb820f7963\",\"dweb:/ipfs/QmWYSvpdamh599WboKCLdmPTnrpVCZiiKy5z2dJbNCkJwf\"]},\"interface/IERC20.sol\":{\"keccak256\":\"0x03ccb68ee528c8622d5724957a73d3e44bad34b72bd2c60eba1cd34f64648a44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7547429308e6183385c591133716e070fa171218d4c83069d3861546c9bf245a\",\"dweb:/ipfs/QmTuSMH6F7b3iz3fooHu4fA8xW3GpaV3u7XQszcQGxkX3f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IBalancerSwap/ISignaturesValidator.sol": {
				"ISignaturesValidator": {
					"abi": [
						{
							"inputs": [],
							"name": "getDomainSeparator",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getNextNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getDomainSeparator()": {
								"details": "Returns the EIP712 domain separator."
							},
							"getNextNonce(address)": {
								"details": "Returns the next nonce used by an address to sign messages."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getDomainSeparator()": "ed24911d",
							"getNextNonce(address)": "90193b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IBalancerSwap/ISignaturesValidator.sol\":\"ISignaturesValidator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IBalancerSwap/ISignaturesValidator.sol\":{\"keccak256\":\"0x4ab58b8091a33a19a893227764df867cd88a995a9dcb25949d7678897767d734\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c09782570400bbb4fb2ac88595e260029dcbdc0aff8bb22cf32ed3b57fb31e5\",\"dweb:/ipfs/QmbtyGBEc6TpyQupBnKK77AdeZuW93T8r9Ti2CR7xphcR4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IBalancerSwap/ITemporarilyPausable.sol": {
				"ITemporarilyPausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "paused",
									"type": "bool"
								}
							],
							"name": "PausedStateChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getPausedState",
							"outputs": [
								{
									"internalType": "bool",
									"name": "paused",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "pauseWindowEndTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "bufferPeriodEndTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"PausedStateChanged(bool)": {
								"details": "Emitted every time the pause state changes by `_setPaused`."
							}
						},
						"kind": "dev",
						"methods": {
							"getPausedState()": {
								"details": "Returns the current paused state."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getPausedState()": "1c0de051"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"}},\"kind\":\"dev\",\"methods\":{\"getPausedState()\":{\"details\":\"Returns the current paused state.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IBalancerSwap/ITemporarilyPausable.sol\":\"ITemporarilyPausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IBalancerSwap/ITemporarilyPausable.sol\":{\"keccak256\":\"0xa98e85df4eda1a5ad27df1b40b2b09ded7359a9802856b3c80cf6f80db194d10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://883bbe9f194e440fa25904d231937d881f1c148935bb1078fd4f402bdc2ac56c\",\"dweb:/ipfs/QmZTdcv2PdBPJv4vvtTNRV4UfEZ22f9TCpNfX7PjV9qXWA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IBalancerSwap/IVault.sol": {
				"IVault": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IAuthorizer",
									"name": "newAuthorizer",
									"type": "address"
								}
							],
							"name": "AuthorizerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ExternalBalanceTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IFlashLoanRecipient",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "feeAmount",
									"type": "uint256"
								}
							],
							"name": "FlashLoan",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "delta",
									"type": "int256"
								}
							],
							"name": "InternalBalanceChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "paused",
									"type": "bool"
								}
							],
							"name": "PausedStateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "liquidityProvider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "contract IERC20[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "int256[]",
									"name": "deltas",
									"type": "int256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "protocolFeeAmounts",
									"type": "uint256[]"
								}
							],
							"name": "PoolBalanceChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "assetManager",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "cashDelta",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "managedDelta",
									"type": "int256"
								}
							],
							"name": "PoolBalanceManaged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "poolAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum IVault.PoolSpecialization",
									"name": "specialization",
									"type": "uint8"
								}
							],
							"name": "PoolRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "relayer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "RelayerApprovalChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "contract IERC20[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "TokensDeregistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "contract IERC20[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "assetManagers",
									"type": "address[]"
								}
							],
							"name": "TokensRegistered",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "contract IWETH",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum IVault.SwapKind",
									"name": "kind",
									"type": "uint8"
								},
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "poolId",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "assetInIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "assetOutIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "userData",
											"type": "bytes"
										}
									],
									"internalType": "struct IVault.BatchSwapStep[]",
									"name": "swaps",
									"type": "tuple[]"
								},
								{
									"internalType": "contract IAsset[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "fromInternalBalance",
											"type": "bool"
										},
										{
											"internalType": "address payable",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "toInternalBalance",
											"type": "bool"
										}
									],
									"internalType": "struct IVault.FundManagement",
									"name": "funds",
									"type": "tuple"
								},
								{
									"internalType": "int256[]",
									"name": "limits",
									"type": "int256[]"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "batchSwap",
							"outputs": [
								{
									"internalType": "int256[]",
									"name": "",
									"type": "int256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"internalType": "contract IERC20[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "deregisterTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "recipient",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "contract IAsset[]",
											"name": "assets",
											"type": "address[]"
										},
										{
											"internalType": "uint256[]",
											"name": "minAmountsOut",
											"type": "uint256[]"
										},
										{
											"internalType": "bytes",
											"name": "userData",
											"type": "bytes"
										},
										{
											"internalType": "bool",
											"name": "toInternalBalance",
											"type": "bool"
										}
									],
									"internalType": "struct IVault.ExitPoolRequest",
									"name": "request",
									"type": "tuple"
								}
							],
							"name": "exitPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IFlashLoanRecipient",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "contract IERC20[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								}
							],
							"name": "flashLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAuthorizer",
							"outputs": [
								{
									"internalType": "contract IAuthorizer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDomainSeparator",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "contract IERC20[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "getInternalBalance",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getNextNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPausedState",
							"outputs": [
								{
									"internalType": "bool",
									"name": "paused",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "pauseWindowEndTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "bufferPeriodEndTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "enum IVault.PoolSpecialization",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getPoolTokenInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "cash",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "managed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastChangeBlock",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "assetManager",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								}
							],
							"name": "getPoolTokens",
							"outputs": [
								{
									"internalType": "contract IERC20[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "balances",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "lastChangeBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getProtocolFeesCollector",
							"outputs": [
								{
									"internalType": "contract IProtocolFeesCollector",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "relayer",
									"type": "address"
								}
							],
							"name": "hasApprovedRelayer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "contract IAsset[]",
											"name": "assets",
											"type": "address[]"
										},
										{
											"internalType": "uint256[]",
											"name": "maxAmountsIn",
											"type": "uint256[]"
										},
										{
											"internalType": "bytes",
											"name": "userData",
											"type": "bytes"
										},
										{
											"internalType": "bool",
											"name": "fromInternalBalance",
											"type": "bool"
										}
									],
									"internalType": "struct IVault.JoinPoolRequest",
									"name": "request",
									"type": "tuple"
								}
							],
							"name": "joinPool",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "enum IVault.PoolBalanceOpKind",
											"name": "kind",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "poolId",
											"type": "bytes32"
										},
										{
											"internalType": "contract IERC20",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct IVault.PoolBalanceOp[]",
									"name": "ops",
									"type": "tuple[]"
								}
							],
							"name": "managePoolBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "enum IVault.UserBalanceOpKind",
											"name": "kind",
											"type": "uint8"
										},
										{
											"internalType": "contract IAsset",
											"name": "asset",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "address payable",
											"name": "recipient",
											"type": "address"
										}
									],
									"internalType": "struct IVault.UserBalanceOp[]",
									"name": "ops",
									"type": "tuple[]"
								}
							],
							"name": "manageUserBalance",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum IVault.SwapKind",
									"name": "kind",
									"type": "uint8"
								},
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "poolId",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "assetInIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "assetOutIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "userData",
											"type": "bytes"
										}
									],
									"internalType": "struct IVault.BatchSwapStep[]",
									"name": "swaps",
									"type": "tuple[]"
								},
								{
									"internalType": "contract IAsset[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "fromInternalBalance",
											"type": "bool"
										},
										{
											"internalType": "address payable",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "toInternalBalance",
											"type": "bool"
										}
									],
									"internalType": "struct IVault.FundManagement",
									"name": "funds",
									"type": "tuple"
								}
							],
							"name": "queryBatchSwap",
							"outputs": [
								{
									"internalType": "int256[]",
									"name": "assetDeltas",
									"type": "int256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum IVault.PoolSpecialization",
									"name": "specialization",
									"type": "uint8"
								}
							],
							"name": "registerPool",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"internalType": "contract IERC20[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "assetManagers",
									"type": "address[]"
								}
							],
							"name": "registerTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IAuthorizer",
									"name": "newAuthorizer",
									"type": "address"
								}
							],
							"name": "setAuthorizer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "paused",
									"type": "bool"
								}
							],
							"name": "setPaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "relayer",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setRelayerApproval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "poolId",
											"type": "bytes32"
										},
										{
											"internalType": "enum IVault.SwapKind",
											"name": "kind",
											"type": "uint8"
										},
										{
											"internalType": "contract IAsset",
											"name": "assetIn",
											"type": "address"
										},
										{
											"internalType": "contract IAsset",
											"name": "assetOut",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "userData",
											"type": "bytes"
										}
									],
									"internalType": "struct IVault.SingleSwap",
									"name": "singleSwap",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "fromInternalBalance",
											"type": "bool"
										},
										{
											"internalType": "address payable",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "toInternalBalance",
											"type": "bool"
										}
									],
									"internalType": "struct IVault.FundManagement",
									"name": "funds",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"AuthorizerChanged(address)": {
								"details": "Emitted when a new authorizer is set by `setAuthorizer`."
							},
							"ExternalBalanceTransfer(address,address,address,uint256)": {
								"details": "Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account."
							},
							"FlashLoan(address,address,uint256,uint256)": {
								"details": "Emitted for each individual flash loan performed by `flashLoan`."
							},
							"InternalBalanceChanged(address,address,int256)": {
								"details": "Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through interacting with Pools using Internal Balance. Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH address."
							},
							"PoolBalanceChanged(bytes32,address,address[],int256[],uint256[])": {
								"details": "Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively."
							},
							"PoolBalanceManaged(bytes32,address,address,int256,int256)": {
								"details": "Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`."
							},
							"PoolRegistered(bytes32,address,uint8)": {
								"details": "Emitted when a Pool is registered by calling `registerPool`."
							},
							"RelayerApprovalChanged(address,address,bool)": {
								"details": "Emitted every time a relayer is approved or disapproved by `setRelayerApproval`."
							},
							"Swap(bytes32,address,address,uint256,uint256)": {
								"details": "Emitted for each individual swap performed by `swap` or `batchSwap`."
							},
							"TokensDeregistered(bytes32,address[])": {
								"details": "Emitted when a Pool deregisters tokens by calling `deregisterTokens`."
							},
							"TokensRegistered(bytes32,address[],address[])": {
								"details": "Emitted when a Pool registers tokens by calling `registerTokens`."
							}
						},
						"kind": "dev",
						"methods": {
							"WETH()": {
								"details": "Returns the Vault's WETH instance."
							},
							"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": {
								"details": "Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events."
							},
							"deregisterTokens(bytes32,address[])": {
								"details": "Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event."
							},
							"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": {
								"details": "Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event."
							},
							"flashLoan(address,address[],uint256[],bytes)": {
								"details": "Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events."
							},
							"getAuthorizer()": {
								"details": "Returns the Vault's Authorizer."
							},
							"getDomainSeparator()": {
								"details": "Returns the EIP712 domain separator."
							},
							"getInternalBalance(address,address[])": {
								"details": "Returns `user`'s Internal Balance for a set of tokens."
							},
							"getNextNonce(address)": {
								"details": "Returns the next nonce used by an address to sign messages."
							},
							"getPausedState()": {
								"details": "Returns the current paused state."
							},
							"getPool(bytes32)": {
								"details": "Returns a Pool's contract address and specialization setting."
							},
							"getPoolTokenInfo(bytes32,address)": {
								"details": "Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager."
							},
							"getPoolTokens(bytes32)": {
								"details": "Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead."
							},
							"getProtocolFeesCollector()": {
								"details": "Returns the current protocol fee module."
							},
							"hasApprovedRelayer(address,address)": {
								"details": "Returns true if `user` has approved `relayer` to act as a relayer for them."
							},
							"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": {
								"details": "Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event."
							},
							"managePoolBalance((uint8,bytes32,address,uint256)[])": {
								"details": "Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."
							},
							"manageUserBalance((uint8,address,uint256,address,address)[])": {
								"details": "Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them."
							},
							"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))": {
								"details": "Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction."
							},
							"registerPool(uint8)": {
								"details": "Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event."
							},
							"registerTokens(bytes32,address[],address[])": {
								"details": "Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event."
							},
							"setAuthorizer(address)": {
								"details": "Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event."
							},
							"setPaused(bool)": {
								"details": "Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited."
							},
							"setRelayerApproval(address,address,bool)": {
								"details": "Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event."
							},
							"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": {
								"details": "Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": "945bcec9",
							"deregisterTokens(bytes32,address[])": "7d3aeb96",
							"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "8bdb3913",
							"flashLoan(address,address[],uint256[],bytes)": "5c38449e",
							"getAuthorizer()": "aaabadc5",
							"getDomainSeparator()": "ed24911d",
							"getInternalBalance(address,address[])": "0f5a6efa",
							"getNextNonce(address)": "90193b7c",
							"getPausedState()": "1c0de051",
							"getPool(bytes32)": "f6c00927",
							"getPoolTokenInfo(bytes32,address)": "b05f8e48",
							"getPoolTokens(bytes32)": "f94d4668",
							"getProtocolFeesCollector()": "d2946c2b",
							"hasApprovedRelayer(address,address)": "fec90d72",
							"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "b95cac28",
							"managePoolBalance((uint8,bytes32,address,uint256)[])": "e6c46092",
							"manageUserBalance((uint8,address,uint256,address,address)[])": "0e8e3e84",
							"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))": "f84d066e",
							"registerPool(uint8)": "09b2760f",
							"registerTokens(bytes32,address[],address[])": "66a9c7d2",
							"setAuthorizer(address)": "058a628f",
							"setPaused(bool)": "16c38b3c",
							"setRelayerApproval(address,address,bool)": "fa6e671d",
							"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": "52bbbe29"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExternalBalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"InternalBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"protocolFeeAmounts\",\"type\":\"uint256[]\"}],\"name\":\"PoolBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cashDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"managedDelta\",\"type\":\"int256\"}],\"name\":\"PoolBalanceManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"RelayerApprovalChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"TokensDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"TokensRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"deregisterTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.ExitPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"exitPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getInternalBalance\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeesCollector\",\"outputs\":[{\"internalType\":\"contract IProtocolFeesCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"hasApprovedRelayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.JoinPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.PoolBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IVault.PoolBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"managePoolBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.UserBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct IVault.UserBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"manageUserBalance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"}],\"name\":\"queryBatchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"assetDeltas\",\"type\":\"int256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"registerTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setRelayerApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AuthorizerChanged(address)\":{\"details\":\"Emitted when a new authorizer is set by `setAuthorizer`.\"},\"ExternalBalanceTransfer(address,address,address,uint256)\":{\"details\":\"Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\"},\"FlashLoan(address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual flash loan performed by `flashLoan`.\"},\"InternalBalanceChanged(address,address,int256)\":{\"details\":\"Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through interacting with Pools using Internal Balance. Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH address.\"},\"PoolBalanceChanged(bytes32,address,address[],int256[],uint256[])\":{\"details\":\"Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\"},\"PoolBalanceManaged(bytes32,address,address,int256,int256)\":{\"details\":\"Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\"},\"PoolRegistered(bytes32,address,uint8)\":{\"details\":\"Emitted when a Pool is registered by calling `registerPool`.\"},\"RelayerApprovalChanged(address,address,bool)\":{\"details\":\"Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\"},\"Swap(bytes32,address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual swap performed by `swap` or `batchSwap`.\"},\"TokensDeregistered(bytes32,address[])\":{\"details\":\"Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\"},\"TokensRegistered(bytes32,address[],address[])\":{\"details\":\"Emitted when a Pool registers tokens by calling `registerTokens`.\"}},\"kind\":\"dev\",\"methods\":{\"WETH()\":{\"details\":\"Returns the Vault's WETH instance.\"},\"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)\":{\"details\":\"Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events.\"},\"deregisterTokens(bytes32,address[])\":{\"details\":\"Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event.\"},\"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event.\"},\"flashLoan(address,address[],uint256[],bytes)\":{\"details\":\"Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events.\"},\"getAuthorizer()\":{\"details\":\"Returns the Vault's Authorizer.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getInternalBalance(address,address[])\":{\"details\":\"Returns `user`'s Internal Balance for a set of tokens.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"},\"getPausedState()\":{\"details\":\"Returns the current paused state.\"},\"getPool(bytes32)\":{\"details\":\"Returns a Pool's contract address and specialization setting.\"},\"getPoolTokenInfo(bytes32,address)\":{\"details\":\"Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager.\"},\"getPoolTokens(bytes32)\":{\"details\":\"Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead.\"},\"getProtocolFeesCollector()\":{\"details\":\"Returns the current protocol fee module.\"},\"hasApprovedRelayer(address,address)\":{\"details\":\"Returns true if `user` has approved `relayer` to act as a relayer for them.\"},\"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event.\"},\"managePoolBalance((uint8,bytes32,address,uint256)[])\":{\"details\":\"Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\"},\"manageUserBalance((uint8,address,uint256,address,address)[])\":{\"details\":\"Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\"},\"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))\":{\"details\":\"Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction.\"},\"registerPool(uint8)\":{\"details\":\"Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event.\"},\"registerTokens(bytes32,address[],address[])\":{\"details\":\"Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event.\"},\"setAuthorizer(address)\":{\"details\":\"Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event.\"},\"setPaused(bool)\":{\"details\":\"Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited.\"},\"setRelayerApproval(address,address,bool)\":{\"details\":\"Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event.\"},\"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)\":{\"details\":\"Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IBalancerSwap/IVault.sol\":\"IVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IBalancerSwap/IAsset.sol\":{\"keccak256\":\"0xf9b97c4e6ad7d344013a3071282f213038924e9c3b6ac6f17196a40941fd64d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b06f4cccbe42b2f974fe2571f2267414bbfb491c0b2d94017f5f832b18c7f956\",\"dweb:/ipfs/QmZKi6Hd3nnhS3Rtd5Umz4eSVZ3kufyFARRuyeaeeaAbHT\"]},\"interface/IBalancerSwap/IAuthorizer.sol\":{\"keccak256\":\"0xe9cf877950117afb454027ea900a563bd6b643bf4425b19dcc1e5954a267fe51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99a8246517f1eafabec673ef93d0863aaccf0aa3b6fdb096d88e8f531e241f58\",\"dweb:/ipfs/QmNi32iE95ocFG8pjLNWbgQdqATPjJH8enSA2hFSP2HJ9h\"]},\"interface/IBalancerSwap/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xb6e7d4649590d068d010a9ed4e06388c11a224708357371e89374f9199d5dfdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1c14e57b54eb3089611debfd069c6efd798647c7b0057b37d6df9f9d35e0be3\",\"dweb:/ipfs/QmaaCtfeKBisvW4T6GrwsxpocK6ruUyyJTUFAjZRjvLuFQ\"]},\"interface/IBalancerSwap/IProtocolFeesCollector.sol\":{\"keccak256\":\"0x62f4f3cca283df89f13c476bb5991938e0683949ebee0ee6336b8d8d7f84320e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://081cc19ea0b102d54426442bb0840d5a981a301b5441298dee07f198c61f1cd5\",\"dweb:/ipfs/QmRZ5JprGS9nGmX7hWpAfWguiPC8ohjj5hCtCcHSLCKY4X\"]},\"interface/IBalancerSwap/ISignaturesValidator.sol\":{\"keccak256\":\"0x4ab58b8091a33a19a893227764df867cd88a995a9dcb25949d7678897767d734\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c09782570400bbb4fb2ac88595e260029dcbdc0aff8bb22cf32ed3b57fb31e5\",\"dweb:/ipfs/QmbtyGBEc6TpyQupBnKK77AdeZuW93T8r9Ti2CR7xphcR4\"]},\"interface/IBalancerSwap/ITemporarilyPausable.sol\":{\"keccak256\":\"0xa98e85df4eda1a5ad27df1b40b2b09ded7359a9802856b3c80cf6f80db194d10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://883bbe9f194e440fa25904d231937d881f1c148935bb1078fd4f402bdc2ac56c\",\"dweb:/ipfs/QmZTdcv2PdBPJv4vvtTNRV4UfEZ22f9TCpNfX7PjV9qXWA\"]},\"interface/IBalancerSwap/IVault.sol\":{\"keccak256\":\"0xe0d5b33db297fba76bcc6d5693aeb91b719936007947976e35a317fb5f0eb882\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a364d9973454264984567cd8f967f7535e0bf49999e7bdb0f69c2bd3146e873a\",\"dweb:/ipfs/Qmdb7ARgPNTrS2LwXaNvTNJDabgMnNxC37jmba6BkUqBpZ\"]},\"interface/IBalancerSwap/IWETH.sol\":{\"keccak256\":\"0x0ab6cce9eb4524e1696a264f8248c070888249eeddb2069b54b97a9b51d9dced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4eb664a3f3293da94fef29be643ce24489b8400ed3abb4f8cb9bbdb820f7963\",\"dweb:/ipfs/QmWYSvpdamh599WboKCLdmPTnrpVCZiiKy5z2dJbNCkJwf\"]},\"interface/IERC20.sol\":{\"keccak256\":\"0x03ccb68ee528c8622d5724957a73d3e44bad34b72bd2c60eba1cd34f64648a44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7547429308e6183385c591133716e070fa171218d4c83069d3861546c9bf245a\",\"dweb:/ipfs/QmTuSMH6F7b3iz3fooHu4fA8xW3GpaV3u7XQszcQGxkX3f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IBalancerSwap/IWETH.sol": {
				"IWETH": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"deposit()": "d0e30db0",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IBalancerSwap/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IBalancerSwap/IWETH.sol\":{\"keccak256\":\"0x0ab6cce9eb4524e1696a264f8248c070888249eeddb2069b54b97a9b51d9dced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4eb664a3f3293da94fef29be643ce24489b8400ed3abb4f8cb9bbdb820f7963\",\"dweb:/ipfs/QmWYSvpdamh599WboKCLdmPTnrpVCZiiKy5z2dJbNCkJwf\"]},\"interface/IERC20.sol\":{\"keccak256\":\"0x03ccb68ee528c8622d5724957a73d3e44bad34b72bd2c60eba1cd34f64648a44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7547429308e6183385c591133716e070fa171218d4c83069d3861546c9bf245a\",\"dweb:/ipfs/QmTuSMH6F7b3iz3fooHu4fA8xW3GpaV3u7XQszcQGxkX3f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IBarterswapV2Router01.sol": {
				"IBarterswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IBarterswapV2Router01.sol\":\"IBarterswapV2Router01\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IBarterswapV2Router01.sol\":{\"keccak256\":\"0x891e6625090bc8343409a946d29eb82be0a323d2d8233066ee60d53ac7fbdab4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6b224ba9f1157692d1cf28606abb6c63bda0e5f56726165615a45f24d35b90\",\"dweb:/ipfs/QmTox7NatzKkrAVtnxCcoUpqGp6uvvtj7WwSRJaTz5MyxZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IERC20.sol\":{\"keccak256\":\"0x03ccb68ee528c8622d5724957a73d3e44bad34b72bd2c60eba1cd34f64648a44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7547429308e6183385c591133716e070fa171218d4c83069d3861546c9bf245a\",\"dweb:/ipfs/QmTuSMH6F7b3iz3fooHu4fA8xW3GpaV3u7XQszcQGxkX3f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/ISwap.sol": {
				"ISwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "enum IVault.SwapKind",
									"name": "kind",
									"type": "uint8"
								},
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "poolId",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "assetInIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "assetOutIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "userData",
											"type": "bytes"
										}
									],
									"internalType": "struct IVault.BatchSwapStep[]",
									"name": "swaps",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "fromInternalBalance",
											"type": "bool"
										},
										{
											"internalType": "address payable",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "toInternalBalance",
											"type": "bool"
										}
									],
									"internalType": "struct IVault.FundManagement",
									"name": "funds",
									"type": "tuple"
								},
								{
									"internalType": "contract IAsset[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "int256[]",
									"name": "limit",
									"type": "int256[]"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "filterBalancer",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "inputAddre",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_crvParams",
									"type": "uint256[]"
								}
							],
							"name": "filterCurve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountInArr",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMinArr",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "pathArr",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadLine",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "inputAddre",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "outAddre",
									"type": "address"
								}
							],
							"name": "filterSwap",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"filterBalancer(uint8,(bytes32,uint256,uint256,uint256,bytes)[],(address,bool,address,bool),address[],int256[],uint256)": "1738b50e",
							"filterCurve(address,address,uint256[])": "3502eea8",
							"filterSwap(uint256,uint256,bytes,address,uint256,address,address)": "b1a271d4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"int256[]\",\"name\":\"limit\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"filterBalancer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputAddre\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_crvParams\",\"type\":\"uint256[]\"}],\"name\":\"filterCurve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountInArr\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinArr\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"pathArr\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadLine\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"inputAddre\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outAddre\",\"type\":\"address\"}],\"name\":\"filterSwap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ISwap.sol\":\"ISwap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IBalancerSwap/IAsset.sol\":{\"keccak256\":\"0xf9b97c4e6ad7d344013a3071282f213038924e9c3b6ac6f17196a40941fd64d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b06f4cccbe42b2f974fe2571f2267414bbfb491c0b2d94017f5f832b18c7f956\",\"dweb:/ipfs/QmZKi6Hd3nnhS3Rtd5Umz4eSVZ3kufyFARRuyeaeeaAbHT\"]},\"interface/IBalancerSwap/IAuthorizer.sol\":{\"keccak256\":\"0xe9cf877950117afb454027ea900a563bd6b643bf4425b19dcc1e5954a267fe51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99a8246517f1eafabec673ef93d0863aaccf0aa3b6fdb096d88e8f531e241f58\",\"dweb:/ipfs/QmNi32iE95ocFG8pjLNWbgQdqATPjJH8enSA2hFSP2HJ9h\"]},\"interface/IBalancerSwap/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xb6e7d4649590d068d010a9ed4e06388c11a224708357371e89374f9199d5dfdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1c14e57b54eb3089611debfd069c6efd798647c7b0057b37d6df9f9d35e0be3\",\"dweb:/ipfs/QmaaCtfeKBisvW4T6GrwsxpocK6ruUyyJTUFAjZRjvLuFQ\"]},\"interface/IBalancerSwap/IProtocolFeesCollector.sol\":{\"keccak256\":\"0x62f4f3cca283df89f13c476bb5991938e0683949ebee0ee6336b8d8d7f84320e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://081cc19ea0b102d54426442bb0840d5a981a301b5441298dee07f198c61f1cd5\",\"dweb:/ipfs/QmRZ5JprGS9nGmX7hWpAfWguiPC8ohjj5hCtCcHSLCKY4X\"]},\"interface/IBalancerSwap/ISignaturesValidator.sol\":{\"keccak256\":\"0x4ab58b8091a33a19a893227764df867cd88a995a9dcb25949d7678897767d734\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c09782570400bbb4fb2ac88595e260029dcbdc0aff8bb22cf32ed3b57fb31e5\",\"dweb:/ipfs/QmbtyGBEc6TpyQupBnKK77AdeZuW93T8r9Ti2CR7xphcR4\"]},\"interface/IBalancerSwap/ITemporarilyPausable.sol\":{\"keccak256\":\"0xa98e85df4eda1a5ad27df1b40b2b09ded7359a9802856b3c80cf6f80db194d10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://883bbe9f194e440fa25904d231937d881f1c148935bb1078fd4f402bdc2ac56c\",\"dweb:/ipfs/QmZTdcv2PdBPJv4vvtTNRV4UfEZ22f9TCpNfX7PjV9qXWA\"]},\"interface/IBalancerSwap/IVault.sol\":{\"keccak256\":\"0xe0d5b33db297fba76bcc6d5693aeb91b719936007947976e35a317fb5f0eb882\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a364d9973454264984567cd8f967f7535e0bf49999e7bdb0f69c2bd3146e873a\",\"dweb:/ipfs/Qmdb7ARgPNTrS2LwXaNvTNJDabgMnNxC37jmba6BkUqBpZ\"]},\"interface/IBalancerSwap/IWETH.sol\":{\"keccak256\":\"0x0ab6cce9eb4524e1696a264f8248c070888249eeddb2069b54b97a9b51d9dced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4eb664a3f3293da94fef29be643ce24489b8400ed3abb4f8cb9bbdb820f7963\",\"dweb:/ipfs/QmWYSvpdamh599WboKCLdmPTnrpVCZiiKy5z2dJbNCkJwf\"]},\"interface/IERC20.sol\":{\"keccak256\":\"0x03ccb68ee528c8622d5724957a73d3e44bad34b72bd2c60eba1cd34f64648a44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7547429308e6183385c591133716e070fa171218d4c83069d3861546c9bf245a\",\"dweb:/ipfs/QmTuSMH6F7b3iz3fooHu4fA8xW3GpaV3u7XQszcQGxkX3f\"]},\"interface/ISwap.sol\":{\"keccak256\":\"0x262c1adbd8e45f82687a76fd51b6075fdd1113f9e40552549c3f42dd78c8de57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0e9240c74716ac827bc44c6e925b70fc1688f28758224af38e66e6dcbf11b88\",\"dweb:/ipfs/QmPMHtJAnuvbXS8wT98P5cN4TNUMBadFJEyCFU9gBoXGyU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IWETH9.sol": {
				"IWETH9": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Interface for WETH9",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"deposit()": "d0e30db0",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Interface for WETH9\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit()\":{\"notice\":\"Deposit ether to get wrapped ether\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw wrapped ether to get ether\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IWETH9.sol\":\"IWETH9\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IERC20.sol\":{\"keccak256\":\"0x03ccb68ee528c8622d5724957a73d3e44bad34b72bd2c60eba1cd34f64648a44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7547429308e6183385c591133716e070fa171218d4c83069d3861546c9bf245a\",\"dweb:/ipfs/QmTuSMH6F7b3iz3fooHu4fA8xW3GpaV3u7XQszcQGxkX3f\"]},\"interface/IWETH9.sol\":{\"keccak256\":\"0x1770d90fecc676a948b02cd4391a58a57c8b9e441fedbaee96270ac537998392\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee337144705d3a966aeb618acdd3c3553251c65285b38fb97128d40d85f788c3\",\"dweb:/ipfs/QmXi1BDhKk2SEDrbDNH7LDpjfcNxhHfQ9g2NFwUGS7Jfsw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deposit()": {
								"notice": "Deposit ether to get wrapped ether"
							},
							"withdraw(uint256)": {
								"notice": "Withdraw wrapped ether to get ether"
							}
						},
						"version": 1
					}
				}
			},
			"libs/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libs/SafeMath.sol\":60:4638  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libs/SafeMath.sol\":60:4638  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c6083b9ba9416c5bd5ff054de71832fa05624a1a664992ae66c26d8f9b53cb4064736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c6083b9ba9416c5bd5ff054de71832fa05624a1a664992ae66c26d8f9b53cb4064736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 ADDMOD EXTCODESIZE SWAP12 0xA9 COINBASE PUSH13 0x5BD5FF054DE71832FA05624A1A PUSH7 0x4992AE66C26D8F SWAP12 MSTORE8 0xCB BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "60:4578:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c6083b9ba9416c5bd5ff054de71832fa05624a1a664992ae66c26d8f9b53cb4064736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 ADDMOD EXTCODESIZE SWAP12 0xA9 COINBASE PUSH13 0x5BD5FF054DE71832FA05624A1A PUSH7 0x4992AE66C26D8F SWAP12 MSTORE8 0xCB BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "60:4578:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 4638,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 60,
									"end": 4638,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c6083b9ba9416c5bd5ff054de71832fa05624a1a664992ae66c26d8f9b53cb4064736f6c63430008000033",
									".code": [
										{
											"begin": 60,
											"end": 4638,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 60,
											"end": 4638,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 60,
											"end": 4638,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 60,
											"end": 4638,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 4638,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 4638,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 60,
											"end": 4638,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 4638,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 60,
											"end": 4638,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libs/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libs/SafeMath.sol\":{\"keccak256\":\"0x857f2ba1d26da4919d4390ddd984a96e76730ee198550e3522f667297a084dda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1143a136d8b711d81feda93ac644fa9658c07de29ba69adcfae8b1213c56f0e\",\"dweb:/ipfs/QmbMNeiLRc3vwTWzseUMCxKEE7ARrNvN1CNKPu2EcV9sNG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"libs/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftaddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "HelpRoyalties",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libs/TransferHelper.sol\":87:2534  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libs/TransferHelper.sol\":87:2534  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xf938761c\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"libs/TransferHelper.sol\":1758:2527  function HelpRoyalties(address nftaddress, uint256 tokenId,uint256 _value) external view returns(address,uint256){... */\n    tag_2:\n      tag_3\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_4\n      swap2\n      swap1\n      tag_5\n      jump\t// in\n    tag_4:\n      tag_6\n      jump\t// in\n    tag_3:\n      mload(0x40)\n      tag_7\n      swap3\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_6:\n        /* \"libs/TransferHelper.sol\":1855:1862  address */\n      0x00\n        /* \"libs/TransferHelper.sol\":1863:1870  uint256 */\n      dup1\n        /* \"libs/TransferHelper.sol\":1890:1902  bool success */\n      0x00\n        /* \"libs/TransferHelper.sol\":1904:1921  bytes memory data */\n      dup1\n        /* \"libs/TransferHelper.sol\":1926:1936  nftaddress */\n      dup7\n        /* \"libs/TransferHelper.sol\":1926:1947  nftaddress.staticcall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"libs/TransferHelper.sol\":2003:2010  tokenId */\n      dup7\n        /* \"libs/TransferHelper.sol\":2011:2017  _value */\n      dup7\n        /* \"libs/TransferHelper.sol\":1948:2018  abi.encodeWithSignature(\"royaltyInfo(uint256,uint256)\",tokenId,_value) */\n      add(0x24, mload(0x40))\n      tag_10\n      swap3\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x2a55205a00000000000000000000000000000000000000000000000000000000)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"libs/TransferHelper.sol\":1926:2019  nftaddress.staticcall(abi.encodeWithSignature(\"royaltyInfo(uint256,uint256)\",tokenId,_value)) */\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_16\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_15)\n    tag_16:\n      0x60\n      swap2\n      pop\n    tag_15:\n      pop\n        /* \"libs/TransferHelper.sol\":1889:2019  (bool success, bytes memory data) =  nftaddress.staticcall(abi.encodeWithSignature(\"royaltyInfo(uint256,uint256)\",tokenId,_value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"libs/TransferHelper.sol\":2038:2045  success */\n      dup2\n        /* \"libs/TransferHelper.sol\":2038:2066  success && data.length == 64 */\n      dup1\n      iszero\n      tag_17\n      jumpi\n      pop\n        /* \"libs/TransferHelper.sol\":2064:2066  64 */\n      0x40\n        /* \"libs/TransferHelper.sol\":2049:2053  data */\n      dup2\n        /* \"libs/TransferHelper.sol\":2049:2060  data.length */\n      mload\n        /* \"libs/TransferHelper.sol\":2049:2066  data.length == 64 */\n      eq\n        /* \"libs/TransferHelper.sol\":2038:2066  success && data.length == 64 */\n    tag_17:\n        /* \"libs/TransferHelper.sol\":2035:2468  if(success && data.length == 64){... */\n      iszero\n      tag_18\n      jumpi\n        /* \"libs/TransferHelper.sol\":2091:2104  address addr1 */\n      0x00\n        /* \"libs/TransferHelper.sol\":2105:2119  uint256 value1 */\n      dup1\n        /* \"libs/TransferHelper.sol\":2132:2136  data */\n      dup3\n        /* \"libs/TransferHelper.sol\":2121:2156  abi.decode(data, (address,uint256)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"libs/TransferHelper.sol\":2090:2156  (address addr1,uint256 value1)=abi.decode(data, (address,uint256)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"libs/TransferHelper.sol\":2188:2189  0 */\n      0x00\n        /* \"libs/TransferHelper.sol\":2171:2190  addr1 != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"libs/TransferHelper.sol\":2171:2176  addr1 */\n      dup3\n        /* \"libs/TransferHelper.sol\":2171:2190  addr1 != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"libs/TransferHelper.sol\":2171:2204  addr1 != address(0) && value1 > 0 */\n      dup1\n      iszero\n      tag_21\n      jumpi\n      pop\n        /* \"libs/TransferHelper.sol\":2203:2204  0 */\n      0x00\n        /* \"libs/TransferHelper.sol\":2194:2200  value1 */\n      dup2\n        /* \"libs/TransferHelper.sol\":2194:2204  value1 > 0 */\n      gt\n        /* \"libs/TransferHelper.sol\":2171:2204  addr1 != address(0) && value1 > 0 */\n    tag_21:\n        /* \"libs/TransferHelper.sol\":2171:2241  addr1 != address(0) && value1 > 0 && value1 <= _value.mul(50).div(100) */\n      dup1\n      iszero\n      tag_22\n      jumpi\n      pop\n        /* \"libs/TransferHelper.sol\":2218:2241  _value.mul(50).div(100) */\n      tag_23\n        /* \"libs/TransferHelper.sol\":2237:2240  100 */\n      0x64\n        /* \"libs/TransferHelper.sol\":2218:2232  _value.mul(50) */\n      tag_24\n        /* \"libs/TransferHelper.sol\":2229:2231  50 */\n      0x32\n        /* \"libs/TransferHelper.sol\":2218:2224  _value */\n      dup11\n        /* \"libs/TransferHelper.sol\":2218:2228  _value.mul */\n      tag_25\n      swap1\n        /* \"libs/TransferHelper.sol\":2218:2232  _value.mul(50) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_24:\n        /* \"libs/TransferHelper.sol\":2218:2236  _value.mul(50).div */\n      tag_26\n      swap1\n        /* \"libs/TransferHelper.sol\":2218:2241  _value.mul(50).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_23:\n        /* \"libs/TransferHelper.sol\":2208:2214  value1 */\n      dup2\n        /* \"libs/TransferHelper.sol\":2208:2241  value1 <= _value.mul(50).div(100) */\n      gt\n      iszero\n        /* \"libs/TransferHelper.sol\":2171:2241  addr1 != address(0) && value1 > 0 && value1 <= _value.mul(50).div(100) */\n    tag_22:\n        /* \"libs/TransferHelper.sol\":2168:2449  if(addr1 != address(0) && value1 > 0 && value1 <= _value.mul(50).div(100)) {... */\n      iszero\n      tag_27\n      jumpi\n        /* \"libs/TransferHelper.sol\":2285:2290  addr1 */\n      dup2\n        /* \"libs/TransferHelper.sol\":2291:2297  value1 */\n      dup2\n        /* \"libs/TransferHelper.sol\":2277:2298  return( addr1,value1) */\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_9)\n        /* \"libs/TransferHelper.sol\":2168:2449  if(addr1 != address(0) && value1 > 0 && value1 <= _value.mul(50).div(100)) {... */\n    tag_27:\n        /* \"libs/TransferHelper.sol\":2328:2351  _value.mul(50).div(100) */\n      tag_29\n        /* \"libs/TransferHelper.sol\":2347:2350  100 */\n      0x64\n        /* \"libs/TransferHelper.sol\":2328:2342  _value.mul(50) */\n      tag_30\n        /* \"libs/TransferHelper.sol\":2339:2341  50 */\n      0x32\n        /* \"libs/TransferHelper.sol\":2328:2334  _value */\n      dup11\n        /* \"libs/TransferHelper.sol\":2328:2338  _value.mul */\n      tag_25\n      swap1\n        /* \"libs/TransferHelper.sol\":2328:2342  _value.mul(50) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_30:\n        /* \"libs/TransferHelper.sol\":2328:2346  _value.mul(50).div */\n      tag_26\n      swap1\n        /* \"libs/TransferHelper.sol\":2328:2351  _value.mul(50).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_29:\n        /* \"libs/TransferHelper.sol\":2319:2325  value1 */\n      dup2\n        /* \"libs/TransferHelper.sol\":2319:2351  value1 > _value.mul(50).div(100) */\n      gt\n        /* \"libs/TransferHelper.sol\":2316:2449  if(value1 > _value.mul(50).div(100)){... */\n      iszero\n      tag_31\n      jumpi\n        /* \"libs/TransferHelper.sol\":2391:2396  addr1 */\n      dup2\n        /* \"libs/TransferHelper.sol\":2397:2420  _value.mul(50).div(100) */\n      tag_32\n        /* \"libs/TransferHelper.sol\":2416:2419  100 */\n      0x64\n        /* \"libs/TransferHelper.sol\":2397:2411  _value.mul(50) */\n      tag_33\n        /* \"libs/TransferHelper.sol\":2408:2410  50 */\n      0x32\n        /* \"libs/TransferHelper.sol\":2397:2403  _value */\n      dup12\n        /* \"libs/TransferHelper.sol\":2397:2407  _value.mul */\n      tag_25\n      swap1\n        /* \"libs/TransferHelper.sol\":2397:2411  _value.mul(50) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_33:\n        /* \"libs/TransferHelper.sol\":2397:2415  _value.mul(50).div */\n      tag_26\n      swap1\n        /* \"libs/TransferHelper.sol\":2397:2420  _value.mul(50).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_32:\n        /* \"libs/TransferHelper.sol\":2383:2421  return (addr1,_value.mul(50).div(100)) */\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_9)\n        /* \"libs/TransferHelper.sol\":2316:2449  if(value1 > _value.mul(50).div(100)){... */\n    tag_31:\n        /* \"libs/TransferHelper.sol\":2035:2468  if(success && data.length == 64){... */\n      pop\n      pop\n    tag_18:\n        /* \"libs/TransferHelper.sol\":2498:2499  0 */\n      0x00\n        /* \"libs/TransferHelper.sol\":2501:2502  0 */\n      dup1\n        /* \"libs/TransferHelper.sol\":2483:2503  return(address(0),0) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"libs/TransferHelper.sol\":1758:2527  function HelpRoyalties(address nftaddress, uint256 tokenId,uint256 _value) external view returns(address,uint256){... */\n    tag_9:\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"libs/SafeMath.sol\":1618:2077  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_25:\n        /* \"libs/SafeMath.sol\":1676:1683  uint256 */\n      0x00\n        /* \"libs/SafeMath.sol\":1922:1923  0 */\n      dup1\n        /* \"libs/SafeMath.sol\":1917:1918  a */\n      dup4\n        /* \"libs/SafeMath.sol\":1917:1923  a == 0 */\n      eq\n        /* \"libs/SafeMath.sol\":1913:1958  if (a == 0) {... */\n      iszero\n      tag_35\n      jumpi\n        /* \"libs/SafeMath.sol\":1946:1947  0 */\n      0x00\n        /* \"libs/SafeMath.sol\":1939:1947  return 0 */\n      swap1\n      pop\n      jump(tag_34)\n        /* \"libs/SafeMath.sol\":1913:1958  if (a == 0) {... */\n    tag_35:\n        /* \"libs/SafeMath.sol\":1968:1977  uint256 c */\n      0x00\n        /* \"libs/SafeMath.sol\":1984:1985  b */\n      dup3\n        /* \"libs/SafeMath.sol\":1980:1981  a */\n      dup5\n        /* \"libs/SafeMath.sol\":1980:1985  a * b */\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"libs/SafeMath.sol\":1968:1985  uint256 c = a * b */\n      swap1\n      pop\n        /* \"libs/SafeMath.sol\":2012:2013  b */\n      dup3\n        /* \"libs/SafeMath.sol\":2007:2008  a */\n      dup5\n        /* \"libs/SafeMath.sol\":2003:2004  c */\n      dup3\n        /* \"libs/SafeMath.sol\":2003:2008  c / a */\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"libs/SafeMath.sol\":2003:2013  c / a == b */\n      eq\n        /* \"libs/SafeMath.sol\":1995:2051  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n        /* \"libs/SafeMath.sol\":2069:2070  c */\n      dup1\n        /* \"libs/SafeMath.sol\":2062:2070  return c */\n      swap2\n      pop\n      pop\n        /* \"libs/SafeMath.sol\":1618:2077  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_34:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"libs/SafeMath.sol\":2539:2669  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_26:\n        /* \"libs/SafeMath.sol\":2597:2604  uint256 */\n      0x00\n        /* \"libs/SafeMath.sol\":2623:2662  div(a, b, \"SafeMath: division by zero\") */\n      tag_44\n        /* \"libs/SafeMath.sol\":2627:2628  a */\n      dup4\n        /* \"libs/SafeMath.sol\":2630:2631  b */\n      dup4\n        /* \"libs/SafeMath.sol\":2623:2662  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"libs/SafeMath.sol\":2623:2626  div */\n      tag_45\n        /* \"libs/SafeMath.sol\":2623:2662  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_44:\n        /* \"libs/SafeMath.sol\":2616:2662  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"libs/SafeMath.sol\":2539:2669  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"libs/SafeMath.sol\":3151:3423  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_45:\n        /* \"libs/SafeMath.sol\":3237:3244  uint256 */\n      0x00\n        /* \"libs/SafeMath.sol\":3268:3269  0 */\n      dup1\n        /* \"libs/SafeMath.sol\":3264:3265  b */\n      dup4\n        /* \"libs/SafeMath.sol\":3264:3269  b > 0 */\n      gt\n        /* \"libs/SafeMath.sol\":3271:3283  errorMessage */\n      dup3\n        /* \"libs/SafeMath.sol\":3256:3284  require(b > 0, errorMessage) */\n      swap1\n      tag_47\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n      pop\n        /* \"libs/SafeMath.sol\":3294:3303  uint256 c */\n      0x00\n        /* \"libs/SafeMath.sol\":3310:3311  b */\n      dup4\n        /* \"libs/SafeMath.sol\":3306:3307  a */\n      dup6\n        /* \"libs/SafeMath.sol\":3306:3311  a / b */\n      tag_50\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_50:\n        /* \"libs/SafeMath.sol\":3294:3311  uint256 c = a / b */\n      swap1\n      pop\n        /* \"libs/SafeMath.sol\":3415:3416  c */\n      dup1\n        /* \"libs/SafeMath.sol\":3408:3416  return c */\n      swap2\n      pop\n      pop\n        /* \"libs/SafeMath.sol\":3151:3423  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_52:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_54\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:311   */\n    tag_56:\n      0x00\n        /* \"#utility.yul\":248:254   */\n      dup2\n        /* \"#utility.yul\":242:255   */\n      mload\n        /* \"#utility.yul\":233:255   */\n      swap1\n      pop\n        /* \"#utility.yul\":264:305   */\n      tag_58\n        /* \"#utility.yul\":299:304   */\n      dup2\n        /* \"#utility.yul\":264:305   */\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":223:311   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":317:456   */\n    tag_60:\n      0x00\n        /* \"#utility.yul\":401:407   */\n      dup2\n        /* \"#utility.yul\":388:408   */\n      calldataload\n        /* \"#utility.yul\":379:408   */\n      swap1\n      pop\n        /* \"#utility.yul\":417:450   */\n      tag_62\n        /* \"#utility.yul\":444:449   */\n      dup2\n        /* \"#utility.yul\":417:450   */\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":369:456   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":462:605   */\n    tag_64:\n      0x00\n        /* \"#utility.yul\":550:556   */\n      dup2\n        /* \"#utility.yul\":544:557   */\n      mload\n        /* \"#utility.yul\":535:557   */\n      swap1\n      pop\n        /* \"#utility.yul\":566:599   */\n      tag_66\n        /* \"#utility.yul\":593:598   */\n      dup2\n        /* \"#utility.yul\":566:599   */\n      tag_63\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":525:605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:1067   */\n    tag_20:\n      0x00\n      dup1\n        /* \"#utility.yul\":755:757   */\n      0x40\n        /* \"#utility.yul\":743:752   */\n      dup4\n        /* \"#utility.yul\":734:741   */\n      dup6\n        /* \"#utility.yul\":730:753   */\n      sub\n        /* \"#utility.yul\":726:758   */\n      slt\n        /* \"#utility.yul\":723:725   */\n      iszero\n      tag_68\n      jumpi\n        /* \"#utility.yul\":771:772   */\n      0x00\n        /* \"#utility.yul\":768:769   */\n      dup1\n        /* \"#utility.yul\":761:773   */\n      revert\n        /* \"#utility.yul\":723:725   */\n    tag_68:\n        /* \"#utility.yul\":814:815   */\n      0x00\n        /* \"#utility.yul\":839:911   */\n      tag_69\n        /* \"#utility.yul\":903:910   */\n      dup6\n        /* \"#utility.yul\":894:900   */\n      dup3\n        /* \"#utility.yul\":883:892   */\n      dup7\n        /* \"#utility.yul\":879:901   */\n      add\n        /* \"#utility.yul\":839:911   */\n      tag_56\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":829:911   */\n      swap3\n      pop\n        /* \"#utility.yul\":785:921   */\n      pop\n        /* \"#utility.yul\":960:962   */\n      0x20\n        /* \"#utility.yul\":986:1050   */\n      tag_70\n        /* \"#utility.yul\":1042:1049   */\n      dup6\n        /* \"#utility.yul\":1033:1039   */\n      dup3\n        /* \"#utility.yul\":1022:1031   */\n      dup7\n        /* \"#utility.yul\":1018:1040   */\n      add\n        /* \"#utility.yul\":986:1050   */\n      tag_64\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":976:1050   */\n      swap2\n      pop\n        /* \"#utility.yul\":931:1060   */\n      pop\n        /* \"#utility.yul\":713:1067   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1073:1625   */\n    tag_5:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1215:1217   */\n      0x60\n        /* \"#utility.yul\":1203:1212   */\n      dup5\n        /* \"#utility.yul\":1194:1201   */\n      dup7\n        /* \"#utility.yul\":1190:1213   */\n      sub\n        /* \"#utility.yul\":1186:1218   */\n      slt\n        /* \"#utility.yul\":1183:1185   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":1231:1232   */\n      0x00\n        /* \"#utility.yul\":1228:1229   */\n      dup1\n        /* \"#utility.yul\":1221:1233   */\n      revert\n        /* \"#utility.yul\":1183:1185   */\n    tag_72:\n        /* \"#utility.yul\":1274:1275   */\n      0x00\n        /* \"#utility.yul\":1299:1352   */\n      tag_73\n        /* \"#utility.yul\":1344:1351   */\n      dup7\n        /* \"#utility.yul\":1335:1341   */\n      dup3\n        /* \"#utility.yul\":1324:1333   */\n      dup8\n        /* \"#utility.yul\":1320:1342   */\n      add\n        /* \"#utility.yul\":1299:1352   */\n      tag_52\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1289:1352   */\n      swap4\n      pop\n        /* \"#utility.yul\":1245:1362   */\n      pop\n        /* \"#utility.yul\":1401:1403   */\n      0x20\n        /* \"#utility.yul\":1427:1480   */\n      tag_74\n        /* \"#utility.yul\":1472:1479   */\n      dup7\n        /* \"#utility.yul\":1463:1469   */\n      dup3\n        /* \"#utility.yul\":1452:1461   */\n      dup8\n        /* \"#utility.yul\":1448:1470   */\n      add\n        /* \"#utility.yul\":1427:1480   */\n      tag_60\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1417:1480   */\n      swap3\n      pop\n        /* \"#utility.yul\":1372:1490   */\n      pop\n        /* \"#utility.yul\":1529:1531   */\n      0x40\n        /* \"#utility.yul\":1555:1608   */\n      tag_75\n        /* \"#utility.yul\":1600:1607   */\n      dup7\n        /* \"#utility.yul\":1591:1597   */\n      dup3\n        /* \"#utility.yul\":1580:1589   */\n      dup8\n        /* \"#utility.yul\":1576:1598   */\n      add\n        /* \"#utility.yul\":1555:1608   */\n      tag_60\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1545:1608   */\n      swap2\n      pop\n        /* \"#utility.yul\":1500:1618   */\n      pop\n        /* \"#utility.yul\":1173:1625   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1631:1757   */\n    tag_76:\n        /* \"#utility.yul\":1726:1750   */\n      tag_78\n        /* \"#utility.yul\":1744:1749   */\n      dup2\n        /* \"#utility.yul\":1726:1750   */\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1721:1724   */\n      dup3\n        /* \"#utility.yul\":1714:1751   */\n      mstore\n        /* \"#utility.yul\":1704:1757   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1763:2136   */\n    tag_80:\n      0x00\n        /* \"#utility.yul\":1895:1933   */\n      tag_82\n        /* \"#utility.yul\":1927:1932   */\n      dup3\n        /* \"#utility.yul\":1895:1933   */\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1949:2037   */\n      tag_84\n        /* \"#utility.yul\":2030:2036   */\n      dup2\n        /* \"#utility.yul\":2025:2028   */\n      dup6\n        /* \"#utility.yul\":1949:2037   */\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1942:2037   */\n      swap4\n      pop\n        /* \"#utility.yul\":2046:2098   */\n      tag_86\n        /* \"#utility.yul\":2091:2097   */\n      dup2\n        /* \"#utility.yul\":2086:2089   */\n      dup6\n        /* \"#utility.yul\":2079:2083   */\n      0x20\n        /* \"#utility.yul\":2072:2077   */\n      dup7\n        /* \"#utility.yul\":2068:2084   */\n      add\n        /* \"#utility.yul\":2046:2098   */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2123:2129   */\n      dup1\n        /* \"#utility.yul\":2118:2121   */\n      dup5\n        /* \"#utility.yul\":2114:2130   */\n      add\n        /* \"#utility.yul\":2107:2130   */\n      swap2\n      pop\n        /* \"#utility.yul\":1871:2136   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2142:2506   */\n    tag_88:\n      0x00\n        /* \"#utility.yul\":2258:2297   */\n      tag_90\n        /* \"#utility.yul\":2291:2296   */\n      dup3\n        /* \"#utility.yul\":2258:2297   */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2313:2384   */\n      tag_92\n        /* \"#utility.yul\":2377:2383   */\n      dup2\n        /* \"#utility.yul\":2372:2375   */\n      dup6\n        /* \"#utility.yul\":2313:2384   */\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2306:2384   */\n      swap4\n      pop\n        /* \"#utility.yul\":2393:2445   */\n      tag_94\n        /* \"#utility.yul\":2438:2444   */\n      dup2\n        /* \"#utility.yul\":2433:2436   */\n      dup6\n        /* \"#utility.yul\":2426:2430   */\n      0x20\n        /* \"#utility.yul\":2419:2424   */\n      dup7\n        /* \"#utility.yul\":2415:2431   */\n      add\n        /* \"#utility.yul\":2393:2445   */\n      tag_87\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2470:2499   */\n      tag_95\n        /* \"#utility.yul\":2492:2498   */\n      dup2\n        /* \"#utility.yul\":2470:2499   */\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2465:2468   */\n      dup5\n        /* \"#utility.yul\":2461:2500   */\n      add\n        /* \"#utility.yul\":2454:2500   */\n      swap2\n      pop\n        /* \"#utility.yul\":2234:2506   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2512:2877   */\n    tag_97:\n      0x00\n        /* \"#utility.yul\":2675:2742   */\n      tag_99\n        /* \"#utility.yul\":2739:2741   */\n      0x21\n        /* \"#utility.yul\":2734:2737   */\n      dup4\n        /* \"#utility.yul\":2675:2742   */\n      tag_93\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":2668:2742   */\n      swap2\n      pop\n        /* \"#utility.yul\":2772:2806   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":2768:2769   */\n      0x00\n        /* \"#utility.yul\":2763:2766   */\n      dup4\n        /* \"#utility.yul\":2759:2770   */\n      add\n        /* \"#utility.yul\":2752:2807   */\n      mstore\n        /* \"#utility.yul\":2838:2841   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2833:2835   */\n      0x20\n        /* \"#utility.yul\":2828:2831   */\n      dup4\n        /* \"#utility.yul\":2824:2836   */\n      add\n        /* \"#utility.yul\":2817:2842   */\n      mstore\n        /* \"#utility.yul\":2868:2870   */\n      0x40\n        /* \"#utility.yul\":2863:2866   */\n      dup3\n        /* \"#utility.yul\":2859:2871   */\n      add\n        /* \"#utility.yul\":2852:2871   */\n      swap1\n      pop\n        /* \"#utility.yul\":2658:2877   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2883:3001   */\n    tag_100:\n        /* \"#utility.yul\":2970:2994   */\n      tag_102\n        /* \"#utility.yul\":2988:2993   */\n      dup2\n        /* \"#utility.yul\":2970:2994   */\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2965:2968   */\n      dup3\n        /* \"#utility.yul\":2958:2995   */\n      mstore\n        /* \"#utility.yul\":2948:3001   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3007:3133   */\n    tag_104:\n        /* \"#utility.yul\":3102:3126   */\n      tag_106\n        /* \"#utility.yul\":3120:3125   */\n      dup2\n        /* \"#utility.yul\":3102:3126   */\n      tag_103\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3097:3100   */\n      dup3\n        /* \"#utility.yul\":3090:3127   */\n      mstore\n        /* \"#utility.yul\":3080:3133   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3139:3410   */\n    tag_13:\n      0x00\n        /* \"#utility.yul\":3291:3384   */\n      tag_108\n        /* \"#utility.yul\":3380:3383   */\n      dup3\n        /* \"#utility.yul\":3371:3377   */\n      dup5\n        /* \"#utility.yul\":3291:3384   */\n      tag_80\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3284:3384   */\n      swap2\n      pop\n        /* \"#utility.yul\":3401:3404   */\n      dup2\n        /* \"#utility.yul\":3394:3404   */\n      swap1\n      pop\n        /* \"#utility.yul\":3273:3410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3416:3772   */\n    tag_8:\n      0x00\n        /* \"#utility.yul\":3583:3585   */\n      0x40\n        /* \"#utility.yul\":3572:3581   */\n      dup3\n        /* \"#utility.yul\":3568:3586   */\n      add\n        /* \"#utility.yul\":3560:3586   */\n      swap1\n      pop\n        /* \"#utility.yul\":3596:3675   */\n      tag_110\n        /* \"#utility.yul\":3672:3673   */\n      0x00\n        /* \"#utility.yul\":3661:3670   */\n      dup4\n        /* \"#utility.yul\":3657:3674   */\n      add\n        /* \"#utility.yul\":3648:3654   */\n      dup6\n        /* \"#utility.yul\":3596:3675   */\n      tag_76\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":3685:3765   */\n      tag_111\n        /* \"#utility.yul\":3761:3763   */\n      0x20\n        /* \"#utility.yul\":3750:3759   */\n      dup4\n        /* \"#utility.yul\":3746:3764   */\n      add\n        /* \"#utility.yul\":3737:3743   */\n      dup5\n        /* \"#utility.yul\":3685:3765   */\n      tag_104\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":3550:3772   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3778:4091   */\n    tag_49:\n      0x00\n        /* \"#utility.yul\":3929:3931   */\n      0x20\n        /* \"#utility.yul\":3918:3927   */\n      dup3\n        /* \"#utility.yul\":3914:3932   */\n      add\n        /* \"#utility.yul\":3906:3932   */\n      swap1\n      pop\n        /* \"#utility.yul\":3978:3987   */\n      dup2\n        /* \"#utility.yul\":3972:3976   */\n      dup2\n        /* \"#utility.yul\":3968:3988   */\n      sub\n        /* \"#utility.yul\":3964:3965   */\n      0x00\n        /* \"#utility.yul\":3953:3962   */\n      dup4\n        /* \"#utility.yul\":3949:3966   */\n      add\n        /* \"#utility.yul\":3942:3989   */\n      mstore\n        /* \"#utility.yul\":4006:4084   */\n      tag_113\n        /* \"#utility.yul\":4079:4083   */\n      dup2\n        /* \"#utility.yul\":4070:4076   */\n      dup5\n        /* \"#utility.yul\":4006:4084   */\n      tag_88\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3998:4084   */\n      swap1\n      pop\n        /* \"#utility.yul\":3896:4091   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4097:4516   */\n    tag_42:\n      0x00\n        /* \"#utility.yul\":4301:4303   */\n      0x20\n        /* \"#utility.yul\":4290:4299   */\n      dup3\n        /* \"#utility.yul\":4286:4304   */\n      add\n        /* \"#utility.yul\":4278:4304   */\n      swap1\n      pop\n        /* \"#utility.yul\":4350:4359   */\n      dup2\n        /* \"#utility.yul\":4344:4348   */\n      dup2\n        /* \"#utility.yul\":4340:4360   */\n      sub\n        /* \"#utility.yul\":4336:4337   */\n      0x00\n        /* \"#utility.yul\":4325:4334   */\n      dup4\n        /* \"#utility.yul\":4321:4338   */\n      add\n        /* \"#utility.yul\":4314:4361   */\n      mstore\n        /* \"#utility.yul\":4378:4509   */\n      tag_115\n        /* \"#utility.yul\":4504:4508   */\n      dup2\n        /* \"#utility.yul\":4378:4509   */\n      tag_97\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4370:4509   */\n      swap1\n      pop\n        /* \"#utility.yul\":4268:4516   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4522:4854   */\n    tag_11:\n      0x00\n        /* \"#utility.yul\":4681:4683   */\n      0x40\n        /* \"#utility.yul\":4670:4679   */\n      dup3\n        /* \"#utility.yul\":4666:4684   */\n      add\n        /* \"#utility.yul\":4658:4684   */\n      swap1\n      pop\n        /* \"#utility.yul\":4694:4765   */\n      tag_117\n        /* \"#utility.yul\":4762:4763   */\n      0x00\n        /* \"#utility.yul\":4751:4760   */\n      dup4\n        /* \"#utility.yul\":4747:4764   */\n      add\n        /* \"#utility.yul\":4738:4744   */\n      dup6\n        /* \"#utility.yul\":4694:4765   */\n      tag_100\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":4775:4847   */\n      tag_118\n        /* \"#utility.yul\":4843:4845   */\n      0x20\n        /* \"#utility.yul\":4832:4841   */\n      dup4\n        /* \"#utility.yul\":4828:4846   */\n      add\n        /* \"#utility.yul\":4819:4825   */\n      dup5\n        /* \"#utility.yul\":4775:4847   */\n      tag_100\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4648:4854   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4860:4958   */\n    tag_83:\n      0x00\n        /* \"#utility.yul\":4945:4950   */\n      dup2\n        /* \"#utility.yul\":4939:4951   */\n      mload\n        /* \"#utility.yul\":4929:4951   */\n      swap1\n      pop\n        /* \"#utility.yul\":4918:4958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4964:5063   */\n    tag_91:\n      0x00\n        /* \"#utility.yul\":5050:5055   */\n      dup2\n        /* \"#utility.yul\":5044:5056   */\n      mload\n        /* \"#utility.yul\":5034:5056   */\n      swap1\n      pop\n        /* \"#utility.yul\":5023:5063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5069:5216   */\n    tag_85:\n      0x00\n        /* \"#utility.yul\":5207:5210   */\n      dup2\n        /* \"#utility.yul\":5192:5210   */\n      swap1\n      pop\n        /* \"#utility.yul\":5182:5216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5222:5391   */\n    tag_93:\n      0x00\n        /* \"#utility.yul\":5340:5346   */\n      dup3\n        /* \"#utility.yul\":5335:5338   */\n      dup3\n        /* \"#utility.yul\":5328:5347   */\n      mstore\n        /* \"#utility.yul\":5380:5384   */\n      0x20\n        /* \"#utility.yul\":5375:5378   */\n      dup3\n        /* \"#utility.yul\":5371:5385   */\n      add\n        /* \"#utility.yul\":5356:5385   */\n      swap1\n      pop\n        /* \"#utility.yul\":5318:5391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5397:5582   */\n    tag_39:\n      0x00\n        /* \"#utility.yul\":5454:5474   */\n      tag_124\n        /* \"#utility.yul\":5472:5473   */\n      dup3\n        /* \"#utility.yul\":5454:5474   */\n      tag_103\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":5449:5474   */\n      swap2\n      pop\n        /* \"#utility.yul\":5488:5508   */\n      tag_125\n        /* \"#utility.yul\":5506:5507   */\n      dup4\n        /* \"#utility.yul\":5488:5508   */\n      tag_103\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":5483:5508   */\n      swap3\n      pop\n        /* \"#utility.yul\":5527:5528   */\n      dup3\n        /* \"#utility.yul\":5517:5519   */\n      tag_126\n      jumpi\n        /* \"#utility.yul\":5532:5550   */\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":5517:5519   */\n    tag_126:\n        /* \"#utility.yul\":5574:5575   */\n      dup3\n        /* \"#utility.yul\":5571:5572   */\n      dup3\n        /* \"#utility.yul\":5567:5576   */\n      div\n        /* \"#utility.yul\":5562:5576   */\n      swap1\n      pop\n        /* \"#utility.yul\":5439:5582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5588:5936   */\n    tag_37:\n      0x00\n        /* \"#utility.yul\":5651:5671   */\n      tag_130\n        /* \"#utility.yul\":5669:5670   */\n      dup3\n        /* \"#utility.yul\":5651:5671   */\n      tag_103\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5646:5671   */\n      swap2\n      pop\n        /* \"#utility.yul\":5685:5705   */\n      tag_131\n        /* \"#utility.yul\":5703:5704   */\n      dup4\n        /* \"#utility.yul\":5685:5705   */\n      tag_103\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":5680:5705   */\n      swap3\n      pop\n        /* \"#utility.yul\":5873:5874   */\n      dup2\n        /* \"#utility.yul\":5805:5871   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5801:5875   */\n      div\n        /* \"#utility.yul\":5798:5799   */\n      dup4\n        /* \"#utility.yul\":5795:5876   */\n      gt\n        /* \"#utility.yul\":5790:5791   */\n      dup3\n        /* \"#utility.yul\":5783:5792   */\n      iszero\n        /* \"#utility.yul\":5776:5793   */\n      iszero\n        /* \"#utility.yul\":5772:5877   */\n      and\n        /* \"#utility.yul\":5769:5771   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":5880:5898   */\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":5769:5771   */\n    tag_132:\n        /* \"#utility.yul\":5928:5929   */\n      dup3\n        /* \"#utility.yul\":5925:5926   */\n      dup3\n        /* \"#utility.yul\":5921:5930   */\n      mul\n        /* \"#utility.yul\":5910:5930   */\n      swap1\n      pop\n        /* \"#utility.yul\":5636:5936   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5942:6038   */\n    tag_79:\n      0x00\n        /* \"#utility.yul\":6008:6032   */\n      tag_136\n        /* \"#utility.yul\":6026:6031   */\n      dup3\n        /* \"#utility.yul\":6008:6032   */\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":5997:6032   */\n      swap1\n      pop\n        /* \"#utility.yul\":5987:6038   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6044:6148   */\n    tag_138:\n      0x00\n        /* \"#utility.yul\":6118:6142   */\n      tag_140\n        /* \"#utility.yul\":6136:6141   */\n      dup3\n        /* \"#utility.yul\":6118:6142   */\n      tag_137\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":6107:6142   */\n      swap1\n      pop\n        /* \"#utility.yul\":6097:6148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6154:6280   */\n    tag_137:\n      0x00\n        /* \"#utility.yul\":6231:6273   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6224:6229   */\n      dup3\n        /* \"#utility.yul\":6220:6274   */\n      and\n        /* \"#utility.yul\":6209:6274   */\n      swap1\n      pop\n        /* \"#utility.yul\":6199:6280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6286:6363   */\n    tag_103:\n      0x00\n        /* \"#utility.yul\":6352:6357   */\n      dup2\n        /* \"#utility.yul\":6341:6357   */\n      swap1\n      pop\n        /* \"#utility.yul\":6331:6363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6369:6676   */\n    tag_87:\n        /* \"#utility.yul\":6437:6438   */\n      0x00\n        /* \"#utility.yul\":6447:6560   */\n    tag_144:\n        /* \"#utility.yul\":6461:6467   */\n      dup4\n        /* \"#utility.yul\":6458:6459   */\n      dup2\n        /* \"#utility.yul\":6455:6468   */\n      lt\n        /* \"#utility.yul\":6447:6560   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":6546:6547   */\n      dup1\n        /* \"#utility.yul\":6541:6544   */\n      dup3\n        /* \"#utility.yul\":6537:6548   */\n      add\n        /* \"#utility.yul\":6531:6549   */\n      mload\n        /* \"#utility.yul\":6527:6528   */\n      dup2\n        /* \"#utility.yul\":6522:6525   */\n      dup5\n        /* \"#utility.yul\":6518:6529   */\n      add\n        /* \"#utility.yul\":6511:6550   */\n      mstore\n        /* \"#utility.yul\":6483:6485   */\n      0x20\n        /* \"#utility.yul\":6480:6481   */\n      dup2\n        /* \"#utility.yul\":6476:6486   */\n      add\n        /* \"#utility.yul\":6471:6486   */\n      swap1\n      pop\n        /* \"#utility.yul\":6447:6560   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":6578:6584   */\n      dup4\n        /* \"#utility.yul\":6575:6576   */\n      dup2\n        /* \"#utility.yul\":6572:6585   */\n      gt\n        /* \"#utility.yul\":6569:6571   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":6658:6659   */\n      0x00\n        /* \"#utility.yul\":6649:6655   */\n      dup5\n        /* \"#utility.yul\":6644:6647   */\n      dup5\n        /* \"#utility.yul\":6640:6656   */\n      add\n        /* \"#utility.yul\":6633:6660   */\n      mstore\n        /* \"#utility.yul\":6569:6571   */\n    tag_147:\n        /* \"#utility.yul\":6418:6676   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6682:6862   */\n    tag_134:\n        /* \"#utility.yul\":6730:6807   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6727:6728   */\n      0x00\n        /* \"#utility.yul\":6720:6808   */\n      mstore\n        /* \"#utility.yul\":6827:6831   */\n      0x11\n        /* \"#utility.yul\":6824:6825   */\n      0x04\n        /* \"#utility.yul\":6817:6832   */\n      mstore\n        /* \"#utility.yul\":6851:6855   */\n      0x24\n        /* \"#utility.yul\":6848:6849   */\n      0x00\n        /* \"#utility.yul\":6841:6856   */\n      revert\n        /* \"#utility.yul\":6868:7048   */\n    tag_128:\n        /* \"#utility.yul\":6916:6993   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6913:6914   */\n      0x00\n        /* \"#utility.yul\":6906:6994   */\n      mstore\n        /* \"#utility.yul\":7013:7017   */\n      0x12\n        /* \"#utility.yul\":7010:7011   */\n      0x04\n        /* \"#utility.yul\":7003:7018   */\n      mstore\n        /* \"#utility.yul\":7037:7041   */\n      0x24\n        /* \"#utility.yul\":7034:7035   */\n      0x00\n        /* \"#utility.yul\":7027:7042   */\n      revert\n        /* \"#utility.yul\":7054:7156   */\n    tag_96:\n      0x00\n        /* \"#utility.yul\":7146:7148   */\n      0x1f\n        /* \"#utility.yul\":7142:7149   */\n      not\n        /* \"#utility.yul\":7137:7139   */\n      0x1f\n        /* \"#utility.yul\":7130:7135   */\n      dup4\n        /* \"#utility.yul\":7126:7140   */\n      add\n        /* \"#utility.yul\":7122:7150   */\n      and\n        /* \"#utility.yul\":7112:7150   */\n      swap1\n      pop\n        /* \"#utility.yul\":7102:7156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7162:7284   */\n    tag_55:\n        /* \"#utility.yul\":7235:7259   */\n      tag_152\n        /* \"#utility.yul\":7253:7258   */\n      dup2\n        /* \"#utility.yul\":7235:7259   */\n      tag_79\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":7228:7233   */\n      dup2\n        /* \"#utility.yul\":7225:7260   */\n      eq\n        /* \"#utility.yul\":7215:7217   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":7274:7275   */\n      0x00\n        /* \"#utility.yul\":7271:7272   */\n      dup1\n        /* \"#utility.yul\":7264:7276   */\n      revert\n        /* \"#utility.yul\":7215:7217   */\n    tag_153:\n        /* \"#utility.yul\":7205:7284   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7290:7428   */\n    tag_59:\n        /* \"#utility.yul\":7371:7403   */\n      tag_155\n        /* \"#utility.yul\":7397:7402   */\n      dup2\n        /* \"#utility.yul\":7371:7403   */\n      tag_138\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":7364:7369   */\n      dup2\n        /* \"#utility.yul\":7361:7404   */\n      eq\n        /* \"#utility.yul\":7351:7353   */\n      tag_156\n      jumpi\n        /* \"#utility.yul\":7418:7419   */\n      0x00\n        /* \"#utility.yul\":7415:7416   */\n      dup1\n        /* \"#utility.yul\":7408:7420   */\n      revert\n        /* \"#utility.yul\":7351:7353   */\n    tag_156:\n        /* \"#utility.yul\":7341:7428   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7434:7556   */\n    tag_63:\n        /* \"#utility.yul\":7507:7531   */\n      tag_158\n        /* \"#utility.yul\":7525:7530   */\n      dup2\n        /* \"#utility.yul\":7507:7531   */\n      tag_103\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":7500:7505   */\n      dup2\n        /* \"#utility.yul\":7497:7532   */\n      eq\n        /* \"#utility.yul\":7487:7489   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":7546:7547   */\n      0x00\n        /* \"#utility.yul\":7543:7544   */\n      dup1\n        /* \"#utility.yul\":7536:7548   */\n      revert\n        /* \"#utility.yul\":7487:7489   */\n    tag_159:\n        /* \"#utility.yul\":7477:7556   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203bc510043dbab8844dde10b72375b68ea24cb3d46cbbe02cbecfeb77b586110464736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "61086a610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063f938761c1461003a575b600080fd5b610054600480360381019061004f919061044b565b61006b565b6040516100629291906105ae565b60405180910390f35b6000806000808673ffffffffffffffffffffffffffffffffffffffff16868660405160240161009b929190610619565b6040516020818303038152906040527f2a55205a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516101259190610597565b600060405180830381855afa9150503d8060008114610160576040519150601f19603f3d011682016040523d82523d6000602084013e610165565b606091505b5091509150818015610178575060408151145b156102815760008082806020019051810190610194919061040f565b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156101d55750600081115b8015610207575061020360646101f560328a61029390919063ffffffff16565b61030e90919063ffffffff16565b8111155b1561021b578181955095505050505061028b565b610242606461023460328a61029390919063ffffffff16565b61030e90919063ffffffff16565b81111561027e5781610271606461026360328b61029390919063ffffffff16565b61030e90919063ffffffff16565b955095505050505061028b565b50505b6000809350935050505b935093915050565b6000808314156102a65760009050610308565b600082846102b491906106a5565b90508284826102c39190610674565b14610303576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fa906105f9565b60405180910390fd5b809150505b92915050565b600061035083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610358565b905092915050565b6000808311829061039f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039691906105d7565b60405180910390fd5b50600083856103ae9190610674565b9050809150509392505050565b6000813590506103ca816107ef565b92915050565b6000815190506103df81610806565b92915050565b6000813590506103f48161081d565b92915050565b6000815190506104098161081d565b92915050565b6000806040838503121561042257600080fd5b6000610430858286016103d0565b9250506020610441858286016103fa565b9150509250929050565b60008060006060848603121561046057600080fd5b600061046e868287016103bb565b935050602061047f868287016103e5565b9250506040610490868287016103e5565b9150509250925092565b6104a3816106ff565b82525050565b60006104b482610642565b6104be8185610658565b93506104ce81856020860161074d565b80840191505092915050565b60006104e58261064d565b6104ef8185610663565b93506104ff81856020860161074d565b610508816107de565b840191505092915050565b6000610520602183610663565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b61058281610743565b82525050565b61059181610743565b82525050565b60006105a382846104a9565b915081905092915050565b60006040820190506105c3600083018561049a565b6105d06020830184610588565b9392505050565b600060208201905081810360008301526105f181846104da565b905092915050565b6000602082019050818103600083015261061281610513565b9050919050565b600060408201905061062e6000830185610579565b61063b6020830184610579565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061067f82610743565b915061068a83610743565b92508261069a576106996107af565b5b828204905092915050565b60006106b082610743565b91506106bb83610743565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156106f4576106f3610780565b5b828202905092915050565b600061070a82610723565b9050919050565b600061071c82610723565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561076b578082015181840152602081019050610750565b8381111561077a576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b6107f8816106ff565b811461080357600080fd5b50565b61080f81610711565b811461081a57600080fd5b50565b61082681610743565b811461083157600080fd5b5056fea26469706673582212203bc510043dbab8844dde10b72375b68ea24cb3d46cbbe02cbecfeb77b586110464736f6c63430008000033",
							"opcodes": "PUSH2 0x86A PUSH2 0x53 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF938761C EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0x44B JUMP JUMPDEST PUSH2 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP3 SWAP2 SWAP1 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x9B SWAP3 SWAP2 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x160 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x165 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x178 JUMPI POP PUSH1 0x40 DUP2 MLOAD EQ JUMPDEST ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x40F JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1D5 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST DUP1 ISZERO PUSH2 0x207 JUMPI POP PUSH2 0x203 PUSH1 0x64 PUSH2 0x1F5 PUSH1 0x32 DUP11 PUSH2 0x293 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x30E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 GT ISZERO JUMPDEST ISZERO PUSH2 0x21B JUMPI DUP2 DUP2 SWAP6 POP SWAP6 POP POP POP POP POP PUSH2 0x28B JUMP JUMPDEST PUSH2 0x242 PUSH1 0x64 PUSH2 0x234 PUSH1 0x32 DUP11 PUSH2 0x293 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x30E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x27E JUMPI DUP2 PUSH2 0x271 PUSH1 0x64 PUSH2 0x263 PUSH1 0x32 DUP12 PUSH2 0x293 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x30E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP SWAP6 POP POP POP POP POP PUSH2 0x28B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP1 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x308 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x674 JUMP JUMPDEST EQ PUSH2 0x303 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FA SWAP1 PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x350 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x358 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x39F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x674 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3CA DUP2 PUSH2 0x7EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3DF DUP2 PUSH2 0x806 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F4 DUP2 PUSH2 0x81D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x409 DUP2 PUSH2 0x81D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x430 DUP6 DUP3 DUP7 ADD PUSH2 0x3D0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x441 DUP6 DUP3 DUP7 ADD PUSH2 0x3FA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x46E DUP7 DUP3 DUP8 ADD PUSH2 0x3BB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x47F DUP7 DUP3 DUP8 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x490 DUP7 DUP3 DUP8 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x4A3 DUP2 PUSH2 0x6FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B4 DUP3 PUSH2 0x642 JUMP JUMPDEST PUSH2 0x4BE DUP2 DUP6 PUSH2 0x658 JUMP JUMPDEST SWAP4 POP PUSH2 0x4CE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x74D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E5 DUP3 PUSH2 0x64D JUMP JUMPDEST PUSH2 0x4EF DUP2 DUP6 PUSH2 0x663 JUMP JUMPDEST SWAP4 POP PUSH2 0x4FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x74D JUMP JUMPDEST PUSH2 0x508 DUP2 PUSH2 0x7DE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x520 PUSH1 0x21 DUP4 PUSH2 0x663 JUMP JUMPDEST SWAP2 POP PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x582 DUP2 PUSH2 0x743 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x591 DUP2 PUSH2 0x743 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A3 DUP3 DUP5 PUSH2 0x4A9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5C3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x5D0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x588 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5F1 DUP2 DUP5 PUSH2 0x4DA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x612 DUP2 PUSH2 0x513 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x62E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x579 JUMP JUMPDEST PUSH2 0x63B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x579 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67F DUP3 PUSH2 0x743 JUMP JUMPDEST SWAP2 POP PUSH2 0x68A DUP4 PUSH2 0x743 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x69A JUMPI PUSH2 0x699 PUSH2 0x7AF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B0 DUP3 PUSH2 0x743 JUMP JUMPDEST SWAP2 POP PUSH2 0x6BB DUP4 PUSH2 0x743 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x6F4 JUMPI PUSH2 0x6F3 PUSH2 0x780 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70A DUP3 PUSH2 0x723 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71C DUP3 PUSH2 0x723 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x76B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x750 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x77A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F8 DUP2 PUSH2 0x6FF JUMP JUMPDEST DUP2 EQ PUSH2 0x803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x80F DUP2 PUSH2 0x711 JUMP JUMPDEST DUP2 EQ PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x826 DUP2 PUSH2 0x743 JUMP JUMPDEST DUP2 EQ PUSH2 0x831 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xC5 LT DIV RETURNDATASIZE 0xBA 0xB8 DUP5 0x4D 0xDE LT 0xB7 0x23 PUSH22 0xB68EA24CB3D46CBBE02CBECFEB77B586110464736F6C PUSH4 0x43000800 STOP CALLER ",
							"sourceMap": "87:2447:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7559:15",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:15",
														"type": ""
													}
												],
												"src": "7:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "223:88:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "233:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "248:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "242:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "242:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "233:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "299:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "264:34:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "264:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "264:41:15"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "201:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "209:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "217:5:15",
														"type": ""
													}
												],
												"src": "152:159:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "369:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "379:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "401:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "388:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "388:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "379:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "444:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "417:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "417:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "417:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "347:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "355:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "363:5:15",
														"type": ""
													}
												],
												"src": "317:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "525:80:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "535:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "550:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "544:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "535:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "593:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "566:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "566:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "566:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "503:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "511:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "519:5:15",
														"type": ""
													}
												],
												"src": "462:143:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "713:354:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "759:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "768:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "771:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "761:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "761:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "761:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "734:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "743:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "730:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "730:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "726:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:32:15"
															},
															"nodeType": "YulIf",
															"src": "723:2:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "785:136:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "800:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "814:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "804:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "829:82:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "883:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "894:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "879:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "879:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "903:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "839:39:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:72:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "829:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "931:129:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "946:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "960:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "950:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "976:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1022:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1033:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1018:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1018:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1042:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "986:31:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "986:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "976:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "675:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "686:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "698:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "706:6:15",
														"type": ""
													}
												],
												"src": "611:456:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1173:452:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1219:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1228:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1231:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1221:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1221:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1221:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1194:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1203:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1190:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1190:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1215:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1186:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:32:15"
															},
															"nodeType": "YulIf",
															"src": "1183:2:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "1245:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1260:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1274:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1264:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1289:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1299:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1299:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1289:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1372:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1417:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1452:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1463:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1448:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1448:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1472:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1427:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1500:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1515:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1529:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1519:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1545:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1580:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1591:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1576:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1576:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1600:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1555:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1555:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1545:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1127:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1138:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1150:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1158:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1166:6:15",
														"type": ""
													}
												],
												"src": "1073:552:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1704:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1721:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1744:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1726:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1726:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1714:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1714:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1714:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1692:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1699:3:15",
														"type": ""
													}
												],
												"src": "1631:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1871:265:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1881:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1927:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1895:31:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1895:38:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1885:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1942:95:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2025:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2030:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1949:75:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:88:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1942:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2072:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2079:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2068:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2068:16:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2086:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2091:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2046:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2046:52:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2046:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2107:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2118:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2123:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2114:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2114:16:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2107:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1852:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1859:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1867:3:15",
														"type": ""
													}
												],
												"src": "1763:373:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2234:272:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2244:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2291:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2258:32:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2258:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2248:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2306:78:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2372:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2377:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2313:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2313:71:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2306:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2419:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2426:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2415:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2415:16:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2433:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2438:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2393:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2393:52:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2393:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2454:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2465:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2492:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2470:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2470:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2461:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2461:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2454:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2215:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2222:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2230:3:15",
														"type": ""
													}
												],
												"src": "2142:364:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2658:219:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2668:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2734:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2739:2:15",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2675:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2675:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2668:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2763:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2768:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2759:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2759:11:15"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2772:34:15",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2752:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2752:55:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2752:55:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2828:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2833:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2824:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2824:12:15"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2838:3:15",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2817:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:25:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2817:25:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2852:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2863:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2868:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2859:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2859:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2852:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2646:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2654:3:15",
														"type": ""
													}
												],
												"src": "2512:365:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2948:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2965:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2988:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2970:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2970:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2958:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2958:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2958:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2936:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2943:3:15",
														"type": ""
													}
												],
												"src": "2883:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3080:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3097:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3120:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3102:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3102:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3090:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3068:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3075:3:15",
														"type": ""
													}
												],
												"src": "3007:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3273:137:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3284:100:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3371:6:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3380:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3291:79:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3291:93:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3284:3:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3394:10:15",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3401:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3394:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3252:3:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3258:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3269:3:15",
														"type": ""
													}
												],
												"src": "3139:271:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3550:222:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3560:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3572:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3583:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3568:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3568:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3560:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3648:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3661:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3672:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3657:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3657:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "3596:51:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3596:79:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3596:79:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3737:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3750:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3761:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3746:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3746:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "3685:51:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:80:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3685:80:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3514:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3526:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3534:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3545:4:15",
														"type": ""
													}
												],
												"src": "3416:356:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3896:195:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3906:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3918:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3929:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3914:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3914:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3906:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3953:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3964:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3949:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3949:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3972:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3978:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3968:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3968:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3942:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3942:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3942:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3998:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4070:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4079:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4006:63:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4006:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3998:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3868:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3880:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3891:4:15",
														"type": ""
													}
												],
												"src": "3778:313:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4268:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4278:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4290:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4301:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4286:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4286:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4278:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4325:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4336:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4321:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4321:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4344:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4350:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4340:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4340:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4314:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4314:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4314:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4370:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4504:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4378:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4378:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4370:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4248:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4263:4:15",
														"type": ""
													}
												],
												"src": "4097:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4648:206:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4658:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4670:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4666:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4666:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4658:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4738:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4751:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4762:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4747:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4747:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4694:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4694:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4694:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4819:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4832:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4843:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4828:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4828:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4775:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4775:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4775:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4612:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4624:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4632:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4643:4:15",
														"type": ""
													}
												],
												"src": "4522:332:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4918:40:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4929:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4945:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4939:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4939:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4929:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4901:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4911:6:15",
														"type": ""
													}
												],
												"src": "4860:98:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5023:40:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5034:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5050:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5044:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5044:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5034:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5006:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5016:6:15",
														"type": ""
													}
												],
												"src": "4964:99:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5182:34:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5192:18:15",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5207:3:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5192:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5154:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5159:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5170:11:15",
														"type": ""
													}
												],
												"src": "5069:147:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5318:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5335:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5340:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5328:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5328:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5328:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5356:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5375:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5380:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5371:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5371:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5356:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5290:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5295:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5306:11:15",
														"type": ""
													}
												],
												"src": "5222:169:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5439:143:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5449:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5472:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5454:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5454:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5449:1:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5483:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5506:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5488:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5488:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5483:1:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5530:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5532:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5532:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5532:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5527:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5520:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5520:9:15"
															},
															"nodeType": "YulIf",
															"src": "5517:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5562:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5571:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5574:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5567:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5567:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5562:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5428:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5431:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5437:1:15",
														"type": ""
													}
												],
												"src": "5397:185:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5636:300:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5646:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5669:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5651:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5651:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5646:1:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5680:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5703:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5685:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5685:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5680:1:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5878:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5880:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5880:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5880:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5790:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5783:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5783:9:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5776:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5776:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5798:1:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5805:66:15",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5873:1:15"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "5801:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5801:74:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5795:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5795:81:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5772:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5772:105:15"
															},
															"nodeType": "YulIf",
															"src": "5769:2:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5910:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5925:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5928:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5921:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5921:9:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5910:7:15"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5619:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5622:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5628:7:15",
														"type": ""
													}
												],
												"src": "5588:348:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5987:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5997:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6026:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6008:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6008:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5997:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5969:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5979:7:15",
														"type": ""
													}
												],
												"src": "5942:96:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6097:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6107:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6136:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6118:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6107:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6079:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6089:7:15",
														"type": ""
													}
												],
												"src": "6044:104:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6199:81:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6209:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6224:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6231:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6220:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6220:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6209:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6181:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6191:7:15",
														"type": ""
													}
												],
												"src": "6154:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6331:32:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6341:16:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6352:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6341:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6313:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6323:7:15",
														"type": ""
													}
												],
												"src": "6286:77:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6418:258:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6428:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6437:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6432:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6497:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6522:3:15"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6527:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "6541:3:15"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6546:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6537:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6537:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6531:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6531:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6511:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6511:39:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6511:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6458:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6461:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6455:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6455:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6469:19:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6471:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6480:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6483:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6476:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6471:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6451:3:15",
																"statements": []
															},
															"src": "6447:113:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6594:76:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6644:3:15"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "6649:6:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6640:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6640:16:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6658:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6633:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6633:27:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6633:27:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6575:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6578:6:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6572:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6572:13:15"
															},
															"nodeType": "YulIf",
															"src": "6569:2:15"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6400:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6405:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6410:6:15",
														"type": ""
													}
												],
												"src": "6369:307:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6710:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6727:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6730:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6720:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6720:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6720:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6824:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6827:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6817:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6817:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6817:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6848:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6851:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6841:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6841:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6841:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6682:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6896:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6913:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6916:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6906:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6906:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6906:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7010:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7013:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7003:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7003:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7003:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7034:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7037:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7027:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7027:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7027:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6868:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7102:54:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7112:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7130:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7137:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7126:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7126:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7146:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7142:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7142:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7122:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7122:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7112:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7085:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7095:6:15",
														"type": ""
													}
												],
												"src": "7054:102:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7205:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7262:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7271:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7274:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7264:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7264:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7264:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7228:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7253:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7235:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7235:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7225:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7225:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7218:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7218:43:15"
															},
															"nodeType": "YulIf",
															"src": "7215:2:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7198:5:15",
														"type": ""
													}
												],
												"src": "7162:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7341:87:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7406:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7415:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7418:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7408:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7408:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7408:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7364:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7397:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "7371:25:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7371:32:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7361:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7361:43:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7354:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7354:51:15"
															},
															"nodeType": "YulIf",
															"src": "7351:2:15"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7334:5:15",
														"type": ""
													}
												],
												"src": "7290:138:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7477:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7534:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7543:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7546:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7536:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7536:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7536:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7500:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7525:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "7507:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7507:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7497:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7497:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7490:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7490:43:15"
															},
															"nodeType": "YulIf",
															"src": "7487:2:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7470:5:15",
														"type": ""
													}
												],
												"src": "7434:122:15"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n\n        mstore(add(pos, 0), \"SafeMath: multiplication overflo\")\n\n        mstore(add(pos, 32), \"w\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_library_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack_library(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063f938761c1461003a575b600080fd5b610054600480360381019061004f919061044b565b61006b565b6040516100629291906105ae565b60405180910390f35b6000806000808673ffffffffffffffffffffffffffffffffffffffff16868660405160240161009b929190610619565b6040516020818303038152906040527f2a55205a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516101259190610597565b600060405180830381855afa9150503d8060008114610160576040519150601f19603f3d011682016040523d82523d6000602084013e610165565b606091505b5091509150818015610178575060408151145b156102815760008082806020019051810190610194919061040f565b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156101d55750600081115b8015610207575061020360646101f560328a61029390919063ffffffff16565b61030e90919063ffffffff16565b8111155b1561021b578181955095505050505061028b565b610242606461023460328a61029390919063ffffffff16565b61030e90919063ffffffff16565b81111561027e5781610271606461026360328b61029390919063ffffffff16565b61030e90919063ffffffff16565b955095505050505061028b565b50505b6000809350935050505b935093915050565b6000808314156102a65760009050610308565b600082846102b491906106a5565b90508284826102c39190610674565b14610303576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fa906105f9565b60405180910390fd5b809150505b92915050565b600061035083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610358565b905092915050565b6000808311829061039f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039691906105d7565b60405180910390fd5b50600083856103ae9190610674565b9050809150509392505050565b6000813590506103ca816107ef565b92915050565b6000815190506103df81610806565b92915050565b6000813590506103f48161081d565b92915050565b6000815190506104098161081d565b92915050565b6000806040838503121561042257600080fd5b6000610430858286016103d0565b9250506020610441858286016103fa565b9150509250929050565b60008060006060848603121561046057600080fd5b600061046e868287016103bb565b935050602061047f868287016103e5565b9250506040610490868287016103e5565b9150509250925092565b6104a3816106ff565b82525050565b60006104b482610642565b6104be8185610658565b93506104ce81856020860161074d565b80840191505092915050565b60006104e58261064d565b6104ef8185610663565b93506104ff81856020860161074d565b610508816107de565b840191505092915050565b6000610520602183610663565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b61058281610743565b82525050565b61059181610743565b82525050565b60006105a382846104a9565b915081905092915050565b60006040820190506105c3600083018561049a565b6105d06020830184610588565b9392505050565b600060208201905081810360008301526105f181846104da565b905092915050565b6000602082019050818103600083015261061281610513565b9050919050565b600060408201905061062e6000830185610579565b61063b6020830184610579565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061067f82610743565b915061068a83610743565b92508261069a576106996107af565b5b828204905092915050565b60006106b082610743565b91506106bb83610743565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156106f4576106f3610780565b5b828202905092915050565b600061070a82610723565b9050919050565b600061071c82610723565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561076b578082015181840152602081019050610750565b8381111561077a576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b6107f8816106ff565b811461080357600080fd5b50565b61080f81610711565b811461081a57600080fd5b50565b61082681610743565b811461083157600080fd5b5056fea26469706673582212203bc510043dbab8844dde10b72375b68ea24cb3d46cbbe02cbecfeb77b586110464736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF938761C EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0x44B JUMP JUMPDEST PUSH2 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP3 SWAP2 SWAP1 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x9B SWAP3 SWAP2 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x160 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x165 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x178 JUMPI POP PUSH1 0x40 DUP2 MLOAD EQ JUMPDEST ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x40F JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1D5 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST DUP1 ISZERO PUSH2 0x207 JUMPI POP PUSH2 0x203 PUSH1 0x64 PUSH2 0x1F5 PUSH1 0x32 DUP11 PUSH2 0x293 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x30E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 GT ISZERO JUMPDEST ISZERO PUSH2 0x21B JUMPI DUP2 DUP2 SWAP6 POP SWAP6 POP POP POP POP POP PUSH2 0x28B JUMP JUMPDEST PUSH2 0x242 PUSH1 0x64 PUSH2 0x234 PUSH1 0x32 DUP11 PUSH2 0x293 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x30E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x27E JUMPI DUP2 PUSH2 0x271 PUSH1 0x64 PUSH2 0x263 PUSH1 0x32 DUP12 PUSH2 0x293 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x30E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP SWAP6 POP POP POP POP POP PUSH2 0x28B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP1 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x308 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x674 JUMP JUMPDEST EQ PUSH2 0x303 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FA SWAP1 PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x350 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x358 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x39F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x674 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3CA DUP2 PUSH2 0x7EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3DF DUP2 PUSH2 0x806 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F4 DUP2 PUSH2 0x81D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x409 DUP2 PUSH2 0x81D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x430 DUP6 DUP3 DUP7 ADD PUSH2 0x3D0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x441 DUP6 DUP3 DUP7 ADD PUSH2 0x3FA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x46E DUP7 DUP3 DUP8 ADD PUSH2 0x3BB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x47F DUP7 DUP3 DUP8 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x490 DUP7 DUP3 DUP8 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x4A3 DUP2 PUSH2 0x6FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B4 DUP3 PUSH2 0x642 JUMP JUMPDEST PUSH2 0x4BE DUP2 DUP6 PUSH2 0x658 JUMP JUMPDEST SWAP4 POP PUSH2 0x4CE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x74D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E5 DUP3 PUSH2 0x64D JUMP JUMPDEST PUSH2 0x4EF DUP2 DUP6 PUSH2 0x663 JUMP JUMPDEST SWAP4 POP PUSH2 0x4FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x74D JUMP JUMPDEST PUSH2 0x508 DUP2 PUSH2 0x7DE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x520 PUSH1 0x21 DUP4 PUSH2 0x663 JUMP JUMPDEST SWAP2 POP PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x582 DUP2 PUSH2 0x743 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x591 DUP2 PUSH2 0x743 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A3 DUP3 DUP5 PUSH2 0x4A9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5C3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x5D0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x588 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5F1 DUP2 DUP5 PUSH2 0x4DA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x612 DUP2 PUSH2 0x513 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x62E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x579 JUMP JUMPDEST PUSH2 0x63B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x579 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67F DUP3 PUSH2 0x743 JUMP JUMPDEST SWAP2 POP PUSH2 0x68A DUP4 PUSH2 0x743 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x69A JUMPI PUSH2 0x699 PUSH2 0x7AF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B0 DUP3 PUSH2 0x743 JUMP JUMPDEST SWAP2 POP PUSH2 0x6BB DUP4 PUSH2 0x743 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x6F4 JUMPI PUSH2 0x6F3 PUSH2 0x780 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70A DUP3 PUSH2 0x723 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71C DUP3 PUSH2 0x723 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x76B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x750 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x77A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F8 DUP2 PUSH2 0x6FF JUMP JUMPDEST DUP2 EQ PUSH2 0x803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x80F DUP2 PUSH2 0x711 JUMP JUMPDEST DUP2 EQ PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x826 DUP2 PUSH2 0x743 JUMP JUMPDEST DUP2 EQ PUSH2 0x831 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xC5 LT DIV RETURNDATASIZE 0xBA 0xB8 DUP5 0x4D 0xDE LT 0xB7 0x23 PUSH22 0xB68EA24CB3D46CBBE02CBECFEB77B586110464736F6C PUSH4 0x43000800 STOP CALLER ",
							"sourceMap": "87:2447:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;1758:769;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;1855:7;1863;1890:12;1904:17;1926:10;:21;;2003:7;2011:6;1948:70;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1926:93;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1889:130;;;;2038:7;:28;;;;;2064:2;2049:4;:11;:17;2038:28;2035:433;;;2091:13;2105:14;2132:4;2121:35;;;;;;;;;;;;:::i;:::-;2090:66;;;;2188:1;2171:19;;:5;:19;;;;:33;;;;;2203:1;2194:6;:10;2171:33;:70;;;;;2218:23;2237:3;2218:14;2229:2;2218:6;:10;;:14;;;;:::i;:::-;:18;;:23;;;;:::i;:::-;2208:6;:33;;2171:70;2168:281;;;2285:5;2291:6;2277:21;;;;;;;;;;2168:281;2328:23;2347:3;2328:14;2339:2;2328:6;:10;;:14;;;;:::i;:::-;:18;;:23;;;;:::i;:::-;2319:6;:32;2316:133;;;2391:5;2397:23;2416:3;2397:14;2408:2;2397:6;:10;;:14;;;;:::i;:::-;:18;;:23;;;;:::i;:::-;2383:38;;;;;;;;;;2316:133;2035:433;;;2498:1;2501;2483:20;;;;;;1758:769;;;;;;;:::o;1618:459:13:-;1676:7;1922:1;1917;:6;1913:45;;;1946:1;1939:8;;;;1913:45;1968:9;1984:1;1980;:5;;;;:::i;:::-;1968:17;;2012:1;2007;2003;:5;;;;:::i;:::-;:10;1995:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2069:1;2062:8;;;1618:459;;;;;:::o;2539:130::-;2597:7;2623:39;2627:1;2630;2623:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;2616:46;;2539:130;;;;:::o;3151:272::-;3237:7;3268:1;3264;:5;3271:12;3256:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3294:9;3310:1;3306;:5;;;;:::i;:::-;3294:17;;3415:1;3408:8;;;3151:272;;;;;:::o;7:139:15:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:159::-;;248:6;242:13;233:22;;264:41;299:5;264:41;:::i;:::-;223:88;;;;:::o;317:139::-;;401:6;388:20;379:29;;417:33;444:5;417:33;:::i;:::-;369:87;;;;:::o;462:143::-;;550:6;544:13;535:22;;566:33;593:5;566:33;:::i;:::-;525:80;;;;:::o;611:456::-;;;755:2;743:9;734:7;730:23;726:32;723:2;;;771:1;768;761:12;723:2;814:1;839:72;903:7;894:6;883:9;879:22;839:72;:::i;:::-;829:82;;785:136;960:2;986:64;1042:7;1033:6;1022:9;1018:22;986:64;:::i;:::-;976:74;;931:129;713:354;;;;;:::o;1073:552::-;;;;1215:2;1203:9;1194:7;1190:23;1186:32;1183:2;;;1231:1;1228;1221:12;1183:2;1274:1;1299:53;1344:7;1335:6;1324:9;1320:22;1299:53;:::i;:::-;1289:63;;1245:117;1401:2;1427:53;1472:7;1463:6;1452:9;1448:22;1427:53;:::i;:::-;1417:63;;1372:118;1529:2;1555:53;1600:7;1591:6;1580:9;1576:22;1555:53;:::i;:::-;1545:63;;1500:118;1173:452;;;;;:::o;1631:126::-;1726:24;1744:5;1726:24;:::i;:::-;1721:3;1714:37;1704:53;;:::o;1763:373::-;;1895:38;1927:5;1895:38;:::i;:::-;1949:88;2030:6;2025:3;1949:88;:::i;:::-;1942:95;;2046:52;2091:6;2086:3;2079:4;2072:5;2068:16;2046:52;:::i;:::-;2123:6;2118:3;2114:16;2107:23;;1871:265;;;;;:::o;2142:364::-;;2258:39;2291:5;2258:39;:::i;:::-;2313:71;2377:6;2372:3;2313:71;:::i;:::-;2306:78;;2393:52;2438:6;2433:3;2426:4;2419:5;2415:16;2393:52;:::i;:::-;2470:29;2492:6;2470:29;:::i;:::-;2465:3;2461:39;2454:46;;2234:272;;;;;:::o;2512:365::-;;2675:67;2739:2;2734:3;2675:67;:::i;:::-;2668:74;;2772:34;2768:1;2763:3;2759:11;2752:55;2838:3;2833:2;2828:3;2824:12;2817:25;2868:2;2863:3;2859:12;2852:19;;2658:219;;;:::o;2883:118::-;2970:24;2988:5;2970:24;:::i;:::-;2965:3;2958:37;2948:53;;:::o;3007:126::-;3102:24;3120:5;3102:24;:::i;:::-;3097:3;3090:37;3080:53;;:::o;3139:271::-;;3291:93;3380:3;3371:6;3291:93;:::i;:::-;3284:100;;3401:3;3394:10;;3273:137;;;;:::o;3416:356::-;;3583:2;3572:9;3568:18;3560:26;;3596:79;3672:1;3661:9;3657:17;3648:6;3596:79;:::i;:::-;3685:80;3761:2;3750:9;3746:18;3737:6;3685:80;:::i;:::-;3550:222;;;;;:::o;3778:313::-;;3929:2;3918:9;3914:18;3906:26;;3978:9;3972:4;3968:20;3964:1;3953:9;3949:17;3942:47;4006:78;4079:4;4070:6;4006:78;:::i;:::-;3998:86;;3896:195;;;;:::o;4097:419::-;;4301:2;4290:9;4286:18;4278:26;;4350:9;4344:4;4340:20;4336:1;4325:9;4321:17;4314:47;4378:131;4504:4;4378:131;:::i;:::-;4370:139;;4268:248;;;:::o;4522:332::-;;4681:2;4670:9;4666:18;4658:26;;4694:71;4762:1;4751:9;4747:17;4738:6;4694:71;:::i;:::-;4775:72;4843:2;4832:9;4828:18;4819:6;4775:72;:::i;:::-;4648:206;;;;;:::o;4860:98::-;;4945:5;4939:12;4929:22;;4918:40;;;:::o;4964:99::-;;5050:5;5044:12;5034:22;;5023:40;;;:::o;5069:147::-;;5207:3;5192:18;;5182:34;;;;:::o;5222:169::-;;5340:6;5335:3;5328:19;5380:4;5375:3;5371:14;5356:29;;5318:73;;;;:::o;5397:185::-;;5454:20;5472:1;5454:20;:::i;:::-;5449:25;;5488:20;5506:1;5488:20;:::i;:::-;5483:25;;5527:1;5517:2;;5532:18;;:::i;:::-;5517:2;5574:1;5571;5567:9;5562:14;;5439:143;;;;:::o;5588:348::-;;5651:20;5669:1;5651:20;:::i;:::-;5646:25;;5685:20;5703:1;5685:20;:::i;:::-;5680:25;;5873:1;5805:66;5801:74;5798:1;5795:81;5790:1;5783:9;5776:17;5772:105;5769:2;;;5880:18;;:::i;:::-;5769:2;5928:1;5925;5921:9;5910:20;;5636:300;;;;:::o;5942:96::-;;6008:24;6026:5;6008:24;:::i;:::-;5997:35;;5987:51;;;:::o;6044:104::-;;6118:24;6136:5;6118:24;:::i;:::-;6107:35;;6097:51;;;:::o;6154:126::-;;6231:42;6224:5;6220:54;6209:65;;6199:81;;;:::o;6286:77::-;;6352:5;6341:16;;6331:32;;;:::o;6369:307::-;6437:1;6447:113;6461:6;6458:1;6455:13;6447:113;;;6546:1;6541:3;6537:11;6531:18;6527:1;6522:3;6518:11;6511:39;6483:2;6480:1;6476:10;6471:15;;6447:113;;;6578:6;6575:1;6572:13;6569:2;;;6658:1;6649:6;6644:3;6640:16;6633:27;6569:2;6418:258;;;;:::o;6682:180::-;6730:77;6727:1;6720:88;6827:4;6824:1;6817:15;6851:4;6848:1;6841:15;6868:180;6916:77;6913:1;6906:88;7013:4;7010:1;7003:15;7037:4;7034:1;7027:15;7054:102;;7146:2;7142:7;7137:2;7130:5;7126:14;7122:28;7112:38;;7102:54;;;:::o;7162:122::-;7235:24;7253:5;7235:24;:::i;:::-;7228:5;7225:35;7215:2;;7274:1;7271;7264:12;7215:2;7205:79;:::o;7290:138::-;7371:32;7397:5;7371:32;:::i;:::-;7364:5;7361:43;7351:2;;7418:1;7415;7408:12;7351:2;7341:87;:::o;7434:122::-;7507:24;7525:5;7507:24;:::i;:::-;7500:5;7497:35;7487:2;;7546:1;7543;7536:12;7487:2;7477:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "430800",
								"executionCost": "493",
								"totalCost": "431293"
							},
							"external": {
								"HelpRoyalties(address,uint256,uint256)": "infinite"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 87,
									"end": 2534,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 87,
									"end": 2534,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203bc510043dbab8844dde10b72375b68ea24cb3d46cbbe02cbecfeb77b586110464736f6c63430008000033",
									".code": [
										{
											"begin": 87,
											"end": 2534,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "PUSH",
											"source": 14,
											"value": "F938761C"
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 87,
											"end": 2534,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "tag",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "tag",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1870,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1890,
											"end": 1902,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1904,
											"end": 1921,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 1936,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 1947,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1926,
											"end": 1947,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2003,
											"end": 2010,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "tag",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "PUSH",
											"source": 14,
											"value": "2A55205A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "tag",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "tag",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "tag",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 2019,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1889,
											"end": 2019,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1889,
											"end": 2019,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1889,
											"end": 2019,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1889,
											"end": 2019,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2045,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2066,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2066,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 2038,
											"end": 2066,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2066,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2064,
											"end": 2066,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2049,
											"end": 2053,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2049,
											"end": 2060,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2049,
											"end": 2066,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2066,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 2038,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2035,
											"end": 2468,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2035,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 2035,
											"end": 2468,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2104,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2119,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2132,
											"end": 2136,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2121,
											"end": 2156,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2121,
											"end": 2156,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2156,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2121,
											"end": 2156,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2121,
											"end": 2156,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2121,
											"end": 2156,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2121,
											"end": 2156,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2121,
											"end": 2156,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2121,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 2121,
											"end": 2156,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2121,
											"end": 2156,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2121,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2156,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2121,
											"end": 2156,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 2121,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2090,
											"end": 2156,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2090,
											"end": 2156,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2090,
											"end": 2156,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2090,
											"end": 2156,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2188,
											"end": 2189,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2190,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2171,
											"end": 2190,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2171,
											"end": 2176,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2171,
											"end": 2190,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2171,
											"end": 2190,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2171,
											"end": 2190,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2171,
											"end": 2190,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2171,
											"end": 2204,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2171,
											"end": 2204,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2171,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 2171,
											"end": 2204,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2171,
											"end": 2204,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2200,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2194,
											"end": 2204,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2171,
											"end": 2204,
											"name": "tag",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 2171,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2171,
											"end": 2241,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2171,
											"end": 2241,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2171,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 2171,
											"end": 2241,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2171,
											"end": 2241,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2218,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 2237,
											"end": 2240,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 2218,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 2229,
											"end": 2231,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 2218,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 2218,
											"end": 2228,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2218,
											"end": 2232,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2218,
											"end": 2232,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2218,
											"end": 2232,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2218,
											"end": 2232,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2218,
											"end": 2232,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2218,
											"end": 2232,
											"name": "tag",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 2218,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2218,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 2218,
											"end": 2236,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2218,
											"end": 2241,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2218,
											"end": 2241,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2218,
											"end": 2241,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2218,
											"end": 2241,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2218,
											"end": 2241,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2218,
											"end": 2241,
											"name": "tag",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 2218,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2208,
											"end": 2241,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2208,
											"end": 2241,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2171,
											"end": 2241,
											"name": "tag",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 2171,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2168,
											"end": 2449,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2168,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 2168,
											"end": 2449,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2285,
											"end": 2290,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2291,
											"end": 2297,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2277,
											"end": 2298,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2277,
											"end": 2298,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2277,
											"end": 2298,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2277,
											"end": 2298,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2277,
											"end": 2298,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2277,
											"end": 2298,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2277,
											"end": 2298,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2277,
											"end": 2298,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2277,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 2277,
											"end": 2298,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2168,
											"end": 2449,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 2168,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2328,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 2347,
											"end": 2350,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 2328,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 2339,
											"end": 2341,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 2328,
											"end": 2334,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 2328,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 2328,
											"end": 2338,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2328,
											"end": 2342,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2328,
											"end": 2342,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2328,
											"end": 2342,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2342,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2328,
											"end": 2342,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2328,
											"end": 2342,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 2328,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2328,
											"end": 2351,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2328,
											"end": 2351,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2328,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2351,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2328,
											"end": 2351,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2328,
											"end": 2351,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 2328,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2325,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2351,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2316,
											"end": 2449,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2316,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 2316,
											"end": 2449,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2391,
											"end": 2396,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 2416,
											"end": 2419,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 2397,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 2408,
											"end": 2410,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 2397,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 2397,
											"end": 2407,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2397,
											"end": 2411,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2397,
											"end": 2411,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2397,
											"end": 2411,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2397,
											"end": 2411,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2397,
											"end": 2411,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2397,
											"end": 2411,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 2397,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2397,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 2397,
											"end": 2415,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2383,
											"end": 2421,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2383,
											"end": 2421,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2383,
											"end": 2421,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2383,
											"end": 2421,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2383,
											"end": 2421,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2383,
											"end": 2421,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2383,
											"end": 2421,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2383,
											"end": 2421,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2383,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 2383,
											"end": 2421,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2316,
											"end": 2449,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 2316,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2035,
											"end": 2468,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2035,
											"end": 2468,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2035,
											"end": 2468,
											"name": "tag",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 2035,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2499,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2502,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2483,
											"end": 2503,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2483,
											"end": 2503,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2483,
											"end": 2503,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2483,
											"end": 2503,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2483,
											"end": 2503,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2483,
											"end": 2503,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "tag",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1758,
											"end": 2527,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1618,
											"end": 2077,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 1618,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1676,
											"end": 1683,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1918,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1923,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1958,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1913,
											"end": 1958,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1946,
											"end": 1947,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1947,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1939,
											"end": 1947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1939,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 1939,
											"end": 1947,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1958,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1913,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 1977,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1984,
											"end": 1985,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 1981,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1980,
											"end": 1985,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 1985,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1980,
											"end": 1985,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1980,
											"end": 1985,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1980,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 1985,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 1985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2012,
											"end": 2013,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2007,
											"end": 2008,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2003,
											"end": 2004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2003,
											"end": 2013,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1995,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2062,
											"end": 2070,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2062,
											"end": 2070,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2062,
											"end": 2070,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 2077,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 1618,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 2077,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 2077,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 2077,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 2077,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 2077,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2539,
											"end": 2669,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 2539,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2627,
											"end": 2628,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2630,
											"end": 2631,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "PUSH",
											"source": 13,
											"value": "1A"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "PUSH",
											"source": 13,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2616,
											"end": 2662,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2616,
											"end": 2662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 2669,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 2669,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 2669,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 2669,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 2669,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3151,
											"end": 3423,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 3151,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3237,
											"end": 3244,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3269,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3264,
											"end": 3265,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3264,
											"end": 3269,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3271,
											"end": 3283,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3284,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3294,
											"end": 3303,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3311,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3307,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 3306,
											"end": 3311,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3311,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 3306,
											"end": 3311,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3306,
											"end": 3311,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 3306,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3294,
											"end": 3311,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3294,
											"end": 3311,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3416,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3408,
											"end": 3416,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3408,
											"end": 3416,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3408,
											"end": 3416,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3423,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3423,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3423,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3423,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3423,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3423,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 311,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 152,
											"end": 311,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 152,
											"end": 311,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 248,
											"end": 254,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 242,
											"end": 255,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 233,
											"end": 255,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 233,
											"end": 255,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 264,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 299,
											"end": 304,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 264,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 264,
											"end": 305,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 264,
											"end": 305,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 264,
											"end": 305,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 223,
											"end": 311,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 223,
											"end": 311,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 223,
											"end": 311,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 317,
											"end": 456,
											"name": "tag",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 317,
											"end": 456,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 317,
											"end": 456,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 407,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 388,
											"end": 408,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 379,
											"end": 408,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 379,
											"end": 408,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 417,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 444,
											"end": 449,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 417,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 417,
											"end": 450,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 417,
											"end": 450,
											"name": "tag",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 417,
											"end": 450,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 369,
											"end": 456,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 369,
											"end": 456,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 369,
											"end": 456,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 369,
											"end": 456,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 369,
											"end": 456,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 462,
											"end": 605,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 462,
											"end": 605,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 462,
											"end": 605,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 556,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 544,
											"end": 557,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 535,
											"end": 557,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 557,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 566,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 593,
											"end": 598,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 566,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 566,
											"end": 599,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 566,
											"end": 599,
											"name": "tag",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 566,
											"end": 599,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 525,
											"end": 605,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 525,
											"end": 605,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 525,
											"end": 605,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 525,
											"end": 605,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 525,
											"end": 605,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 1067,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 611,
											"end": 1067,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 611,
											"end": 1067,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 755,
											"end": 757,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 752,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 734,
											"end": 741,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 730,
											"end": 753,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 726,
											"end": 758,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 723,
											"end": 725,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 723,
											"end": 725,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 771,
											"end": 772,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 769,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 761,
											"end": 773,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 723,
											"end": 725,
											"name": "tag",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 723,
											"end": 725,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 814,
											"end": 815,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 903,
											"end": 910,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 894,
											"end": 900,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 883,
											"end": 892,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 879,
											"end": 901,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 839,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 839,
											"end": 911,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 839,
											"end": 911,
											"name": "tag",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 839,
											"end": 911,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 829,
											"end": 911,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 829,
											"end": 911,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 785,
											"end": 921,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 960,
											"end": 962,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 986,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 1042,
											"end": 1049,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1033,
											"end": 1039,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1022,
											"end": 1031,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1018,
											"end": 1040,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 986,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 986,
											"end": 1050,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 986,
											"end": 1050,
											"name": "tag",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 986,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1050,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1050,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 931,
											"end": 1060,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 713,
											"end": 1067,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 713,
											"end": 1067,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 713,
											"end": 1067,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 713,
											"end": 1067,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 713,
											"end": 1067,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 713,
											"end": 1067,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1073,
											"end": 1625,
											"name": "tag",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 1073,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1073,
											"end": 1625,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1625,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1073,
											"end": 1625,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1217,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 1203,
											"end": 1212,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1186,
											"end": 1218,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1231,
											"end": 1232,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1229,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 1344,
											"end": 1351,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1324,
											"end": 1333,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1320,
											"end": 1342,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1299,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 1299,
											"end": 1352,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1299,
											"end": 1352,
											"name": "tag",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 1299,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1289,
											"end": 1352,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1289,
											"end": 1352,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 1362,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1401,
											"end": 1403,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 1472,
											"end": 1479,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1427,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 1427,
											"end": 1480,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1427,
											"end": 1480,
											"name": "tag",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 1427,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1417,
											"end": 1480,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1417,
											"end": 1480,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1372,
											"end": 1490,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1529,
											"end": 1531,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 1600,
											"end": 1607,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1580,
											"end": 1589,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1576,
											"end": 1598,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1555,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 1555,
											"end": 1608,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1555,
											"end": 1608,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 1555,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1545,
											"end": 1608,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1545,
											"end": 1608,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1500,
											"end": 1618,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1173,
											"end": 1625,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1173,
											"end": 1625,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1173,
											"end": 1625,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1173,
											"end": 1625,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1173,
											"end": 1625,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1173,
											"end": 1625,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1631,
											"end": 1757,
											"name": "tag",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 1631,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1726,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 1744,
											"end": 1749,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1726,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 1726,
											"end": 1750,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1726,
											"end": 1750,
											"name": "tag",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 1726,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1721,
											"end": 1724,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1714,
											"end": 1751,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1704,
											"end": 1757,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1704,
											"end": 1757,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1704,
											"end": 1757,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1763,
											"end": 2136,
											"name": "tag",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1763,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1763,
											"end": 2136,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 1927,
											"end": 1932,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1895,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 1895,
											"end": 1933,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1933,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 1895,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 2030,
											"end": 2036,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2025,
											"end": 2028,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 1949,
											"end": 2037,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1949,
											"end": 2037,
											"name": "tag",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 1949,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1942,
											"end": 2037,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1942,
											"end": 2037,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2046,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2086,
											"end": 2089,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2077,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2046,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 2046,
											"end": 2098,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2046,
											"end": 2098,
											"name": "tag",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 2046,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2123,
											"end": 2129,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2114,
											"end": 2130,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2107,
											"end": 2130,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2107,
											"end": 2130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 2136,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 2136,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 2136,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 2136,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 2136,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 2136,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2142,
											"end": 2506,
											"name": "tag",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 2142,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2506,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 2291,
											"end": 2296,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2258,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 2258,
											"end": 2297,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2258,
											"end": 2297,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 2258,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2313,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2372,
											"end": 2375,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2313,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 2313,
											"end": 2384,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2313,
											"end": 2384,
											"name": "tag",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 2313,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2306,
											"end": 2384,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2306,
											"end": 2384,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2393,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2433,
											"end": 2436,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2419,
											"end": 2424,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2393,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 2393,
											"end": 2445,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2393,
											"end": 2445,
											"name": "tag",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 2393,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2470,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 2492,
											"end": 2498,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2470,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 2470,
											"end": 2499,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2470,
											"end": 2499,
											"name": "tag",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 2470,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2465,
											"end": 2468,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2461,
											"end": 2500,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2454,
											"end": 2500,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2454,
											"end": 2500,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2234,
											"end": 2506,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2234,
											"end": 2506,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2234,
											"end": 2506,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2234,
											"end": 2506,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2234,
											"end": 2506,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2234,
											"end": 2506,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2512,
											"end": 2877,
											"name": "tag",
											"source": 15,
											"value": "97"
										},
										{
											"begin": 2512,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2512,
											"end": 2877,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 2739,
											"end": 2741,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 2734,
											"end": 2737,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2675,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 2675,
											"end": 2742,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2675,
											"end": 2742,
											"name": "tag",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 2675,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2668,
											"end": 2742,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2668,
											"end": 2742,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2772,
											"end": 2806,
											"name": "PUSH",
											"source": 15,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 2768,
											"end": 2769,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2766,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2759,
											"end": 2770,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2752,
											"end": 2807,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2838,
											"end": 2841,
											"name": "PUSH",
											"source": 15,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2833,
											"end": 2835,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2828,
											"end": 2831,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2817,
											"end": 2842,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2868,
											"end": 2870,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2866,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2859,
											"end": 2871,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2852,
											"end": 2871,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2852,
											"end": 2871,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2658,
											"end": 2877,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2658,
											"end": 2877,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2658,
											"end": 2877,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2658,
											"end": 2877,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2883,
											"end": 3001,
											"name": "tag",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 2883,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2970,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 2988,
											"end": 2993,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2970,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 2970,
											"end": 2994,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2970,
											"end": 2994,
											"name": "tag",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 2970,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2965,
											"end": 2968,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2958,
											"end": 2995,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2948,
											"end": 3001,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2948,
											"end": 3001,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2948,
											"end": 3001,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3007,
											"end": 3133,
											"name": "tag",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 3007,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3102,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 3120,
											"end": 3125,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3102,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 3102,
											"end": 3126,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3102,
											"end": 3126,
											"name": "tag",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 3102,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3097,
											"end": 3100,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3090,
											"end": 3127,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3080,
											"end": 3133,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3080,
											"end": 3133,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3080,
											"end": 3133,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3139,
											"end": 3410,
											"name": "tag",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 3139,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3139,
											"end": 3410,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 3380,
											"end": 3383,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3291,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3291,
											"end": 3384,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3291,
											"end": 3384,
											"name": "tag",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 3291,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3284,
											"end": 3384,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3284,
											"end": 3384,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3401,
											"end": 3404,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3394,
											"end": 3404,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3394,
											"end": 3404,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3273,
											"end": 3410,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3273,
											"end": 3410,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3273,
											"end": 3410,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3273,
											"end": 3410,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3273,
											"end": 3410,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3416,
											"end": 3772,
											"name": "tag",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 3416,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3772,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3585,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3568,
											"end": 3586,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3560,
											"end": 3586,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3560,
											"end": 3586,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3596,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 3672,
											"end": 3673,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3670,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3657,
											"end": 3674,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3648,
											"end": 3654,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3596,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 3596,
											"end": 3675,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3596,
											"end": 3675,
											"name": "tag",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 3596,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3685,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 3761,
											"end": 3763,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3759,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3746,
											"end": 3764,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3737,
											"end": 3743,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3685,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 3685,
											"end": 3765,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3685,
											"end": 3765,
											"name": "tag",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 3685,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3550,
											"end": 3772,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3550,
											"end": 3772,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3550,
											"end": 3772,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3550,
											"end": 3772,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3550,
											"end": 3772,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3550,
											"end": 3772,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3778,
											"end": 4091,
											"name": "tag",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 3778,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3778,
											"end": 4091,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3931,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3918,
											"end": 3927,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3978,
											"end": 3987,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3972,
											"end": 3976,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3968,
											"end": 3988,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3964,
											"end": 3965,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3962,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3942,
											"end": 3989,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4006,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 4079,
											"end": 4083,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4070,
											"end": 4076,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4006,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 4006,
											"end": 4084,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4006,
											"end": 4084,
											"name": "tag",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 4006,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3998,
											"end": 4084,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3998,
											"end": 4084,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3896,
											"end": 4091,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3896,
											"end": 4091,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3896,
											"end": 4091,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3896,
											"end": 4091,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3896,
											"end": 4091,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4097,
											"end": 4516,
											"name": "tag",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 4097,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4097,
											"end": 4516,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4301,
											"end": 4303,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4290,
											"end": 4299,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4278,
											"end": 4304,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4278,
											"end": 4304,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4350,
											"end": 4359,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4344,
											"end": 4348,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4340,
											"end": 4360,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4336,
											"end": 4337,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4334,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4321,
											"end": 4338,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4314,
											"end": 4361,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 4504,
											"end": 4508,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "97"
										},
										{
											"begin": 4378,
											"end": 4509,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4378,
											"end": 4509,
											"name": "tag",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 4378,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4370,
											"end": 4509,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4370,
											"end": 4509,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4268,
											"end": 4516,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4268,
											"end": 4516,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4268,
											"end": 4516,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4268,
											"end": 4516,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4522,
											"end": 4854,
											"name": "tag",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 4522,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4522,
											"end": 4854,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4679,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4666,
											"end": 4684,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4658,
											"end": 4684,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4658,
											"end": 4684,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4694,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 4762,
											"end": 4763,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4751,
											"end": 4760,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4747,
											"end": 4764,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4738,
											"end": 4744,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4694,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 4694,
											"end": 4765,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4694,
											"end": 4765,
											"name": "tag",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 4694,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4775,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4832,
											"end": 4841,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4828,
											"end": 4846,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4819,
											"end": 4825,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4775,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 4775,
											"end": 4847,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4775,
											"end": 4847,
											"name": "tag",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 4775,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4648,
											"end": 4854,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4648,
											"end": 4854,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4648,
											"end": 4854,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4648,
											"end": 4854,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4648,
											"end": 4854,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4648,
											"end": 4854,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4860,
											"end": 4958,
											"name": "tag",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 4860,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4860,
											"end": 4958,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4945,
											"end": 4950,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4939,
											"end": 4951,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4929,
											"end": 4951,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4929,
											"end": 4951,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4918,
											"end": 4958,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4918,
											"end": 4958,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4918,
											"end": 4958,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4918,
											"end": 4958,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4964,
											"end": 5063,
											"name": "tag",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 4964,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4964,
											"end": 5063,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5050,
											"end": 5055,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5044,
											"end": 5056,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5023,
											"end": 5063,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5023,
											"end": 5063,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5023,
											"end": 5063,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5023,
											"end": 5063,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5069,
											"end": 5216,
											"name": "tag",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 5069,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5069,
											"end": 5216,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5207,
											"end": 5210,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5192,
											"end": 5210,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5192,
											"end": 5210,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5182,
											"end": 5216,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5182,
											"end": 5216,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5182,
											"end": 5216,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5182,
											"end": 5216,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5182,
											"end": 5216,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5222,
											"end": 5391,
											"name": "tag",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 5222,
											"end": 5391,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5222,
											"end": 5391,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5346,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5335,
											"end": 5338,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5328,
											"end": 5347,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5375,
											"end": 5378,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5356,
											"end": 5385,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5356,
											"end": 5385,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5318,
											"end": 5391,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5318,
											"end": 5391,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5318,
											"end": 5391,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5318,
											"end": 5391,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5318,
											"end": 5391,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5397,
											"end": 5582,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 5397,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5397,
											"end": 5582,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5454,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 5472,
											"end": 5473,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5454,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 5454,
											"end": 5474,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5454,
											"end": 5474,
											"name": "tag",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 5454,
											"end": 5474,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5449,
											"end": 5474,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5449,
											"end": 5474,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 5506,
											"end": 5507,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "tag",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5483,
											"end": 5508,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5483,
											"end": 5508,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5527,
											"end": 5528,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5517,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 5517,
											"end": 5519,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5532,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 5532,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 5532,
											"end": 5550,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5532,
											"end": 5550,
											"name": "tag",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 5532,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5517,
											"end": 5519,
											"name": "tag",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 5517,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5574,
											"end": 5575,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5571,
											"end": 5572,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5567,
											"end": 5576,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 5562,
											"end": 5576,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5562,
											"end": 5576,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5439,
											"end": 5582,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5439,
											"end": 5582,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5439,
											"end": 5582,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5439,
											"end": 5582,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5439,
											"end": 5582,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5588,
											"end": 5936,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 5588,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5588,
											"end": 5936,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5651,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 5669,
											"end": 5670,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5651,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 5651,
											"end": 5671,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5651,
											"end": 5671,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 5651,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5646,
											"end": 5671,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5646,
											"end": 5671,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5685,
											"end": 5705,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 5703,
											"end": 5704,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5685,
											"end": 5705,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 5685,
											"end": 5705,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5685,
											"end": 5705,
											"name": "tag",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 5685,
											"end": 5705,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5680,
											"end": 5705,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5680,
											"end": 5705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5873,
											"end": 5874,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5805,
											"end": 5871,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5801,
											"end": 5875,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 5798,
											"end": 5799,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5795,
											"end": 5876,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5790,
											"end": 5791,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5792,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5776,
											"end": 5793,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5772,
											"end": 5877,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5769,
											"end": 5771,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5769,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 5769,
											"end": 5771,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5880,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 5880,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 5880,
											"end": 5898,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5880,
											"end": 5898,
											"name": "tag",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 5880,
											"end": 5898,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5769,
											"end": 5771,
											"name": "tag",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 5769,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5928,
											"end": 5929,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5925,
											"end": 5926,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5921,
											"end": 5930,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 5910,
											"end": 5930,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5910,
											"end": 5930,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5636,
											"end": 5936,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5636,
											"end": 5936,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5636,
											"end": 5936,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5636,
											"end": 5936,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5636,
											"end": 5936,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5942,
											"end": 6038,
											"name": "tag",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 5942,
											"end": 6038,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5942,
											"end": 6038,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6008,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 6026,
											"end": 6031,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6008,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 6008,
											"end": 6032,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6008,
											"end": 6032,
											"name": "tag",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 6008,
											"end": 6032,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5997,
											"end": 6032,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5997,
											"end": 6032,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5987,
											"end": 6038,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5987,
											"end": 6038,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5987,
											"end": 6038,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5987,
											"end": 6038,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6044,
											"end": 6148,
											"name": "tag",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 6044,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6044,
											"end": 6148,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6118,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 6136,
											"end": 6141,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6118,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 6118,
											"end": 6142,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6118,
											"end": 6142,
											"name": "tag",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 6118,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6107,
											"end": 6142,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6107,
											"end": 6142,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6097,
											"end": 6148,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6097,
											"end": 6148,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6097,
											"end": 6148,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6097,
											"end": 6148,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6154,
											"end": 6280,
											"name": "tag",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 6154,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6154,
											"end": 6280,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6231,
											"end": 6273,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6224,
											"end": 6229,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6220,
											"end": 6274,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6209,
											"end": 6274,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6209,
											"end": 6274,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6286,
											"end": 6363,
											"name": "tag",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 6286,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6286,
											"end": 6363,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6357,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6341,
											"end": 6357,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6341,
											"end": 6357,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6331,
											"end": 6363,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6331,
											"end": 6363,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6331,
											"end": 6363,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6331,
											"end": 6363,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6369,
											"end": 6676,
											"name": "tag",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 6369,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6437,
											"end": 6438,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6447,
											"end": 6560,
											"name": "tag",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 6447,
											"end": 6560,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6461,
											"end": 6467,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6458,
											"end": 6459,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6455,
											"end": 6468,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 6447,
											"end": 6560,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6447,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 6447,
											"end": 6560,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6546,
											"end": 6547,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6541,
											"end": 6544,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6537,
											"end": 6548,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6531,
											"end": 6549,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6527,
											"end": 6528,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6522,
											"end": 6525,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6518,
											"end": 6529,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6511,
											"end": 6550,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6483,
											"end": 6485,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6480,
											"end": 6481,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6476,
											"end": 6486,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6447,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 6447,
											"end": 6560,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6447,
											"end": 6560,
											"name": "tag",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 6447,
											"end": 6560,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6578,
											"end": 6584,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6575,
											"end": 6576,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6569,
											"end": 6571,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6569,
											"end": 6571,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 6569,
											"end": 6571,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6658,
											"end": 6659,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6649,
											"end": 6655,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6644,
											"end": 6647,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6640,
											"end": 6656,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6633,
											"end": 6660,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6569,
											"end": 6571,
											"name": "tag",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 6569,
											"end": 6571,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6418,
											"end": 6676,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6418,
											"end": 6676,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6418,
											"end": 6676,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6418,
											"end": 6676,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6418,
											"end": 6676,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6682,
											"end": 6862,
											"name": "tag",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 6682,
											"end": 6862,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6730,
											"end": 6807,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6727,
											"end": 6728,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6720,
											"end": 6808,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6827,
											"end": 6831,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 6824,
											"end": 6825,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6817,
											"end": 6832,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6848,
											"end": 6849,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6841,
											"end": 6856,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6868,
											"end": 7048,
											"name": "tag",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 6868,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6916,
											"end": 6993,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6913,
											"end": 6914,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6994,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7013,
											"end": 7017,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 7010,
											"end": 7011,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7003,
											"end": 7018,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7037,
											"end": 7041,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7034,
											"end": 7035,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7027,
											"end": 7042,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7054,
											"end": 7156,
											"name": "tag",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 7054,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7054,
											"end": 7156,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7146,
											"end": 7148,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 7142,
											"end": 7149,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 7137,
											"end": 7139,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 7130,
											"end": 7135,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7126,
											"end": 7140,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7122,
											"end": 7150,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7112,
											"end": 7150,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7112,
											"end": 7150,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7102,
											"end": 7156,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7102,
											"end": 7156,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7102,
											"end": 7156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7102,
											"end": 7156,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7162,
											"end": 7284,
											"name": "tag",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 7162,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7235,
											"end": 7259,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 7253,
											"end": 7258,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7235,
											"end": 7259,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 7235,
											"end": 7259,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7235,
											"end": 7259,
											"name": "tag",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 7235,
											"end": 7259,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7228,
											"end": 7233,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7225,
											"end": 7260,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 7215,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 7215,
											"end": 7217,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7274,
											"end": 7275,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7271,
											"end": 7272,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7264,
											"end": 7276,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7215,
											"end": 7217,
											"name": "tag",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 7215,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7205,
											"end": 7284,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7205,
											"end": 7284,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7290,
											"end": 7428,
											"name": "tag",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 7290,
											"end": 7428,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7371,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 7397,
											"end": 7402,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7371,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 7371,
											"end": 7403,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7371,
											"end": 7403,
											"name": "tag",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 7371,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7364,
											"end": 7369,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7361,
											"end": 7404,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 7351,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 7351,
											"end": 7353,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7418,
											"end": 7419,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7416,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7408,
											"end": 7420,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7351,
											"end": 7353,
											"name": "tag",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 7351,
											"end": 7353,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7341,
											"end": 7428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7341,
											"end": 7428,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7434,
											"end": 7556,
											"name": "tag",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 7434,
											"end": 7556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7507,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "158"
										},
										{
											"begin": 7525,
											"end": 7530,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7507,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 7507,
											"end": 7531,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7507,
											"end": 7531,
											"name": "tag",
											"source": 15,
											"value": "158"
										},
										{
											"begin": 7507,
											"end": 7531,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7500,
											"end": 7505,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7497,
											"end": 7532,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 7487,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 7487,
											"end": 7489,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7546,
											"end": 7547,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7543,
											"end": 7544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7536,
											"end": 7548,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7487,
											"end": 7489,
											"name": "tag",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 7487,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7477,
											"end": 7556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7477,
											"end": 7556,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"HelpRoyalties(address,uint256,uint256)": "f938761c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftaddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"HelpRoyalties\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libs/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libs/SafeMath.sol\":{\"keccak256\":\"0x857f2ba1d26da4919d4390ddd984a96e76730ee198550e3522f667297a084dda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1143a136d8b711d81feda93ac644fa9658c07de29ba69adcfae8b1213c56f0e\",\"dweb:/ipfs/QmbMNeiLRc3vwTWzseUMCxKEE7ARrNvN1CNKPu2EcV9sNG\"]},\"libs/TransferHelper.sol\":{\"keccak256\":\"0xcd705d1b09a0d682d73dd0d9ba5a386401d2814cf275f793c9f961e5395b7947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aabce1a5dc16787e6203fb3f0acfca05fd9a3351706a95718094a677ba73dca0\",\"dweb:/ipfs/QmYDEaqULCmGNUDdBJ2Ax6Jg5a777iV4B6Ka2urjzWNu2C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"BarterswapRouter.sol": {
				"ast": {
					"absolutePath": "BarterswapRouter.sol",
					"exportedSymbols": {
						"BarterswapRouterV1": [
							687
						],
						"IAsset": [
							690
						],
						"IAuthorizer": [
							705
						],
						"IBarterswapV2Router01": [
							1658
						],
						"IERC20": [
							1742
						],
						"IFlashLoanRecipient": [
							725
						],
						"IProtocolFeesCollector": [
							793
						],
						"ISignaturesValidator": [
							810
						],
						"ISwap": [
							1797
						],
						"ITemporarilyPausable": [
							828
						],
						"IVault": [
							1336
						],
						"IWETH": [
							1350
						],
						"IWETH9": [
							1814
						],
						"SafeMath": [
							2009
						],
						"TransferHelper": [
							2277
						]
					},
					"id": 688,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"id": 2,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "57:33:0"
						},
						{
							"absolutePath": "interface/IERC20.sol",
							"file": "./interface/IERC20.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 688,
							"sourceUnit": 1743,
							"src": "92:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libs/TransferHelper.sol",
							"file": "./libs/TransferHelper.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 688,
							"sourceUnit": 2278,
							"src": "125:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libs/SafeMath.sol",
							"file": "./libs/SafeMath.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 688,
							"sourceUnit": 2010,
							"src": "161:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/ISwap.sol",
							"file": "./interface/ISwap.sol",
							"id": 6,
							"nodeType": "ImportDirective",
							"scope": 688,
							"sourceUnit": 1798,
							"src": "191:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IBalancerSwap/IAsset.sol",
							"file": "./interface/IBalancerSwap/IAsset.sol",
							"id": 7,
							"nodeType": "ImportDirective",
							"scope": 688,
							"sourceUnit": 691,
							"src": "223:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IBalancerSwap/IVault.sol",
							"file": "./interface/IBalancerSwap/IVault.sol",
							"id": 8,
							"nodeType": "ImportDirective",
							"scope": 688,
							"sourceUnit": 1337,
							"src": "270:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IWETH9.sol",
							"file": "./interface/IWETH9.sol",
							"id": 9,
							"nodeType": "ImportDirective",
							"scope": 688,
							"sourceUnit": 1815,
							"src": "317:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IBarterswapV2Router01.sol",
							"file": "./interface/IBarterswapV2Router01.sol",
							"id": 10,
							"nodeType": "ImportDirective",
							"scope": 688,
							"sourceUnit": 1659,
							"src": "350:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 687,
							"linearizedBaseContracts": [
								687
							],
							"name": "BarterswapRouterV1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 13,
									"libraryName": {
										"id": 11,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2009,
										"src": "442:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "436:24:0",
									"typeName": {
										"id": 12,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "455:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "017e7e58",
									"id": 15,
									"mutability": "mutable",
									"name": "feeTo",
									"nodeType": "VariableDeclaration",
									"scope": 687,
									"src": "469:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 14,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "469:16:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8e7fa96a",
									"id": 17,
									"mutability": "mutable",
									"name": "feeToAdmin",
									"nodeType": "VariableDeclaration",
									"scope": 687,
									"src": "506:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 16,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "506:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9af1d35a",
									"id": 19,
									"mutability": "mutable",
									"name": "fees",
									"nodeType": "VariableDeclaration",
									"scope": 687,
									"src": "538:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "538:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "257b66b0",
									"id": 23,
									"mutability": "mutable",
									"name": "routerAddreAll",
									"nodeType": "VariableDeclaration",
									"scope": 687,
									"src": "561:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "569:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "561:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 21,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "580:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 26,
									"mutability": "constant",
									"name": "WETHS",
									"nodeType": "VariableDeclaration",
									"scope": 687,
									"src": "616:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 24,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "616:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830643530304231643845386546333145323143393964314462394136343434643341446631323730",
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "641:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "BarterswapRouterV1.AccessParams",
									"id": 67,
									"members": [
										{
											"constant": false,
											"id": 29,
											"mutability": "mutable",
											"name": "amountInArr",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "724:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 28,
												"nodeType": "ArrayTypeName",
												"src": "724:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 32,
											"mutability": "mutable",
											"name": "amountOutMinArr",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "756:26:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ArrayTypeName",
												"src": "756:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 35,
											"mutability": "mutable",
											"name": "pathArr",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "792:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
												"typeString": "bytes[]"
											},
											"typeName": {
												"baseType": {
													"id": 33,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "792:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"id": 34,
												"nodeType": "ArrayTypeName",
												"src": "792:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
													"typeString": "bytes[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 37,
											"mutability": "mutable",
											"name": "to",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "820:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 36,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "820:16:0",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 39,
											"mutability": "mutable",
											"name": "deadLine",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "850:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 38,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "850:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 41,
											"mutability": "mutable",
											"name": "inputAddre",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "879:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 40,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "879:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 43,
											"mutability": "mutable",
											"name": "outAddre",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "910:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 42,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "910:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 46,
											"mutability": "mutable",
											"name": "routerIndex",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "939:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 45,
												"nodeType": "ArrayTypeName",
												"src": "939:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 49,
											"mutability": "mutable",
											"name": "crvParams",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "971:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 48,
												"nodeType": "ArrayTypeName",
												"src": "971:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 53,
											"mutability": "mutable",
											"name": "batchSwapSteps",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "1001:38:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_storage_$dyn_storage_ptr",
												"typeString": "struct IVault.BatchSwapStep[]"
											},
											"typeName": {
												"baseType": {
													"id": 51,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 50,
														"name": "IVault.BatchSwapStep",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1204,
														"src": "1001:20:0"
													},
													"referencedDeclaration": 1204,
													"src": "1001:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BatchSwapStep_$1204_storage_ptr",
														"typeString": "struct IVault.BatchSwapStep"
													}
												},
												"id": 52,
												"nodeType": "ArrayTypeName",
												"src": "1001:22:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_storage_$dyn_storage_ptr",
													"typeString": "struct IVault.BatchSwapStep[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 56,
											"mutability": "mutable",
											"name": "fundManaGements",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "1049:37:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_FundManagement_$1228_storage_ptr",
												"typeString": "struct IVault.FundManagement"
											},
											"typeName": {
												"id": 55,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 54,
													"name": "IVault.FundManagement",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1228,
													"src": "1049:21:0"
												},
												"referencedDeclaration": 1228,
												"src": "1049:21:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FundManagement_$1228_storage_ptr",
													"typeString": "struct IVault.FundManagement"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 59,
											"mutability": "mutable",
											"name": "limits",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "1096:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
												"typeString": "int256[]"
											},
											"typeName": {
												"baseType": {
													"id": 57,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1096:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 58,
												"nodeType": "ArrayTypeName",
												"src": "1096:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
													"typeString": "int256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 63,
											"mutability": "mutable",
											"name": "assets",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "1126:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_storage_ptr",
												"typeString": "contract IAsset[]"
											},
											"typeName": {
												"baseType": {
													"id": 61,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 60,
														"name": "IAsset",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 690,
														"src": "1126:6:0"
													},
													"referencedDeclaration": 690,
													"src": "1126:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAsset_$690",
														"typeString": "contract IAsset"
													}
												},
												"id": 62,
												"nodeType": "ArrayTypeName",
												"src": "1126:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_storage_ptr",
													"typeString": "contract IAsset[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 66,
											"mutability": "mutable",
											"name": "_kind",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "1157:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_SwapKind_$1135",
												"typeString": "enum IVault.SwapKind"
											},
											"typeName": {
												"id": 65,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 64,
													"name": "IVault.SwapKind",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1135,
													"src": "1157:15:0"
												},
												"referencedDeclaration": 1135,
												"src": "1157:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_SwapKind_$1135",
													"typeString": "enum IVault.SwapKind"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AccessParams",
									"nodeType": "StructDefinition",
									"scope": 687,
									"src": "694:505:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "1240:8:0",
										"statements": []
									},
									"id": 71,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1220:2:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1240:0:0"
									},
									"scope": 687,
									"src": "1213:35:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1277:91:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 74,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1295:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1295:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 76,
																"name": "feeToAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1309:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1295:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426172746572737761705632526f757465723a2045585049524544",
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1320:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4a7d1da0754581ce7ae064579be8816192727a7424a33ab329d195336a2715a",
																"typeString": "literal_string \"BarterswapV2Router: EXPIRED\""
															},
															"value": "BarterswapV2Router: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4a7d1da0754581ce7ae064579be8816192727a7424a33ab329d195336a2715a",
																"typeString": "literal_string \"BarterswapV2Router: EXPIRED\""
															}
														],
														"id": 73,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1287:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1287:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "1287:63:0"
											},
											{
												"id": 81,
												"nodeType": "PlaceholderStatement",
												"src": "1360:1:0"
											}
										]
									},
									"id": 83,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1274:2:0"
									},
									"src": "1256:112:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1407:41:0",
										"statements": [
											{
												"expression": {
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 88,
														"name": "feeToAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1417:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 89,
														"name": "_feeToAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "1430:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1417:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1417:24:0"
											}
										]
									},
									"id": 93,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "_feeToAdmin",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1386:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:21:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1407:0:0"
									},
									"scope": 687,
									"src": "1374:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "1527:1360:0",
										"statements": [
											{
												"assignments": [
													100
												],
												"declarations": [
													{
														"constant": false,
														"id": 100,
														"mutability": "mutable",
														"name": "amountInArrs",
														"nodeType": "VariableDeclaration",
														"scope": 270,
														"src": "1545:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 99,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1545:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 105,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 102,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "1583:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																	"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																}
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amountInArr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 29,
															"src": "1583:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 101,
														"name": "getAmountInAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "1568:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256[] memory) pure returns (uint256)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1568:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1545:57:0"
											},
											{
												"assignments": [
													107
												],
												"declarations": [
													{
														"constant": false,
														"id": 107,
														"mutability": "mutable",
														"name": "toFees",
														"nodeType": "VariableDeclaration",
														"scope": 270,
														"src": "1616:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1616:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 115,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31653138",
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1660:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 110,
																	"name": "fees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "1650:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 108,
																	"name": "amountInArrs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 100,
																	"src": "1633:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1922,
																"src": "1633:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1633:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1939,
														"src": "1633:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1633:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1616:49:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 116,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																"typeString": "struct BarterswapRouterV1.AccessParams calldata"
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "inputAddre",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 41,
														"src": "1683:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1712:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1704:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 118,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1704:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1704:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1683:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 166,
													"nodeType": "Block",
													"src": "1872:216:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 144,
																			"name": "params",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 96,
																			"src": "1923:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																				"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																			}
																		},
																		"id": 145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "inputAddre",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 41,
																		"src": "1923:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 146,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1941:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1941:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 150,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1960:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_BarterswapRouterV1_$687",
																					"typeString": "contract BarterswapRouterV1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_BarterswapRouterV1_$687",
																					"typeString": "contract BarterswapRouterV1"
																				}
																			],
																			"id": 149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1952:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 148,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1952:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1952:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 152,
																		"name": "amountInArrs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 100,
																		"src": "1966:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 141,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2277,
																		"src": "1891:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2277_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2147,
																	"src": "1891:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256)"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1891:89:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 154,
															"nodeType": "ExpressionStatement",
															"src": "1891:89:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 158,
																			"name": "params",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 96,
																			"src": "2030:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																				"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																			}
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "inputAddre",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 41,
																		"src": "2030:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 160,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2048:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2048:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 162,
																		"name": "feeTo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "2059:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 163,
																		"name": "toFees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2065:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 155,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2277,
																		"src": "1998:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2277_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2147,
																	"src": "1998:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256)"
																	}
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1998:74:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 165,
															"nodeType": "ExpressionStatement",
															"src": "1998:74:0"
														}
													]
												},
												"id": 167,
												"nodeType": "IfStatement",
												"src": "1680:408:0",
												"trueBody": {
													"id": 140,
													"nodeType": "Block",
													"src": "1715:153:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 124,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1741:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "1741:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 126,
																				"name": "amountInArrs",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 100,
																				"src": "1754:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 127,
																				"name": "toFees",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 107,
																				"src": "1767:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1754:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1741:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "50726963652069732077726f6e67",
																		"id": 130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1774:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ec6a417165f3e9d7e801fa9ee5810a196b69211795ebeed58c4e3c8666539155",
																			"typeString": "literal_string \"Price is wrong\""
																		},
																		"value": "Price is wrong"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ec6a417165f3e9d7e801fa9ee5810a196b69211795ebeed58c4e3c8666539155",
																			"typeString": "literal_string \"Price is wrong\""
																		}
																	],
																	"id": 123,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1733:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1733:58:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 132,
															"nodeType": "ExpressionStatement",
															"src": "1733:58:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 136,
																		"name": "feeTo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "1840:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 137,
																		"name": "toFees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "1846:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 133,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2277,
																		"src": "1809:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2277_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2172,
																	"src": "1809:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1809:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 139,
															"nodeType": "ExpressionStatement",
															"src": "1809:44:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 268,
													"nodeType": "Block",
													"src": "2153:724:0",
													"statements": [
														{
															"assignments": [
																181
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 181,
																	"mutability": "mutable",
																	"name": "rindex",
																	"nodeType": "VariableDeclaration",
																	"scope": 268,
																	"src": "2171:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 180,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2171:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 188,
															"initialValue": {
																"baseExpression": {
																	"id": 182,
																	"name": "routerAddreAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2188:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 187,
																"indexExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 183,
																			"name": "params",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 96,
																			"src": "2203:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																				"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																			}
																		},
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "routerIndex",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "2203:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 186,
																	"indexExpression": {
																		"id": 185,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "2222:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2203:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2188:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2171:54:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 189,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "2247:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2247:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 192,
																				"name": "params",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 96,
																				"src": "2257:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																					"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																				}
																			},
																			"id": 193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "crvParams",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 49,
																			"src": "2257:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2257:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "34",
																		"id": 195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2284:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"value": "4"
																	},
																	"src": "2257:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2247:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 213,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "2419:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2424:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "2419:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"expression": {
																					"id": 216,
																					"name": "params",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 96,
																					"src": "2429:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																						"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																					}
																				},
																				"id": 217,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "limits",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 59,
																				"src": "2429:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_int256_$dyn_calldata_ptr",
																					"typeString": "int256[] calldata"
																				}
																			},
																			"id": 218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "2429:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2452:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "2429:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2419:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 265,
																	"nodeType": "Block",
																	"src": "2665:194:0",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"id": 242,
																						"name": "rindex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 181,
																						"src": "2703:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"baseExpression": {
																							"expression": {
																								"id": 243,
																								"name": "params",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 96,
																								"src": "2710:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																									"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																								}
																							},
																							"id": 244,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "amountInArr",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 29,
																							"src": "2710:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																								"typeString": "uint256[] calldata"
																							}
																						},
																						"id": 246,
																						"indexExpression": {
																							"id": 245,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 169,
																							"src": "2729:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2710:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"baseExpression": {
																							"expression": {
																								"id": 247,
																								"name": "params",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 96,
																								"src": "2732:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																									"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																								}
																							},
																							"id": 248,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "amountOutMinArr",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 32,
																							"src": "2732:22:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																								"typeString": "uint256[] calldata"
																							}
																						},
																						"id": 250,
																						"indexExpression": {
																							"id": 249,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 169,
																							"src": "2755:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2732:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"baseExpression": {
																							"expression": {
																								"id": 251,
																								"name": "params",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 96,
																								"src": "2758:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																									"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																								}
																							},
																							"id": 252,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "pathArr",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 35,
																							"src": "2758:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																								"typeString": "bytes calldata[] calldata"
																							}
																						},
																						"id": 254,
																						"indexExpression": {
																							"id": 253,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 169,
																							"src": "2773:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2758:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_calldata_ptr",
																							"typeString": "bytes calldata"
																						}
																					},
																					{
																						"expression": {
																							"id": 255,
																							"name": "params",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 96,
																							"src": "2776:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																								"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																							}
																						},
																						"id": 256,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "to",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 37,
																						"src": "2776:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					},
																					{
																						"expression": {
																							"id": 257,
																							"name": "params",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 96,
																							"src": "2786:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																								"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																							}
																						},
																						"id": 258,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "deadLine",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 39,
																						"src": "2786:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 259,
																							"name": "params",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 96,
																							"src": "2802:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																								"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																							}
																						},
																						"id": 260,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "inputAddre",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 41,
																						"src": "2802:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"id": 261,
																							"name": "params",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 96,
																							"src": "2820:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																								"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																							}
																						},
																						"id": 262,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "outAddre",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 43,
																						"src": "2820:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_bytes_calldata_ptr",
																							"typeString": "bytes calldata"
																						},
																						{
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 241,
																					"name": "AmmSeriSwap",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 481,
																					"src": "2691:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																						"typeString": "function (address,uint256,uint256,bytes memory,address,uint256,address,address)"
																					}
																				},
																				"id": 263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2691:145:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 264,
																			"nodeType": "ExpressionStatement",
																			"src": "2691:145:0"
																		}
																	]
																},
																"id": 266,
																"nodeType": "IfStatement",
																"src": "2416:443:0",
																"trueBody": {
																	"id": 240,
																	"nodeType": "Block",
																	"src": "2454:207:0",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 223,
																							"name": "params",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 96,
																							"src": "2511:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																								"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																							}
																						},
																						"id": 224,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "_kind",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 66,
																						"src": "2511:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_SwapKind_$1135",
																							"typeString": "enum IVault.SwapKind"
																						}
																					},
																					{
																						"expression": {
																							"id": 225,
																							"name": "params",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 96,
																							"src": "2524:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																								"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																							}
																						},
																						"id": 226,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "inputAddre",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 41,
																						"src": "2524:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 227,
																						"name": "rindex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 181,
																						"src": "2542:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"id": 228,
																							"name": "params",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 96,
																							"src": "2549:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																								"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																							}
																						},
																						"id": 229,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "batchSwapSteps",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 53,
																						"src": "2549:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_calldata_ptr_$dyn_calldata_ptr",
																							"typeString": "struct IVault.BatchSwapStep calldata[] calldata"
																						}
																					},
																					{
																						"expression": {
																							"id": 230,
																							"name": "params",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 96,
																							"src": "2571:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																								"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																							}
																						},
																						"id": 231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "fundManaGements",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 56,
																						"src": "2571:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_FundManagement_$1228_calldata_ptr",
																							"typeString": "struct IVault.FundManagement calldata"
																						}
																					},
																					{
																						"expression": {
																							"id": 232,
																							"name": "params",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 96,
																							"src": "2594:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																								"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																							}
																						},
																						"id": 233,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "assets",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 63,
																						"src": "2594:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_calldata_ptr",
																							"typeString": "contract IAsset[] calldata"
																						}
																					},
																					{
																						"expression": {
																							"id": 234,
																							"name": "params",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 96,
																							"src": "2608:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																								"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																							}
																						},
																						"id": 235,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "limits",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 59,
																						"src": "2608:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_int256_$dyn_calldata_ptr",
																							"typeString": "int256[] calldata"
																						}
																					},
																					{
																						"expression": {
																							"id": 236,
																							"name": "params",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 96,
																							"src": "2622:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																								"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																							}
																						},
																						"id": 237,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "deadLine",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 39,
																						"src": "2622:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_SwapKind_$1135",
																							"typeString": "enum IVault.SwapKind"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_calldata_ptr_$dyn_calldata_ptr",
																							"typeString": "struct IVault.BatchSwapStep calldata[] calldata"
																						},
																						{
																							"typeIdentifier": "t_struct$_FundManagement_$1228_calldata_ptr",
																							"typeString": "struct IVault.FundManagement calldata"
																						},
																						{
																							"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_calldata_ptr",
																							"typeString": "contract IAsset[] calldata"
																						},
																						{
																							"typeIdentifier": "t_array$_t_int256_$dyn_calldata_ptr",
																							"typeString": "int256[] calldata"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 222,
																					"name": "balancerSwap",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 363,
																					"src": "2498:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_nonpayable$_t_enum$_SwapKind_$1135_$_t_address_$_t_address_$_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_$_t_struct$_FundManagement_$1228_memory_ptr_$_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$_t_uint256_$returns$__$",
																						"typeString": "function (enum IVault.SwapKind,address,address,struct IVault.BatchSwapStep memory[] memory,struct IVault.FundManagement memory,contract IAsset[] memory,int256[] memory,uint256)"
																					}
																				},
																				"id": 238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2498:140:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 239,
																			"nodeType": "ExpressionStatement",
																			"src": "2498:140:0"
																		}
																	]
																}
															},
															"id": 267,
															"nodeType": "IfStatement",
															"src": "2243:616:0",
															"trueBody": {
																"id": 212,
																"nodeType": "Block",
																"src": "2286:125:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 199,
																						"name": "params",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 96,
																						"src": "2320:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																							"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																						}
																					},
																					"id": 200,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "inputAddre",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 41,
																					"src": "2320:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 201,
																					"name": "rindex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 181,
																					"src": "2338:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 202,
																						"name": "params",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 96,
																						"src": "2345:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																							"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																						}
																					},
																					"id": 203,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "to",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 37,
																					"src": "2345:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				{
																					"baseExpression": {
																						"expression": {
																							"id": 204,
																							"name": "params",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 96,
																							"src": "2355:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																								"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																							}
																						},
																						"id": 205,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "crvParams",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 49,
																						"src": "2355:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																							"typeString": "uint256[] calldata"
																						}
																					},
																					"id": 207,
																					"indexExpression": {
																						"hexValue": "32",
																						"id": 206,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2372:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2355:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 208,
																						"name": "params",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 96,
																						"src": "2375:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																							"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																						}
																					},
																					"id": 209,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "crvParams",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 49,
																					"src": "2375:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																						"typeString": "uint256[] calldata"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																						"typeString": "uint256[] calldata"
																					}
																				],
																				"id": 198,
																				"name": "crvSwap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "2312:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256[] memory)"
																				}
																			},
																			"id": 210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2312:80:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 211,
																		"nodeType": "ExpressionStatement",
																		"src": "2312:80:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 172,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "2118:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 173,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "2122:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
																	"typeString": "struct BarterswapRouterV1.AccessParams calldata"
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "routerIndex",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 46,
															"src": "2122:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2122:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2118:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 269,
												"initializationExpression": {
													"assignments": [
														169
													],
													"declarations": [
														{
															"constant": false,
															"id": 169,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 269,
															"src": "2106:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 168,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2106:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 171,
													"initialValue": {
														"hexValue": "30",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2115:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2106:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2149:3:0",
														"subExpression": {
															"id": 177,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "2149:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 179,
													"nodeType": "ExpressionStatement",
													"src": "2149:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2102:775:0"
											}
										]
									},
									"functionSelector": "239aad0a",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "multiSwap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1480:28:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AccessParams_$67_calldata_ptr",
													"typeString": "struct BarterswapRouterV1.AccessParams"
												},
												"typeName": {
													"id": 95,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 94,
														"name": "AccessParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 67,
														"src": "1480:12:0"
													},
													"referencedDeclaration": 67,
													"src": "1480:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessParams_$67_storage_ptr",
														"typeString": "struct BarterswapRouterV1.AccessParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:30:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1527:0:0"
									},
									"scope": 687,
									"src": "1460:1427:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3155:461:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 297,
														"name": "_inputAddre",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "3168:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3191:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3183:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 298,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3183:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3183:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3168:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 360,
													"nodeType": "Block",
													"src": "3368:242:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 330,
																		"name": "_rindex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 278,
																		"src": "3406:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 331,
																				"name": "_swaps",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 282,
																				"src": "3414:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct IVault.BatchSwapStep memory[] memory"
																				}
																			},
																			"id": 333,
																			"indexExpression": {
																				"hexValue": "30",
																				"id": 332,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3421:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3414:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BatchSwapStep_$1204_memory_ptr",
																				"typeString": "struct IVault.BatchSwapStep memory"
																			}
																		},
																		"id": 334,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1201,
																		"src": "3414:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 327,
																				"name": "_rindex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 278,
																				"src": "3389:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 326,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1742,
																			"src": "3382:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1742_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3382:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1742",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1721,
																	"src": "3382:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3382:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 336,
															"nodeType": "ExpressionStatement",
															"src": "3382:49:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 340,
																		"name": "_inputAddre",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3473:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 341,
																		"name": "_rindex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 278,
																		"src": "3485:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 342,
																				"name": "_swaps",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 282,
																				"src": "3493:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct IVault.BatchSwapStep memory[] memory"
																				}
																			},
																			"id": 344,
																			"indexExpression": {
																				"hexValue": "30",
																				"id": 343,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3500:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3493:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BatchSwapStep_$1204_memory_ptr",
																				"typeString": "struct IVault.BatchSwapStep memory"
																			}
																		},
																		"id": 345,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1201,
																		"src": "3493:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 337,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2277,
																		"src": "3445:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2277_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2101,
																	"src": "3445:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3445:65:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 347,
															"nodeType": "ExpressionStatement",
															"src": "3445:65:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 352,
																		"name": "_kind",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "3554:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_SwapKind_$1135",
																			"typeString": "enum IVault.SwapKind"
																		}
																	},
																	{
																		"id": 353,
																		"name": "_swaps",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "3560:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct IVault.BatchSwapStep memory[] memory"
																		}
																	},
																	{
																		"id": 354,
																		"name": "_funds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 285,
																		"src": "3567:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FundManagement_$1228_memory_ptr",
																			"typeString": "struct IVault.FundManagement memory"
																		}
																	},
																	{
																		"id": 355,
																		"name": "_assets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "3574:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr",
																			"typeString": "contract IAsset[] memory"
																		}
																	},
																	{
																		"id": 356,
																		"name": "_limit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "3582:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
																			"typeString": "int256[] memory"
																		}
																	},
																	{
																		"id": 357,
																		"name": "_deadLine",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 294,
																		"src": "3589:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_SwapKind_$1135",
																			"typeString": "enum IVault.SwapKind"
																		},
																		{
																			"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct IVault.BatchSwapStep memory[] memory"
																		},
																		{
																			"typeIdentifier": "t_struct$_FundManagement_$1228_memory_ptr",
																			"typeString": "struct IVault.FundManagement memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr",
																			"typeString": "contract IAsset[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
																			"typeString": "int256[] memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 349,
																				"name": "_rindex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 278,
																				"src": "3530:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 348,
																			"name": "ISwap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1797,
																			"src": "3524:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ISwap_$1797_$",
																				"typeString": "type(contract ISwap)"
																			}
																		},
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3524:14:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISwap_$1797",
																			"typeString": "contract ISwap"
																		}
																	},
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "filterBalancer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1796,
																	"src": "3524:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$_t_enum$_SwapKind_$1135_$_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_$_t_struct$_FundManagement_$1228_memory_ptr_$_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (enum IVault.SwapKind,struct IVault.BatchSwapStep memory[] memory,struct IVault.FundManagement memory,contract IAsset[] memory,int256[] memory,uint256) payable external"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3524:75:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 359,
															"nodeType": "ExpressionStatement",
															"src": "3524:75:0"
														}
													]
												},
												"id": 361,
												"nodeType": "IfStatement",
												"src": "3165:445:0",
												"trueBody": {
													"id": 325,
													"nodeType": "Block",
													"src": "3194:170:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 306,
																		"name": "_rindex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 278,
																		"src": "3239:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 307,
																				"name": "_swaps",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 282,
																				"src": "3247:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct IVault.BatchSwapStep memory[] memory"
																				}
																			},
																			"id": 309,
																			"indexExpression": {
																				"hexValue": "30",
																				"id": 308,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3254:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3247:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BatchSwapStep_$1204_memory_ptr",
																				"typeString": "struct IVault.BatchSwapStep memory"
																			}
																		},
																		"id": 310,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1201,
																		"src": "3247:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 303,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2277,
																		"src": "3208:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2277_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2172,
																	"src": "3208:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3208:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 312,
															"nodeType": "ExpressionStatement",
															"src": "3208:56:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 317,
																		"name": "_kind",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "3308:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_SwapKind_$1135",
																			"typeString": "enum IVault.SwapKind"
																		}
																	},
																	{
																		"id": 318,
																		"name": "_swaps",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "3314:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct IVault.BatchSwapStep memory[] memory"
																		}
																	},
																	{
																		"id": 319,
																		"name": "_funds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 285,
																		"src": "3321:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FundManagement_$1228_memory_ptr",
																			"typeString": "struct IVault.FundManagement memory"
																		}
																	},
																	{
																		"id": 320,
																		"name": "_assets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "3328:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr",
																			"typeString": "contract IAsset[] memory"
																		}
																	},
																	{
																		"id": 321,
																		"name": "_limit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "3336:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
																			"typeString": "int256[] memory"
																		}
																	},
																	{
																		"id": 322,
																		"name": "_deadLine",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 294,
																		"src": "3343:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_SwapKind_$1135",
																			"typeString": "enum IVault.SwapKind"
																		},
																		{
																			"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct IVault.BatchSwapStep memory[] memory"
																		},
																		{
																			"typeIdentifier": "t_struct$_FundManagement_$1228_memory_ptr",
																			"typeString": "struct IVault.FundManagement memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr",
																			"typeString": "contract IAsset[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
																			"typeString": "int256[] memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 314,
																				"name": "_rindex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 278,
																				"src": "3284:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 313,
																			"name": "ISwap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1797,
																			"src": "3278:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ISwap_$1797_$",
																				"typeString": "type(contract ISwap)"
																			}
																		},
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3278:14:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISwap_$1797",
																			"typeString": "contract ISwap"
																		}
																	},
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "filterBalancer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1796,
																	"src": "3278:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$_t_enum$_SwapKind_$1135_$_t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr_$_t_struct$_FundManagement_$1228_memory_ptr_$_t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (enum IVault.SwapKind,struct IVault.BatchSwapStep memory[] memory,struct IVault.FundManagement memory,contract IAsset[] memory,int256[] memory,uint256) payable external"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3278:75:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 324,
															"nodeType": "ExpressionStatement",
															"src": "3278:75:0"
														}
													]
												}
											}
										]
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balancerSwap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "_kind",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2945:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_SwapKind_$1135",
													"typeString": "enum IVault.SwapKind"
												},
												"typeName": {
													"id": 273,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 272,
														"name": "IVault.SwapKind",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1135,
														"src": "2945:15:0"
													},
													"referencedDeclaration": 1135,
													"src": "2945:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SwapKind_$1135",
														"typeString": "enum IVault.SwapKind"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "_inputAddre",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2968:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2968:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "_rindex",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2988:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "_swaps",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3004:36:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IVault.BatchSwapStep[]"
												},
												"typeName": {
													"baseType": {
														"id": 280,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 279,
															"name": "IVault.BatchSwapStep",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1204,
															"src": "3004:20:0"
														},
														"referencedDeclaration": 1204,
														"src": "3004:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BatchSwapStep_$1204_storage_ptr",
															"typeString": "struct IVault.BatchSwapStep"
														}
													},
													"id": 281,
													"nodeType": "ArrayTypeName",
													"src": "3004:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_storage_$dyn_storage_ptr",
														"typeString": "struct IVault.BatchSwapStep[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "_funds",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3041:35:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FundManagement_$1228_memory_ptr",
													"typeString": "struct IVault.FundManagement"
												},
												"typeName": {
													"id": 284,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 283,
														"name": "IVault.FundManagement",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1228,
														"src": "3041:21:0"
													},
													"referencedDeclaration": 1228,
													"src": "3041:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FundManagement_$1228_storage_ptr",
														"typeString": "struct IVault.FundManagement"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "_assets",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3078:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr",
													"typeString": "contract IAsset[]"
												},
												"typeName": {
													"baseType": {
														"id": 287,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 286,
															"name": "IAsset",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 690,
															"src": "3078:6:0"
														},
														"referencedDeclaration": 690,
														"src": "3078:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAsset_$690",
															"typeString": "contract IAsset"
														}
													},
													"id": 288,
													"nodeType": "ArrayTypeName",
													"src": "3078:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_storage_ptr",
														"typeString": "contract IAsset[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "_limit",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3104:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
													"typeString": "int256[]"
												},
												"typeName": {
													"baseType": {
														"id": 290,
														"name": "int256",
														"nodeType": "ElementaryTypeName",
														"src": "3104:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 291,
													"nodeType": "ArrayTypeName",
													"src": "3104:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
														"typeString": "int256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "_deadLine",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3128:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2944:202:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3155:0:0"
									},
									"scope": 687,
									"src": "2923:693:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "3756:195:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 381,
															"name": "_rindex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "3794:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 382,
															"name": "_dx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "3802:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 378,
																	"name": "_inputAddre",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "3773:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 377,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1742,
																"src": "3766:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1742_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3766:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1742",
																"typeString": "contract IERC20"
															}
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1721,
														"src": "3766:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3766:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "3766:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 388,
															"name": "_inputAddre",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3844:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "_rindex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "3856:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 390,
															"name": "_dx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "3864:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 385,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "3816:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2277_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2101,
														"src": "3816:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3816:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "3816:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 397,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "3905:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "_inputAddre",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3909:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "parameterList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "3921:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 394,
																	"name": "_rindex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "3884:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 393,
																"name": "ISwap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1797,
																"src": "3878:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISwap_$1797_$",
																	"typeString": "type(contract ISwap)"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3878:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISwap_$1797",
																"typeString": "contract ISwap"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "filterCurve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1774,
														"src": "3878:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory) external"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3878:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "3878:57:0"
											}
										]
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "crvSwap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "_inputAddre",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3656:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "_rindex",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3692:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "_dx",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3704:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "parameterList",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3716:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 372,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3716:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 373,
													"nodeType": "ArrayTypeName",
													"src": "3716:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3655:92:0"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3756:0:0"
									},
									"scope": 687,
									"src": "3639:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "4157:572:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 422,
														"name": "_inputAddre",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "4174:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4197:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4189:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 423,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4189:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4189:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4174:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 478,
													"nodeType": "Block",
													"src": "4426:297:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 453,
																		"name": "_rindex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "4472:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 454,
																		"name": "_amountInArr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "4480:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 450,
																				"name": "_rindex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 405,
																				"src": "4455:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 449,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1742,
																			"src": "4448:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1742_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4448:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1742",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1721,
																	"src": "4448:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4448:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 456,
															"nodeType": "ExpressionStatement",
															"src": "4448:45:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 460,
																		"name": "_inputAddre",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "4543:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 461,
																		"name": "_rindex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "4555:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 462,
																		"name": "_amountInArr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "4563:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 457,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2277,
																		"src": "4515:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2277_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2101,
																	"src": "4515:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4515:61:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 464,
															"nodeType": "ExpressionStatement",
															"src": "4515:61:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 469,
																		"name": "_amountInArr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "4624:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 470,
																		"name": "_amountOutMinArr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "4637:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 471,
																		"name": "_pathArr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "4654:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 472,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "4663:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 473,
																		"name": "_deadLine",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "4667:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 474,
																		"name": "_inputAddre",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "4677:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 475,
																		"name": "_outAddre",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "4689:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 466,
																				"name": "_rindex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 405,
																				"src": "4604:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 465,
																			"name": "ISwap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1797,
																			"src": "4598:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ISwap_$1797_$",
																				"typeString": "type(contract ISwap)"
																			}
																		},
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4598:14:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISwap_$1797",
																			"typeString": "contract ISwap"
																		}
																	},
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "filterSwap",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1764,
																	"src": "4598:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (uint256,uint256,bytes memory,address,uint256,address,address) payable external"
																	}
																},
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4598:101:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 477,
															"nodeType": "ExpressionStatement",
															"src": "4598:101:0"
														}
													]
												},
												"id": 479,
												"nodeType": "IfStatement",
												"src": "4171:552:0",
												"trueBody": {
													"id": 448,
													"nodeType": "Block",
													"src": "4200:222:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 431,
																		"name": "_rindex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "4253:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 432,
																		"name": "_amountInArr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "4261:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 428,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2277,
																		"src": "4222:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2277_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2172,
																	"src": "4222:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4222:52:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 434,
															"nodeType": "ExpressionStatement",
															"src": "4222:52:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 439,
																		"name": "_amountInArr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "4322:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 440,
																		"name": "_amountOutMinArr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "4335:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 441,
																		"name": "_pathArr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "4352:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 442,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "4361:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 443,
																		"name": "_deadLine",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "4365:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 444,
																		"name": "_inputAddre",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "4375:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 445,
																		"name": "_outAddre",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "4387:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 436,
																				"name": "_rindex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 405,
																				"src": "4302:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 435,
																			"name": "ISwap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1797,
																			"src": "4296:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ISwap_$1797_$",
																				"typeString": "type(contract ISwap)"
																			}
																		},
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4296:14:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISwap_$1797",
																			"typeString": "contract ISwap"
																		}
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "filterSwap",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1764,
																	"src": "4296:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (uint256,uint256,bytes memory,address,uint256,address,address) payable external"
																	}
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4296:101:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 447,
															"nodeType": "ExpressionStatement",
															"src": "4296:101:0"
														}
													]
												}
											}
										]
									},
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "AmmSeriSwap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "_rindex",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "3995:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "_amountInArr",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4011:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "_amountOutMinArr",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4032:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "_pathArr",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4057:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 410,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4057:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4079:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "_deadLine",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4091:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "_inputAddre",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4109:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "_outAddre",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4129:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:153:0"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4157:0:0"
									},
									"scope": 687,
									"src": "3974:755:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "4842:172:0",
										"statements": [
											{
												"assignments": [
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 490,
														"mutability": "mutable",
														"name": "amountInArrs",
														"nodeType": "VariableDeclaration",
														"scope": 513,
														"src": "4852:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 489,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4852:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 491,
												"nodeType": "VariableDeclarationStatement",
												"src": "4852:17:0"
											},
											{
												"body": {
													"id": 509,
													"nodeType": "Block",
													"src": "4923:55:0",
													"statements": [
														{
															"expression": {
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 503,
																	"name": "amountInArrs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "4937:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 504,
																		"name": "amountInArr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 484,
																		"src": "4953:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 506,
																	"indexExpression": {
																		"id": 505,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "4965:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4953:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4937:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 508,
															"nodeType": "ExpressionStatement",
															"src": "4937:30:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 496,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "4895:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 497,
															"name": "amountInArr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "4899:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4899:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4895:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 510,
												"initializationExpression": {
													"assignments": [
														493
													],
													"declarations": [
														{
															"constant": false,
															"id": 493,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 510,
															"src": "4883:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 492,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4883:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 495,
													"initialValue": {
														"hexValue": "30",
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4892:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4883:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4919:3:0",
														"subExpression": {
															"id": 500,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "4919:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 502,
													"nodeType": "ExpressionStatement",
													"src": "4919:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4879:99:0"
											},
											{
												"expression": {
													"id": 511,
													"name": "amountInArrs",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 490,
													"src": "4994:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 488,
												"id": 512,
												"nodeType": "Return",
												"src": "4987:19:0"
											}
										]
									},
									"functionSelector": "fd07291f",
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountInAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "amountInArr",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "4783:29:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 482,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4783:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 483,
													"nodeType": "ArrayTypeName",
													"src": "4783:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4782:31:0"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "4834:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4833:9:0"
									},
									"scope": 687,
									"src": "4759:255:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "5102:310:0",
										"statements": [
											{
												"assignments": [
													522
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "toFees",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "5116:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 521,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5116:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 530,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31653138",
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5156:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 525,
																	"name": "fees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "5146:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 523,
																	"name": "amountin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "5133:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1922,
																"src": "5133:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5133:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1939,
														"src": "5133:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5133:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5116:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 532,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5183:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "5183:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 534,
																	"name": "amountin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "5196:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 535,
																	"name": "toFees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "5207:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5196:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5183:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726963652069732077726f6e67",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5214:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec6a417165f3e9d7e801fa9ee5810a196b69211795ebeed58c4e3c8666539155",
																"typeString": "literal_string \"Price is wrong\""
															},
															"value": "Price is wrong"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec6a417165f3e9d7e801fa9ee5810a196b69211795ebeed58c4e3c8666539155",
																"typeString": "literal_string \"Price is wrong\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5175:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5175:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "5175:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 544,
															"name": "feeTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "5276:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 545,
															"name": "toFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "5282:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 541,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "5245:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2277_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2172,
														"src": "5245:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5245:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "5245:44:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 549,
																		"name": "WETHS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "5310:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 548,
																	"name": "IWETH9",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1814,
																	"src": "5303:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IWETH9_$1814_$",
																		"typeString": "type(contract IWETH9)"
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5303:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWETH9_$1814",
																	"typeString": "contract IWETH9"
																}
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1807,
															"src": "5303:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 552,
																"name": "amountin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "5331:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5303:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5303:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "5303:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 559,
															"name": "WETHS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "5386:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 560,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "5392:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 561,
															"name": "amountin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "5396:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 556,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "5358:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2277_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2101,
														"src": "5358:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5358:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "5358:47:0"
											}
										]
									},
									"functionSelector": "ef3858ab",
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ethToWeth",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "amountin",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5056:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5056:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5074:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5055:31:0"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5102:0:0"
									},
									"scope": 687,
									"src": "5037:375:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "5492:116:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 575,
																"name": "_feeTo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "5510:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5528:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5520:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 576,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5520:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5520:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5510:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426172746572737761703a20464f5242494444454e",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5532:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e3211a392c9384e9023e00a96a7c46965046c5c5de8ed092aafb60d74edb4564",
																"typeString": "literal_string \"Barterswap: FORBIDDEN\""
															},
															"value": "Barterswap: FORBIDDEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e3211a392c9384e9023e00a96a7c46965046c5c5de8ed092aafb60d74edb4564",
																"typeString": "literal_string \"Barterswap: FORBIDDEN\""
															}
														],
														"id": 574,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5502:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5502:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "5502:54:0"
											},
											{
												"expression": {
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 584,
														"name": "feeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "5566:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 585,
														"name": "_feeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "5574:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "5566:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "5566:14:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5597:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 573,
												"id": 589,
												"nodeType": "Return",
												"src": "5590:11:0"
											}
										]
									},
									"functionSelector": "f46901ed",
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 570,
											"modifierName": {
												"id": 569,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 83,
												"src": "5468:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5468:9:0"
										}
									],
									"name": "setFeeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "_feeTo",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "5437:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5437:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5436:24:0"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "5486:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5486:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5485:6:0"
									},
									"scope": 687,
									"src": "5419:189:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "5696:132:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 601,
																"name": "_feetoAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "5715:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5738:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5730:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 602,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5730:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5730:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5715:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426172746572737761703a20464f5242494444454e",
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5742:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e3211a392c9384e9023e00a96a7c46965046c5c5de8ed092aafb60d74edb4564",
																"typeString": "literal_string \"Barterswap: FORBIDDEN\""
															},
															"value": "Barterswap: FORBIDDEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e3211a392c9384e9023e00a96a7c46965046c5c5de8ed092aafb60d74edb4564",
																"typeString": "literal_string \"Barterswap: FORBIDDEN\""
															}
														],
														"id": 600,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5707:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "5707:59:0"
											},
											{
												"expression": {
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 610,
														"name": "feeToAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "5776:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 611,
														"name": "_feetoAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "5789:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5776:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "5776:24:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5817:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 599,
												"id": 615,
												"nodeType": "Return",
												"src": "5810:11:0"
											}
										]
									},
									"functionSelector": "a2e74af6",
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 596,
											"modifierName": {
												"id": 595,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 83,
												"src": "5672:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5672:9:0"
										}
									],
									"name": "setFeeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "_feetoAdmin",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "5644:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5643:21:0"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "5690:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5690:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5689:6:0"
									},
									"scope": 687,
									"src": "5620:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "5900:104:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 627,
																"name": "_fees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 619,
																"src": "5918:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5927:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5918:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426172746572737761703a20464f5242494444454e",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5930:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e3211a392c9384e9023e00a96a7c46965046c5c5de8ed092aafb60d74edb4564",
																"typeString": "literal_string \"Barterswap: FORBIDDEN\""
															},
															"value": "Barterswap: FORBIDDEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e3211a392c9384e9023e00a96a7c46965046c5c5de8ed092aafb60d74edb4564",
																"typeString": "literal_string \"Barterswap: FORBIDDEN\""
															}
														],
														"id": 626,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5910:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5910:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "5910:44:0"
											},
											{
												"expression": {
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 633,
														"name": "fees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "5964:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 634,
														"name": "_fees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "5971:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5964:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "5964:12:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5993:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 625,
												"id": 638,
												"nodeType": "Return",
												"src": "5986:11:0"
											}
										]
									},
									"functionSelector": "3d18678e",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 622,
											"modifierName": {
												"id": 621,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 83,
												"src": "5876:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5876:9:0"
										}
									],
									"name": "setFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "_fees",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "5857:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5857:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5856:12:0"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "5894:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5894:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5893:6:0"
									},
									"scope": 687,
									"src": "5840:164:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "6110:143:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 652,
																"name": "_routeraddre",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "6128:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6144:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 653,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6144:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6144:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6128:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426172746572737761703a20464f5242494444454e",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6155:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e3211a392c9384e9023e00a96a7c46965046c5c5de8ed092aafb60d74edb4564",
																"typeString": "literal_string \"Barterswap: FORBIDDEN\""
															},
															"value": "Barterswap: FORBIDDEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e3211a392c9384e9023e00a96a7c46965046c5c5de8ed092aafb60d74edb4564",
																"typeString": "literal_string \"Barterswap: FORBIDDEN\""
															}
														],
														"id": 651,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6120:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6120:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "6120:59:0"
											},
											{
												"expression": {
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 661,
															"name": "routerAddreAll",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "6189:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 663,
														"indexExpression": {
															"id": 662,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "6204:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6189:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 664,
														"name": "_routeraddre",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "6213:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6189:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "6189:36:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6242:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 650,
												"id": 668,
												"nodeType": "Return",
												"src": "6235:11:0"
											}
										]
									},
									"functionSelector": "f654df7a",
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 647,
											"modifierName": {
												"id": 646,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 83,
												"src": "6087:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6087:9:0"
										}
									],
									"name": "setRouterAddreAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6043:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "_routeraddre",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6058:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6058:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6042:37:0"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6105:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6105:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6104:6:0"
									},
									"scope": 687,
									"src": "6016:237:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "6330:66:0",
										"statements": [
											{
												"expression": {
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 677,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "6340:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 679,
																		"name": "_routerArr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "6370:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 678,
																	"name": "IBarterswapV2Router01",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1658,
																	"src": "6348:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IBarterswapV2Router01_$1658_$",
																		"typeString": "type(contract IBarterswapV2Router01)"
																	}
																},
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6348:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBarterswapV2Router01_$1658",
																	"typeString": "contract IBarterswapV2Router01"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1362,
															"src": "6348:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6348:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6340:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 684,
												"nodeType": "ExpressionStatement",
												"src": "6340:48:0"
											}
										]
									},
									"functionSelector": "8ac051f2",
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWeth",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "_routerArr",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "6277:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6277:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6276:20:0"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "WETH",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "6317:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6317:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6316:14:0"
									},
									"scope": 687,
									"src": "6260:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 688,
							"src": "401:6000:0"
						}
					],
					"src": "33:6368:0"
				},
				"id": 0
			},
			"interface/IBalancerSwap/IAsset.sol": {
				"ast": {
					"absolutePath": "interface/IBalancerSwap/IAsset.sol",
					"exportedSymbols": {
						"IAsset": [
							690
						]
					},
					"id": 691,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 689,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 690,
							"linearizedBaseContracts": [
								690
							],
							"name": "IAsset",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 691,
							"src": "57:73:1"
						}
					],
					"src": "32:98:1"
				},
				"id": 1
			},
			"interface/IBalancerSwap/IAuthorizer.sol": {
				"ast": {
					"absolutePath": "interface/IBalancerSwap/IAuthorizer.sol",
					"exportedSymbols": {
						"IAuthorizer": [
							705
						]
					},
					"id": 706,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 692,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 705,
							"linearizedBaseContracts": [
								705
							],
							"name": "IAuthorizer",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "86:121:2",
										"text": " @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`."
									},
									"functionSelector": "9be2a884",
									"id": 704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canPerform",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "actionId",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "241:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 694,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "267:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "where",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "292:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "292:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:80:2"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "335:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 701,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "335:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "334:6:2"
									},
									"scope": 705,
									"src": "212:129:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 706,
							"src": "58:285:2"
						}
					],
					"src": "33:310:2"
				},
				"id": 2
			},
			"interface/IBalancerSwap/IFlashLoanRecipient.sol": {
				"ast": {
					"absolutePath": "interface/IBalancerSwap/IFlashLoanRecipient.sol",
					"exportedSymbols": {
						"IERC20": [
							1742
						],
						"IFlashLoanRecipient": [
							725
						]
					},
					"id": 726,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 707,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:3"
						},
						{
							"absolutePath": "interface/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 708,
							"nodeType": "ImportDirective",
							"scope": 726,
							"sourceUnit": 1743,
							"src": "62:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 725,
							"linearizedBaseContracts": [
								725
							],
							"name": "IFlashLoanRecipient",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "123:496:3",
										"text": " @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n Vault, or else the entire flash loan will revert.\n `userData` is the same value passed in the `IVault.flashLoan` call."
									},
									"functionSelector": "f04f2707",
									"id": 724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "receiveFlashLoan",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "659:22:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_memory_ptr",
													"typeString": "contract IERC20[]"
												},
												"typeName": {
													"baseType": {
														"id": 711,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 710,
															"name": "IERC20",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1742,
															"src": "659:6:3"
														},
														"referencedDeclaration": 1742,
														"src": "659:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1742",
															"typeString": "contract IERC20"
														}
													},
													"id": 712,
													"nodeType": "ArrayTypeName",
													"src": "659:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_storage_ptr",
														"typeString": "contract IERC20[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "691:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 714,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "691:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 715,
													"nodeType": "ArrayTypeName",
													"src": "691:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "feeAmounts",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "725:27:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 717,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "725:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 718,
													"nodeType": "ArrayTypeName",
													"src": "725:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "userData",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "762:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 720,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "762:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "649:140:3"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "798:0:3"
									},
									"scope": 725,
									"src": "624:175:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 726,
							"src": "87:714:3"
						}
					],
					"src": "36:766:3"
				},
				"id": 3
			},
			"interface/IBalancerSwap/IProtocolFeesCollector.sol": {
				"ast": {
					"absolutePath": "interface/IBalancerSwap/IProtocolFeesCollector.sol",
					"exportedSymbols": {
						"IAuthorizer": [
							705
						],
						"IERC20": [
							1742
						],
						"IProtocolFeesCollector": [
							793
						],
						"IVault": [
							1336
						]
					},
					"id": 794,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 727,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"absolutePath": "interface/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 728,
							"nodeType": "ImportDirective",
							"scope": 794,
							"sourceUnit": 1743,
							"src": "62:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IBalancerSwap/IAuthorizer.sol",
							"file": "./IAuthorizer.sol",
							"id": 729,
							"nodeType": "ImportDirective",
							"scope": 794,
							"sourceUnit": 706,
							"src": "86:27:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IBalancerSwap/IVault.sol",
							"file": "./IVault.sol",
							"id": 730,
							"nodeType": "ImportDirective",
							"scope": 794,
							"sourceUnit": 1337,
							"src": "114:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 793,
							"linearizedBaseContracts": [
								793
							],
							"name": "IProtocolFeesCollector",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 734,
									"name": "SwapFeePercentageChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"indexed": false,
												"mutability": "mutable",
												"name": "newSwapFeePercentage",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "208:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "208:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "207:30:4"
									},
									"src": "177:61:4"
								},
								{
									"anonymous": false,
									"id": 738,
									"name": "FlashLoanFeePercentageChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFlashLoanFeePercentage",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "279:33:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "279:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "278:35:4"
									},
									"src": "243:71:4"
								},
								{
									"functionSelector": "6daefab6",
									"id": 750,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawCollectedFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "360:24:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_calldata_ptr",
													"typeString": "contract IERC20[]"
												},
												"typeName": {
													"baseType": {
														"id": 740,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 739,
															"name": "IERC20",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1742,
															"src": "360:6:4"
														},
														"referencedDeclaration": 1742,
														"src": "360:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1742",
															"typeString": "contract IERC20"
														}
													},
													"id": 741,
													"nodeType": "ArrayTypeName",
													"src": "360:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_storage_ptr",
														"typeString": "contract IERC20[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "394:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 743,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "394:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 744,
													"nodeType": "ArrayTypeName",
													"src": "394:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "430:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "350:103:4"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:0:4"
									},
									"scope": 793,
									"src": "320:143:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38e9922e",
									"id": 755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSwapFeePercentage",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "newSwapFeePercentage",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "499:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:30:4"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "537:0:4"
									},
									"scope": 793,
									"src": "469:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6b6b9f69",
									"id": 760,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFlashLoanFeePercentage",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "newFlashLoanFeePercentage",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "579:33:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "578:35:4"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "622:0:4"
									},
									"scope": 793,
									"src": "544:79:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "55c67628",
									"id": 765,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSwapFeePercentage",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "658:2:4"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "684:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:9:4"
									},
									"scope": 793,
									"src": "629:64:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d877845c",
									"id": 770,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFlashLoanFeePercentage",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:2:4"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "759:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:9:4"
									},
									"scope": 793,
									"src": "699:69:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e42abf35",
									"id": 780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCollectedFeeAmounts",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "806:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_memory_ptr",
													"typeString": "contract IERC20[]"
												},
												"typeName": {
													"baseType": {
														"id": 772,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 771,
															"name": "IERC20",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1742,
															"src": "806:6:4"
														},
														"referencedDeclaration": 1742,
														"src": "806:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1742",
															"typeString": "contract IERC20"
														}
													},
													"id": 773,
													"nodeType": "ArrayTypeName",
													"src": "806:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_storage_ptr",
														"typeString": "contract IERC20[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:24:4"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "feeAmounts",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "853:27:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 776,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "853:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 777,
													"nodeType": "ArrayTypeName",
													"src": "853:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:29:4"
									},
									"scope": 793,
									"src": "774:108:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aaabadc5",
									"id": 786,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAuthorizer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "910:2:4"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "936:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAuthorizer_$705",
													"typeString": "contract IAuthorizer"
												},
												"typeName": {
													"id": 783,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 782,
														"name": "IAuthorizer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 705,
														"src": "936:11:4"
													},
													"referencedDeclaration": 705,
													"src": "936:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAuthorizer_$705",
														"typeString": "contract IAuthorizer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "935:13:4"
									},
									"scope": 793,
									"src": "888:61:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fbfa77cf",
									"id": 792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vault",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:4"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "995:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IVault_$1336",
													"typeString": "contract IVault"
												},
												"typeName": {
													"id": 789,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 788,
														"name": "IVault",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1336,
														"src": "995:6:4"
													},
													"referencedDeclaration": 1336,
													"src": "995:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVault_$1336",
														"typeString": "contract IVault"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "994:8:4"
									},
									"scope": 793,
									"src": "955:48:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 794,
							"src": "138:867:4"
						}
					],
					"src": "35:971:4"
				},
				"id": 4
			},
			"interface/IBalancerSwap/ISignaturesValidator.sol": {
				"ast": {
					"absolutePath": "interface/IBalancerSwap/ISignaturesValidator.sol",
					"exportedSymbols": {
						"ISignaturesValidator": [
							810
						]
					},
					"id": 811,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 795,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 810,
							"linearizedBaseContracts": [
								810
							],
							"name": "ISignaturesValidator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "99:60:5",
										"text": " @dev Returns the EIP712 domain separator."
									},
									"functionSelector": "ed24911d",
									"id": 801,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDomainSeparator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "191:2:5"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "217:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 798,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "217:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "216:9:5"
									},
									"scope": 810,
									"src": "164:62:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "232:83:5",
										"text": " @dev Returns the next nonce used by an address to sign messages."
									},
									"functionSelector": "90193b7c",
									"id": 809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNextNonce",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "342:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:14:5"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "379:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:9:5"
									},
									"scope": 810,
									"src": "320:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 811,
							"src": "62:328:5"
						}
					],
					"src": "37:354:5"
				},
				"id": 5
			},
			"interface/IBalancerSwap/ITemporarilyPausable.sol": {
				"ast": {
					"absolutePath": "interface/IBalancerSwap/ITemporarilyPausable.sol",
					"exportedSymbols": {
						"ITemporarilyPausable": [
							828
						]
					},
					"id": 829,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 812,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 828,
							"linearizedBaseContracts": [
								828
							],
							"name": "ITemporarilyPausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "97:83:6",
										"text": " @dev Emitted every time the pause state changes by `_setPaused`."
									},
									"id": 817,
									"name": "PausedStateChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"indexed": false,
												"mutability": "mutable",
												"name": "paused",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "210:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 814,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "210:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "209:13:6"
									},
									"src": "185:38:6"
								},
								{
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "229:57:6",
										"text": " @dev Returns the current paused state."
									},
									"functionSelector": "1c0de051",
									"id": 827,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPausedState",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:2:6"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "paused",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "377:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 820,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "377:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "pauseWindowEndTime",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "402:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "bufferPeriodEndTime",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "442:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "363:116:6"
									},
									"scope": 828,
									"src": "291:189:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 829,
							"src": "60:422:6"
						}
					],
					"src": "35:447:6"
				},
				"id": 6
			},
			"interface/IBalancerSwap/IVault.sol": {
				"ast": {
					"absolutePath": "interface/IBalancerSwap/IVault.sol",
					"exportedSymbols": {
						"IAsset": [
							690
						],
						"IAuthorizer": [
							705
						],
						"IERC20": [
							1742
						],
						"IFlashLoanRecipient": [
							725
						],
						"IProtocolFeesCollector": [
							793
						],
						"ISignaturesValidator": [
							810
						],
						"ITemporarilyPausable": [
							828
						],
						"IVault": [
							1336
						],
						"IWETH": [
							1350
						]
					},
					"id": 1337,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 830,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:7"
						},
						{
							"absolutePath": "interface/IBalancerSwap/ISignaturesValidator.sol",
							"file": "./ISignaturesValidator.sol",
							"id": 831,
							"nodeType": "ImportDirective",
							"scope": 1337,
							"sourceUnit": 811,
							"src": "59:36:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IBalancerSwap/ITemporarilyPausable.sol",
							"file": "./ITemporarilyPausable.sol",
							"id": 832,
							"nodeType": "ImportDirective",
							"scope": 1337,
							"sourceUnit": 829,
							"src": "96:36:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IBalancerSwap/IAuthorizer.sol",
							"file": "./IAuthorizer.sol",
							"id": 833,
							"nodeType": "ImportDirective",
							"scope": 1337,
							"sourceUnit": 706,
							"src": "133:27:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 834,
							"nodeType": "ImportDirective",
							"scope": 1337,
							"sourceUnit": 1743,
							"src": "161:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IBalancerSwap/IAsset.sol",
							"file": "./IAsset.sol",
							"id": 835,
							"nodeType": "ImportDirective",
							"scope": 1337,
							"sourceUnit": 691,
							"src": "185:22:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IBalancerSwap/IFlashLoanRecipient.sol",
							"file": "./IFlashLoanRecipient.sol",
							"id": 836,
							"nodeType": "ImportDirective",
							"scope": 1337,
							"sourceUnit": 726,
							"src": "208:35:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IBalancerSwap/IProtocolFeesCollector.sol",
							"file": "./IProtocolFeesCollector.sol",
							"id": 837,
							"nodeType": "ImportDirective",
							"scope": 1337,
							"sourceUnit": 794,
							"src": "244:38:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IBalancerSwap/IWETH.sol",
							"file": "./IWETH.sol",
							"id": 838,
							"nodeType": "ImportDirective",
							"scope": 1337,
							"sourceUnit": 1351,
							"src": "283:21:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 839,
										"name": "ISignaturesValidator",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 810,
										"src": "326:20:7"
									},
									"id": 840,
									"nodeType": "InheritanceSpecifier",
									"src": "326:20:7"
								},
								{
									"baseName": {
										"id": 841,
										"name": "ITemporarilyPausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 828,
										"src": "348:20:7"
									},
									"id": 842,
									"nodeType": "InheritanceSpecifier",
									"src": "348:20:7"
								}
							],
							"contractDependencies": [
								810,
								828
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1336,
							"linearizedBaseContracts": [
								1336,
								828,
								810
							],
							"name": "IVault",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "1866:55:7",
										"text": " @dev Returns the Vault's Authorizer."
									},
									"functionSelector": "aaabadc5",
									"id": 849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAuthorizer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1948:2:7"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "1974:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAuthorizer_$705",
													"typeString": "contract IAuthorizer"
												},
												"typeName": {
													"id": 846,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 845,
														"name": "IAuthorizer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 705,
														"src": "1974:11:7"
													},
													"referencedDeclaration": 705,
													"src": "1974:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAuthorizer_$705",
														"typeString": "contract IAuthorizer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1973:13:7"
									},
									"scope": 1336,
									"src": "1926:61:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "1993:175:7",
										"text": " @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\n Emits an `AuthorizerChanged` event."
									},
									"functionSelector": "058a628f",
									"id": 856,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAuthorizer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "newAuthorizer",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "2196:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAuthorizer_$705",
													"typeString": "contract IAuthorizer"
												},
												"typeName": {
													"id": 852,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 851,
														"name": "IAuthorizer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 705,
														"src": "2196:11:7"
													},
													"referencedDeclaration": 705,
													"src": "2196:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAuthorizer_$705",
														"typeString": "contract IAuthorizer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2195:27:7"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2231:0:7"
									},
									"scope": 1336,
									"src": "2173:59:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "2238:80:7",
										"text": " @dev Emitted when a new authorizer is set by `setAuthorizer`."
									},
									"id": 862,
									"name": "AuthorizerChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAuthorizer",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "2347:33:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAuthorizer_$705",
													"typeString": "contract IAuthorizer"
												},
												"typeName": {
													"id": 859,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 858,
														"name": "IAuthorizer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 705,
														"src": "2347:11:7"
													},
													"referencedDeclaration": 705,
													"src": "2347:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAuthorizer_$705",
														"typeString": "contract IAuthorizer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:35:7"
									},
									"src": "2323:59:7"
								},
								{
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "3478:99:7",
										"text": " @dev Returns true if `user` has approved `relayer` to act as a relayer for them."
									},
									"functionSelector": "fec90d72",
									"id": 872,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasApprovedRelayer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "3610:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3610:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "relayer",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "3624:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3624:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3609:31:7"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "3664:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 869,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3664:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3663:6:7"
									},
									"scope": 1336,
									"src": "3582:88:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "3676:178:7",
										"text": " @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\n Emits a `RelayerApprovalChanged` event."
									},
									"functionSelector": "fa6e671d",
									"id": 882,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setRelayerApproval",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "3896:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3896:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "relayer",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "3920:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3920:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "3945:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 878,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3945:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3886:78:7"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3973:0:7"
									},
									"scope": 1336,
									"src": "3859:115:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "3980:104:7",
										"text": " @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`."
									},
									"id": 891,
									"name": "RelayerApprovalChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"indexed": true,
												"mutability": "mutable",
												"name": "relayer",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4118:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4118:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4143:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4143:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4167:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 888,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4167:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4117:64:7"
									},
									"src": "4089:93:7"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "4890:78:7",
										"text": " @dev Returns `user`'s Internal Balance for a set of tokens."
									},
									"functionSelector": "0f5a6efa",
									"id": 904,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getInternalBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "5001:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5001:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "5015:22:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_memory_ptr",
													"typeString": "contract IERC20[]"
												},
												"typeName": {
													"baseType": {
														"id": 896,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 895,
															"name": "IERC20",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1742,
															"src": "5015:6:7"
														},
														"referencedDeclaration": 1742,
														"src": "5015:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1742",
															"typeString": "contract IERC20"
														}
													},
													"id": 897,
													"nodeType": "ArrayTypeName",
													"src": "5015:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_storage_ptr",
														"typeString": "contract IERC20[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5000:38:7"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "5062:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 900,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5062:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 901,
													"nodeType": "ArrayTypeName",
													"src": "5062:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5061:18:7"
									},
									"scope": 1336,
									"src": "4973:107:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "5086:416:7",
										"text": " @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\n and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\n it lets integrators reuse a user's Vault allowance.\n For each operation, if the caller is not `sender`, it must be an authorized relayer for them."
									},
									"functionSelector": "0e8e3e84",
									"id": 912,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "manageUserBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "ops",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "5534:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$925_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IVault.UserBalanceOp[]"
												},
												"typeName": {
													"baseType": {
														"id": 907,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 906,
															"name": "UserBalanceOp",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 925,
															"src": "5534:13:7"
														},
														"referencedDeclaration": 925,
														"src": "5534:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserBalanceOp_$925_storage_ptr",
															"typeString": "struct IVault.UserBalanceOp"
														}
													},
													"id": 908,
													"nodeType": "ArrayTypeName",
													"src": "5534:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$925_storage_$dyn_storage_ptr",
														"typeString": "struct IVault.UserBalanceOp[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5533:28:7"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5578:0:7"
									},
									"scope": 1336,
									"src": "5507:72:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IVault.UserBalanceOp",
									"id": 925,
									"members": [
										{
											"constant": false,
											"id": 915,
											"mutability": "mutable",
											"name": "kind",
											"nodeType": "VariableDeclaration",
											"scope": 925,
											"src": "5796:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_UserBalanceOpKind_$930",
												"typeString": "enum IVault.UserBalanceOpKind"
											},
											"typeName": {
												"id": 914,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 913,
													"name": "UserBalanceOpKind",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 930,
													"src": "5796:17:7"
												},
												"referencedDeclaration": 930,
												"src": "5796:17:7",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_UserBalanceOpKind_$930",
													"typeString": "enum IVault.UserBalanceOpKind"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 918,
											"mutability": "mutable",
											"name": "asset",
											"nodeType": "VariableDeclaration",
											"scope": 925,
											"src": "5828:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IAsset_$690",
												"typeString": "contract IAsset"
											},
											"typeName": {
												"id": 917,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 916,
													"name": "IAsset",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 690,
													"src": "5828:6:7"
												},
												"referencedDeclaration": 690,
												"src": "5828:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAsset_$690",
													"typeString": "contract IAsset"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 920,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 925,
											"src": "5850:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 919,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5850:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 922,
											"mutability": "mutable",
											"name": "sender",
											"nodeType": "VariableDeclaration",
											"scope": 925,
											"src": "5874:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 921,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5874:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 924,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 925,
											"src": "5898:25:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 923,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5898:15:7",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserBalanceOp",
									"nodeType": "StructDefinition",
									"scope": 1336,
									"src": "5765:165:7",
									"visibility": "public"
								},
								{
									"canonicalName": "IVault.UserBalanceOpKind",
									"id": 930,
									"members": [
										{
											"id": 926,
											"name": "DEPOSIT_INTERNAL",
											"nodeType": "EnumValue",
											"src": "7568:16:7"
										},
										{
											"id": 927,
											"name": "WITHDRAW_INTERNAL",
											"nodeType": "EnumValue",
											"src": "7586:17:7"
										},
										{
											"id": 928,
											"name": "TRANSFER_INTERNAL",
											"nodeType": "EnumValue",
											"src": "7605:17:7"
										},
										{
											"id": 929,
											"name": "TRANSFER_EXTERNAL",
											"nodeType": "EnumValue",
											"src": "7624:17:7"
										}
									],
									"name": "UserBalanceOpKind",
									"nodeType": "EnumDefinition",
									"src": "7543:100:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "7649:317:7",
										"text": " @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\n interacting with Pools using Internal Balance.\n Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\n address."
									},
									"id": 940,
									"name": "InternalBalanceChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "8000:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8000:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "8022:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1742",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 935,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 934,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1742,
														"src": "8022:6:7"
													},
													"referencedDeclaration": 1742,
													"src": "8022:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1742",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"indexed": false,
												"mutability": "mutable",
												"name": "delta",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "8044:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 937,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8044:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7999:58:7"
									},
									"src": "7971:87:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "8064:131:7",
										"text": " @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account."
									},
									"id": 952,
									"name": "ExternalBalanceTransfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "8230:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1742",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 943,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 942,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1742,
														"src": "8230:6:7"
													},
													"referencedDeclaration": 1742,
													"src": "8230:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1742",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "8252:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8252:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "8276:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8276:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "8295:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8295:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8229:81:7"
									},
									"src": "8200:111:7"
								},
								{
									"canonicalName": "IVault.PoolSpecialization",
									"id": 956,
									"members": [
										{
											"id": 953,
											"name": "GENERAL",
											"nodeType": "EnumValue",
											"src": "9417:7:7"
										},
										{
											"id": 954,
											"name": "MINIMAL_SWAP_INFO",
											"nodeType": "EnumValue",
											"src": "9426:17:7"
										},
										{
											"id": 955,
											"name": "TWO_TOKEN",
											"nodeType": "EnumValue",
											"src": "9445:9:7"
										}
									],
									"name": "PoolSpecialization",
									"nodeType": "EnumDefinition",
									"src": "9391:65:7"
								},
								{
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "9462:702:7",
										"text": " @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\n is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\n changed.\n The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\n depending on the chosen specialization setting. This contract is known as the Pool's contract.\n Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\n multiple Pools may share the same contract.\n Emits a `PoolRegistered` event."
									},
									"functionSelector": "09b2760f",
									"id": 965,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "specialization",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "10191:33:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolSpecialization_$956",
													"typeString": "enum IVault.PoolSpecialization"
												},
												"typeName": {
													"id": 959,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 958,
														"name": "PoolSpecialization",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 956,
														"src": "10191:18:7"
													},
													"referencedDeclaration": 956,
													"src": "10191:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PoolSpecialization_$956",
														"typeString": "enum IVault.PoolSpecialization"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10190:35:7"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "10244:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 962,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10244:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10243:9:7"
									},
									"scope": 1336,
									"src": "10169:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "10259:84:7",
										"text": " @dev Emitted when a Pool is registered by calling `registerPool`."
									},
									"id": 975,
									"name": "PoolRegistered",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "10369:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 967,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10369:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolAddress",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "10393:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10393:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"indexed": false,
												"mutability": "mutable",
												"name": "specialization",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "10422:33:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolSpecialization_$956",
													"typeString": "enum IVault.PoolSpecialization"
												},
												"typeName": {
													"id": 972,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 971,
														"name": "PoolSpecialization",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 956,
														"src": "10422:18:7"
													},
													"referencedDeclaration": 956,
													"src": "10422:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PoolSpecialization_$956",
														"typeString": "enum IVault.PoolSpecialization"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10368:88:7"
									},
									"src": "10348:109:7"
								},
								{
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "10463:85:7",
										"text": " @dev Returns a Pool's contract address and specialization setting."
									},
									"functionSelector": "f6c00927",
									"id": 986,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "poolId",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "10570:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 977,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10570:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10569:16:7"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "10609:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10609:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "10618:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolSpecialization_$956",
													"typeString": "enum IVault.PoolSpecialization"
												},
												"typeName": {
													"id": 983,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 982,
														"name": "PoolSpecialization",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 956,
														"src": "10618:18:7"
													},
													"referencedDeclaration": 956,
													"src": "10618:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PoolSpecialization_$956",
														"typeString": "enum IVault.PoolSpecialization"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10608:29:7"
									},
									"scope": 1336,
									"src": "10553:85:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "10644:1422:7",
										"text": " @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\n exit by receiving registered tokens, and can only swap registered tokens.\n Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\n of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\n ascending order.\n The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\n Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\n depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\n expected to be highly secured smart contracts with sound design principles, and the decision to register an\n Asset Manager should not be made lightly.\n Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\n Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\n different Asset Manager.\n Emits a `TokensRegistered` event."
									},
									"functionSelector": "66a9c7d2",
									"id": 999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "poolId",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "12104:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 988,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12104:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "12128:22:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_memory_ptr",
													"typeString": "contract IERC20[]"
												},
												"typeName": {
													"baseType": {
														"id": 991,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 990,
															"name": "IERC20",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1742,
															"src": "12128:6:7"
														},
														"referencedDeclaration": 1742,
														"src": "12128:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1742",
															"typeString": "contract IERC20"
														}
													},
													"id": 992,
													"nodeType": "ArrayTypeName",
													"src": "12128:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_storage_ptr",
														"typeString": "contract IERC20[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "assetManagers",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "12160:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 994,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12160:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 995,
													"nodeType": "ArrayTypeName",
													"src": "12160:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12094:102:7"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12205:0:7"
									},
									"scope": 1336,
									"src": "12071:135:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "12212:89:7",
										"text": " @dev Emitted when a Pool registers tokens by calling `registerTokens`."
									},
									"id": 1011,
									"name": "TokensRegistered",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "12329:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1001,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12329:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "12353:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_memory_ptr",
													"typeString": "contract IERC20[]"
												},
												"typeName": {
													"baseType": {
														"id": 1004,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1003,
															"name": "IERC20",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1742,
															"src": "12353:6:7"
														},
														"referencedDeclaration": 1742,
														"src": "12353:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1742",
															"typeString": "contract IERC20"
														}
													},
													"id": 1005,
													"nodeType": "ArrayTypeName",
													"src": "12353:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_storage_ptr",
														"typeString": "contract IERC20[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"indexed": false,
												"mutability": "mutable",
												"name": "assetManagers",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "12370:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1007,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12370:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1008,
													"nodeType": "ArrayTypeName",
													"src": "12370:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12328:66:7"
									},
									"src": "12306:89:7"
								},
								{
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "12401:567:7",
										"text": " @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\n balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\n must be deregistered in the same `deregisterTokens` call.\n A deregistered token can be re-registered later on, possibly with a different Asset Manager.\n Emits a `TokensDeregistered` event."
									},
									"functionSelector": "7d3aeb96",
									"id": 1021,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deregisterTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "poolId",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "12999:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1013,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12999:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "13015:22:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_memory_ptr",
													"typeString": "contract IERC20[]"
												},
												"typeName": {
													"baseType": {
														"id": 1016,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1015,
															"name": "IERC20",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1742,
															"src": "13015:6:7"
														},
														"referencedDeclaration": 1742,
														"src": "13015:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1742",
															"typeString": "contract IERC20"
														}
													},
													"id": 1017,
													"nodeType": "ArrayTypeName",
													"src": "13015:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_storage_ptr",
														"typeString": "contract IERC20[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12998:40:7"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13047:0:7"
									},
									"scope": 1336,
									"src": "12973:75:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "13054:93:7",
										"text": " @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`."
									},
									"id": 1030,
									"name": "TokensDeregistered",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "13177:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1023,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13177:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "13201:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_memory_ptr",
													"typeString": "contract IERC20[]"
												},
												"typeName": {
													"baseType": {
														"id": 1026,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1025,
															"name": "IERC20",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1742,
															"src": "13201:6:7"
														},
														"referencedDeclaration": 1742,
														"src": "13201:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1742",
															"typeString": "contract IERC20"
														}
													},
													"id": 1027,
													"nodeType": "ArrayTypeName",
													"src": "13201:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_storage_ptr",
														"typeString": "contract IERC20[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13176:41:7"
									},
									"src": "13152:66:7"
								},
								{
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "13224:1043:7",
										"text": " @dev Returns detailed information for a Pool's registered token.\n `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\n withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\n equals the sum of `cash` and `managed`.\n Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\n `managed` or `total` balance to be greater than 2^112 - 1.\n `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\n join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\n example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\n change for this purpose, and will update `lastChangeBlock`.\n `assetManager` is the Pool's token Asset Manager."
									},
									"functionSelector": "b05f8e48",
									"id": 1047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolTokenInfo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "poolId",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "14298:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1032,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14298:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "14314:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1742",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1035,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1034,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1742,
														"src": "14314:6:7"
													},
													"referencedDeclaration": 1742,
													"src": "14314:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1742",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14297:30:7"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "cash",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "14388:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14388:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "managed",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "14414:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14414:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "lastChangeBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "14443:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14443:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "assetManager",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "14480:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14480:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14374:136:7"
									},
									"scope": 1336,
									"src": "14272:239:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "14517:828:7",
										"text": " @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\n the tokens' `balances` changed.\n The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\n Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\n If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\n order as passed to `registerTokens`.\n Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\n the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\n instead."
									},
									"functionSelector": "f94d4668",
									"id": 1062,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "poolId",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "15373:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1049,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15373:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15372:16:7"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "15449:22:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_memory_ptr",
													"typeString": "contract IERC20[]"
												},
												"typeName": {
													"baseType": {
														"id": 1053,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1052,
															"name": "IERC20",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1742,
															"src": "15449:6:7"
														},
														"referencedDeclaration": 1742,
														"src": "15449:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1742",
															"typeString": "contract IERC20"
														}
													},
													"id": 1054,
													"nodeType": "ArrayTypeName",
													"src": "15449:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_storage_ptr",
														"typeString": "contract IERC20[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "balances",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "15485:25:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1056,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15485:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1057,
													"nodeType": "ArrayTypeName",
													"src": "15485:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "lastChangeBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "15524:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15524:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15435:122:7"
									},
									"scope": 1336,
									"src": "15350:208:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "15564:2304:7",
										"text": " @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\n trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\n Pool shares.\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\n to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\n these maximums.\n If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\n this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\n WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\n back to the caller (not the sender, which is important for relayers).\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\n sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\n `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\n If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\n be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\n withdrawn from Internal Balance: attempting to do so will trigger a revert.\n This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\n directly to the Pool's contract, as is `recipient`.\n Emits a `PoolBalanceChanged` event."
									},
									"functionSelector": "b95cac28",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "joinPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "poolId",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "17900:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17900:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "17924:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17924:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "17948:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17948:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "request",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "17975:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_JoinPoolRequest_$1087_memory_ptr",
													"typeString": "struct IVault.JoinPoolRequest"
												},
												"typeName": {
													"id": 1071,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1070,
														"name": "JoinPoolRequest",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1087,
														"src": "17975:15:7"
													},
													"referencedDeclaration": 1087,
													"src": "17975:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_JoinPoolRequest_$1087_storage_ptr",
														"typeString": "struct IVault.JoinPoolRequest"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17890:121:7"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18028:0:7"
									},
									"scope": 1336,
									"src": "17873:156:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IVault.JoinPoolRequest",
									"id": 1087,
									"members": [
										{
											"constant": false,
											"id": 1079,
											"mutability": "mutable",
											"name": "assets",
											"nodeType": "VariableDeclaration",
											"scope": 1087,
											"src": "18068:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_storage_ptr",
												"typeString": "contract IAsset[]"
											},
											"typeName": {
												"baseType": {
													"id": 1077,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1076,
														"name": "IAsset",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 690,
														"src": "18068:6:7"
													},
													"referencedDeclaration": 690,
													"src": "18068:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAsset_$690",
														"typeString": "contract IAsset"
													}
												},
												"id": 1078,
												"nodeType": "ArrayTypeName",
												"src": "18068:8:7",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_storage_ptr",
													"typeString": "contract IAsset[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1082,
											"mutability": "mutable",
											"name": "maxAmountsIn",
											"nodeType": "VariableDeclaration",
											"scope": 1087,
											"src": "18093:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18093:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1081,
												"nodeType": "ArrayTypeName",
												"src": "18093:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1084,
											"mutability": "mutable",
											"name": "userData",
											"nodeType": "VariableDeclaration",
											"scope": 1087,
											"src": "18125:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1083,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "18125:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1086,
											"mutability": "mutable",
											"name": "fromInternalBalance",
											"nodeType": "VariableDeclaration",
											"scope": 1087,
											"src": "18149:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1085,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "18149:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "JoinPoolRequest",
									"nodeType": "StructDefinition",
									"scope": 1336,
									"src": "18035:145:7",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "18186:2489:7",
										"text": " @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\n trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\n Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\n `getPoolTokenInfo`).\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\n token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\n it just enforces these minimums.\n If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\n enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\n of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\n be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\n final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\n If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\n an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\n do so will trigger a revert.\n `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\n `tokens` array. This array must match the Pool's registered tokens.\n This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\n passed directly to the Pool's contract.\n Emits a `PoolBalanceChanged` event."
									},
									"functionSelector": "8bdb3913",
									"id": 1100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exitPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "poolId",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "20707:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1089,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20707:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "20731:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20731:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "20755:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20755:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "request",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "20790:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExitPoolRequest_$1112_memory_ptr",
													"typeString": "struct IVault.ExitPoolRequest"
												},
												"typeName": {
													"id": 1096,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1095,
														"name": "ExitPoolRequest",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1112,
														"src": "20790:15:7"
													},
													"referencedDeclaration": 1112,
													"src": "20790:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExitPoolRequest_$1112_storage_ptr",
														"typeString": "struct IVault.ExitPoolRequest"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20697:129:7"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20835:0:7"
									},
									"scope": 1336,
									"src": "20680:156:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IVault.ExitPoolRequest",
									"id": 1112,
									"members": [
										{
											"constant": false,
											"id": 1104,
											"mutability": "mutable",
											"name": "assets",
											"nodeType": "VariableDeclaration",
											"scope": 1112,
											"src": "20875:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_storage_ptr",
												"typeString": "contract IAsset[]"
											},
											"typeName": {
												"baseType": {
													"id": 1102,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1101,
														"name": "IAsset",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 690,
														"src": "20875:6:7"
													},
													"referencedDeclaration": 690,
													"src": "20875:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAsset_$690",
														"typeString": "contract IAsset"
													}
												},
												"id": 1103,
												"nodeType": "ArrayTypeName",
												"src": "20875:8:7",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_storage_ptr",
													"typeString": "contract IAsset[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1107,
											"mutability": "mutable",
											"name": "minAmountsOut",
											"nodeType": "VariableDeclaration",
											"scope": 1112,
											"src": "20900:23:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20900:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1106,
												"nodeType": "ArrayTypeName",
												"src": "20900:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1109,
											"mutability": "mutable",
											"name": "userData",
											"nodeType": "VariableDeclaration",
											"scope": 1112,
											"src": "20933:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1108,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "20933:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1111,
											"mutability": "mutable",
											"name": "toInternalBalance",
											"nodeType": "VariableDeclaration",
											"scope": 1112,
											"src": "20957:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1110,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "20957:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExitPoolRequest",
									"nodeType": "StructDefinition",
									"scope": 1336,
									"src": "20842:144:7",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "20992:116:7",
										"text": " @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively."
									},
									"id": 1129,
									"name": "PoolBalanceChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "21147:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21147:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"indexed": true,
												"mutability": "mutable",
												"name": "liquidityProvider",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "21179:33:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21179:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "21222:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_memory_ptr",
													"typeString": "contract IERC20[]"
												},
												"typeName": {
													"baseType": {
														"id": 1119,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1118,
															"name": "IERC20",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1742,
															"src": "21222:6:7"
														},
														"referencedDeclaration": 1742,
														"src": "21222:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1742",
															"typeString": "contract IERC20"
														}
													},
													"id": 1120,
													"nodeType": "ArrayTypeName",
													"src": "21222:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_storage_ptr",
														"typeString": "contract IERC20[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"indexed": false,
												"mutability": "mutable",
												"name": "deltas",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "21247:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
													"typeString": "int256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1122,
														"name": "int256",
														"nodeType": "ElementaryTypeName",
														"src": "21247:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1123,
													"nodeType": "ArrayTypeName",
													"src": "21247:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
														"typeString": "int256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"indexed": false,
												"mutability": "mutable",
												"name": "protocolFeeAmounts",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "21272:28:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1125,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "21272:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1126,
													"nodeType": "ArrayTypeName",
													"src": "21272:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21137:169:7"
									},
									"src": "21113:194:7"
								},
								{
									"canonicalName": "IVault.PoolBalanceChangeKind",
									"id": 1132,
									"members": [
										{
											"id": 1130,
											"name": "JOIN",
											"nodeType": "EnumValue",
											"src": "21342:4:7"
										},
										{
											"id": 1131,
											"name": "EXIT",
											"nodeType": "EnumValue",
											"src": "21348:4:7"
										}
									],
									"name": "PoolBalanceChangeKind",
									"nodeType": "EnumDefinition",
									"src": "21313:41:7"
								},
								{
									"canonicalName": "IVault.SwapKind",
									"id": 1135,
									"members": [
										{
											"id": 1133,
											"name": "GIVEN_IN",
											"nodeType": "EnumValue",
											"src": "24955:8:7"
										},
										{
											"id": 1134,
											"name": "GIVEN_OUT",
											"nodeType": "EnumValue",
											"src": "24965:9:7"
										}
									],
									"name": "SwapKind",
									"nodeType": "EnumDefinition",
									"src": "24939:37:7"
								},
								{
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "24982:587:7",
										"text": " @dev Performs a swap with a single Pool.\n If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\n taken from the Pool, which must be greater than or equal to `limit`.\n If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\n sent to the Pool, which must be less than or equal to `limit`.\n Internal Balance usage and the recipient are determined by the `funds` struct.\n Emits a `Swap` event."
									},
									"functionSelector": "52bbbe29",
									"id": 1151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "singleSwap",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "25597:28:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SingleSwap_$1167_memory_ptr",
													"typeString": "struct IVault.SingleSwap"
												},
												"typeName": {
													"id": 1138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1137,
														"name": "SingleSwap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1167,
														"src": "25597:10:7"
													},
													"referencedDeclaration": 1167,
													"src": "25597:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SingleSwap_$1167_storage_ptr",
														"typeString": "struct IVault.SingleSwap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "funds",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "25635:27:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FundManagement_$1228_memory_ptr",
													"typeString": "struct IVault.FundManagement"
												},
												"typeName": {
													"id": 1141,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1140,
														"name": "FundManagement",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1228,
														"src": "25635:14:7"
													},
													"referencedDeclaration": 1228,
													"src": "25635:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FundManagement_$1228_storage_ptr",
														"typeString": "struct IVault.FundManagement"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "limit",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "25672:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25672:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "25695:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25695:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25587:130:7"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "25744:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25744:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25743:9:7"
									},
									"scope": 1336,
									"src": "25574:179:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IVault.SingleSwap",
									"id": 1167,
									"members": [
										{
											"constant": false,
											"id": 1153,
											"mutability": "mutable",
											"name": "poolId",
											"nodeType": "VariableDeclaration",
											"scope": 1167,
											"src": "26337:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1152,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "26337:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1156,
											"mutability": "mutable",
											"name": "kind",
											"nodeType": "VariableDeclaration",
											"scope": 1167,
											"src": "26361:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_SwapKind_$1135",
												"typeString": "enum IVault.SwapKind"
											},
											"typeName": {
												"id": 1155,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1154,
													"name": "SwapKind",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1135,
													"src": "26361:8:7"
												},
												"referencedDeclaration": 1135,
												"src": "26361:8:7",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_SwapKind_$1135",
													"typeString": "enum IVault.SwapKind"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1159,
											"mutability": "mutable",
											"name": "assetIn",
											"nodeType": "VariableDeclaration",
											"scope": 1167,
											"src": "26384:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IAsset_$690",
												"typeString": "contract IAsset"
											},
											"typeName": {
												"id": 1158,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1157,
													"name": "IAsset",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 690,
													"src": "26384:6:7"
												},
												"referencedDeclaration": 690,
												"src": "26384:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAsset_$690",
													"typeString": "contract IAsset"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1162,
											"mutability": "mutable",
											"name": "assetOut",
											"nodeType": "VariableDeclaration",
											"scope": 1167,
											"src": "26408:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IAsset_$690",
												"typeString": "contract IAsset"
											},
											"typeName": {
												"id": 1161,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1160,
													"name": "IAsset",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 690,
													"src": "26408:6:7"
												},
												"referencedDeclaration": 690,
												"src": "26408:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAsset_$690",
													"typeString": "contract IAsset"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1164,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 1167,
											"src": "26433:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1163,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "26433:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1166,
											"mutability": "mutable",
											"name": "userData",
											"nodeType": "VariableDeclaration",
											"scope": 1167,
											"src": "26457:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1165,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "26457:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SingleSwap",
									"nodeType": "StructDefinition",
									"scope": 1336,
									"src": "26309:169:7",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "26484:1980:7",
										"text": " @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\n the amount of tokens sent to or received from the Pool, depending on the `kind` value.\n Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n the same index in the `assets` array.\n Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\n Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\n `amountOut` depending on the swap kind.\n Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\n of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\n the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\n The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\n or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\n out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\n or unwrapped from WETH by the Vault.\n Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\n the minimum or maximum amount of each token the vault is allowed to transfer.\n `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\n equivalent `swap` call.\n Emits `Swap` events."
									},
									"functionSelector": "945bcec9",
									"id": 1193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchSwap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "kind",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "28497:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_SwapKind_$1135",
													"typeString": "enum IVault.SwapKind"
												},
												"typeName": {
													"id": 1170,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1169,
														"name": "SwapKind",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1135,
														"src": "28497:8:7"
													},
													"referencedDeclaration": 1135,
													"src": "28497:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SwapKind_$1135",
														"typeString": "enum IVault.SwapKind"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "swaps",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "28520:28:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IVault.BatchSwapStep[]"
												},
												"typeName": {
													"baseType": {
														"id": 1173,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1172,
															"name": "BatchSwapStep",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1204,
															"src": "28520:13:7"
														},
														"referencedDeclaration": 1204,
														"src": "28520:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BatchSwapStep_$1204_storage_ptr",
															"typeString": "struct IVault.BatchSwapStep"
														}
													},
													"id": 1174,
													"nodeType": "ArrayTypeName",
													"src": "28520:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_storage_$dyn_storage_ptr",
														"typeString": "struct IVault.BatchSwapStep[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "28558:22:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr",
													"typeString": "contract IAsset[]"
												},
												"typeName": {
													"baseType": {
														"id": 1177,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1176,
															"name": "IAsset",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 690,
															"src": "28558:6:7"
														},
														"referencedDeclaration": 690,
														"src": "28558:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAsset_$690",
															"typeString": "contract IAsset"
														}
													},
													"id": 1178,
													"nodeType": "ArrayTypeName",
													"src": "28558:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_storage_ptr",
														"typeString": "contract IAsset[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "funds",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "28590:27:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FundManagement_$1228_memory_ptr",
													"typeString": "struct IVault.FundManagement"
												},
												"typeName": {
													"id": 1181,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1180,
														"name": "FundManagement",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1228,
														"src": "28590:14:7"
													},
													"referencedDeclaration": 1228,
													"src": "28590:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FundManagement_$1228_storage_ptr",
														"typeString": "struct IVault.FundManagement"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "limits",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "28627:22:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
													"typeString": "int256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1183,
														"name": "int256",
														"nodeType": "ElementaryTypeName",
														"src": "28627:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1184,
													"nodeType": "ArrayTypeName",
													"src": "28627:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
														"typeString": "int256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "28659:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28659:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28487:194:7"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "28708:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
													"typeString": "int256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1189,
														"name": "int256",
														"nodeType": "ElementaryTypeName",
														"src": "28708:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1190,
													"nodeType": "ArrayTypeName",
													"src": "28708:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
														"typeString": "int256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28707:17:7"
									},
									"scope": 1336,
									"src": "28469:256:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IVault.BatchSwapStep",
									"id": 1204,
									"members": [
										{
											"constant": false,
											"id": 1195,
											"mutability": "mutable",
											"name": "poolId",
											"nodeType": "VariableDeclaration",
											"scope": 1204,
											"src": "29318:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1194,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "29318:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1197,
											"mutability": "mutable",
											"name": "assetInIndex",
											"nodeType": "VariableDeclaration",
											"scope": 1204,
											"src": "29342:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1196,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29342:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1199,
											"mutability": "mutable",
											"name": "assetOutIndex",
											"nodeType": "VariableDeclaration",
											"scope": 1204,
											"src": "29372:21:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1198,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29372:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1201,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 1204,
											"src": "29403:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1200,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29403:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1203,
											"mutability": "mutable",
											"name": "userData",
											"nodeType": "VariableDeclaration",
											"scope": 1204,
											"src": "29427:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1202,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "29427:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BatchSwapStep",
									"nodeType": "StructDefinition",
									"scope": 1336,
									"src": "29287:161:7",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "29454:92:7",
										"text": " @dev Emitted for each individual swap performed by `swap` or `batchSwap`."
									},
									"id": 1219,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "29571:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1206,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "29571:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenIn",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "29603:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1742",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1209,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1208,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1742,
														"src": "29603:6:7"
													},
													"referencedDeclaration": 1742,
													"src": "29603:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1742",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenOut",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "29635:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1742",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1212,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1211,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1742,
														"src": "29635:6:7"
													},
													"referencedDeclaration": 1742,
													"src": "29635:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1742",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "29668:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "29694:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29694:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29561:156:7"
									},
									"src": "29551:167:7"
								},
								{
									"canonicalName": "IVault.FundManagement",
									"id": 1228,
									"members": [
										{
											"constant": false,
											"id": 1221,
											"mutability": "mutable",
											"name": "sender",
											"nodeType": "VariableDeclaration",
											"scope": 1228,
											"src": "30681:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1220,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "30681:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1223,
											"mutability": "mutable",
											"name": "fromInternalBalance",
											"nodeType": "VariableDeclaration",
											"scope": 1228,
											"src": "30705:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1222,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "30705:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1225,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1228,
											"src": "30739:25:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 1224,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "30739:15:7",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1227,
											"mutability": "mutable",
											"name": "toInternalBalance",
											"nodeType": "VariableDeclaration",
											"scope": 1228,
											"src": "30774:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1226,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "30774:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FundManagement",
									"nodeType": "StructDefinition",
									"scope": 1336,
									"src": "30649:154:7",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "30809:1027:7",
										"text": " @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n receives are the same that an equivalent `batchSwap` call would receive.\n Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\n This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\n approve them for the Vault, or even know a user's address.\n Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\n eth_call instead of eth_sendTransaction."
									},
									"functionSelector": "f84d066e",
									"id": 1249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "queryBatchSwap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "kind",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "31874:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_SwapKind_$1135",
													"typeString": "enum IVault.SwapKind"
												},
												"typeName": {
													"id": 1231,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1230,
														"name": "SwapKind",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1135,
														"src": "31874:8:7"
													},
													"referencedDeclaration": 1135,
													"src": "31874:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SwapKind_$1135",
														"typeString": "enum IVault.SwapKind"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "swaps",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "31897:28:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IVault.BatchSwapStep[]"
												},
												"typeName": {
													"baseType": {
														"id": 1234,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1233,
															"name": "BatchSwapStep",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1204,
															"src": "31897:13:7"
														},
														"referencedDeclaration": 1204,
														"src": "31897:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BatchSwapStep_$1204_storage_ptr",
															"typeString": "struct IVault.BatchSwapStep"
														}
													},
													"id": 1235,
													"nodeType": "ArrayTypeName",
													"src": "31897:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_storage_$dyn_storage_ptr",
														"typeString": "struct IVault.BatchSwapStep[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "31935:22:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr",
													"typeString": "contract IAsset[]"
												},
												"typeName": {
													"baseType": {
														"id": 1238,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1237,
															"name": "IAsset",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 690,
															"src": "31935:6:7"
														},
														"referencedDeclaration": 690,
														"src": "31935:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAsset_$690",
															"typeString": "contract IAsset"
														}
													},
													"id": 1239,
													"nodeType": "ArrayTypeName",
													"src": "31935:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_storage_ptr",
														"typeString": "contract IAsset[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "funds",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "31967:27:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FundManagement_$1228_memory_ptr",
													"typeString": "struct IVault.FundManagement"
												},
												"typeName": {
													"id": 1242,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1241,
														"name": "FundManagement",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1228,
														"src": "31967:14:7"
													},
													"referencedDeclaration": 1228,
													"src": "31967:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FundManagement_$1228_storage_ptr",
														"typeString": "struct IVault.FundManagement"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31864:136:7"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "assetDeltas",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "32019:27:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
													"typeString": "int256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1245,
														"name": "int256",
														"nodeType": "ElementaryTypeName",
														"src": "32019:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1246,
													"nodeType": "ArrayTypeName",
													"src": "32019:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
														"typeString": "int256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32018:29:7"
									},
									"scope": 1336,
									"src": "31841:207:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "32074:604:7",
										"text": " @dev Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it,\n and then reverting unless the tokens plus a proportional protocol fee have been returned.\n The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount\n for each token contract. `tokens` must be sorted in ascending order.\n The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the\n `receiveFlashLoan` call.\n Emits `FlashLoan` events."
									},
									"functionSelector": "5c38449e",
									"id": 1265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoan",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "32711:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IFlashLoanRecipient_$725",
													"typeString": "contract IFlashLoanRecipient"
												},
												"typeName": {
													"id": 1252,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1251,
														"name": "IFlashLoanRecipient",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 725,
														"src": "32711:19:7"
													},
													"referencedDeclaration": 725,
													"src": "32711:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFlashLoanRecipient_$725",
														"typeString": "contract IFlashLoanRecipient"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "32750:22:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_memory_ptr",
													"typeString": "contract IERC20[]"
												},
												"typeName": {
													"baseType": {
														"id": 1255,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1254,
															"name": "IERC20",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1742,
															"src": "32750:6:7"
														},
														"referencedDeclaration": 1742,
														"src": "32750:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1742",
															"typeString": "contract IERC20"
														}
													},
													"id": 1256,
													"nodeType": "ArrayTypeName",
													"src": "32750:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$1742_$dyn_storage_ptr",
														"typeString": "contract IERC20[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "32782:24:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1258,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "32782:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1259,
													"nodeType": "ArrayTypeName",
													"src": "32782:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "userData",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "32816:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1261,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32816:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32701:142:7"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32852:0:7"
									},
									"scope": 1336,
									"src": "32683:170:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "32859:88:7",
										"text": " @dev Emitted for each individual flash loan performed by `flashLoan`."
									},
									"id": 1278,
									"name": "FlashLoan",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "32968:37:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IFlashLoanRecipient_$725",
													"typeString": "contract IFlashLoanRecipient"
												},
												"typeName": {
													"id": 1268,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1267,
														"name": "IFlashLoanRecipient",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 725,
														"src": "32968:19:7"
													},
													"referencedDeclaration": 725,
													"src": "32968:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFlashLoanRecipient_$725",
														"typeString": "contract IFlashLoanRecipient"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "33007:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1742",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1271,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1270,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1742,
														"src": "33007:6:7"
													},
													"referencedDeclaration": 1742,
													"src": "33007:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1742",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "33029:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33029:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "33045:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33045:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32967:96:7"
									},
									"src": "32952:112:7"
								},
								{
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "34060:434:7",
										"text": " @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\n Pool Balance management features batching, which means a single contract call can be used to perform multiple\n operations of different kinds, with different Pools and tokens, at once.\n For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."
									},
									"functionSelector": "e6c46092",
									"id": 1286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "managePoolBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "ops",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "34526:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PoolBalanceOp_$1297_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IVault.PoolBalanceOp[]"
												},
												"typeName": {
													"baseType": {
														"id": 1281,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1280,
															"name": "PoolBalanceOp",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1297,
															"src": "34526:13:7"
														},
														"referencedDeclaration": 1297,
														"src": "34526:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolBalanceOp_$1297_storage_ptr",
															"typeString": "struct IVault.PoolBalanceOp"
														}
													},
													"id": 1282,
													"nodeType": "ArrayTypeName",
													"src": "34526:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PoolBalanceOp_$1297_storage_$dyn_storage_ptr",
														"typeString": "struct IVault.PoolBalanceOp[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34525:28:7"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34562:0:7"
									},
									"scope": 1336,
									"src": "34499:64:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IVault.PoolBalanceOp",
									"id": 1297,
									"members": [
										{
											"constant": false,
											"id": 1289,
											"mutability": "mutable",
											"name": "kind",
											"nodeType": "VariableDeclaration",
											"scope": 1297,
											"src": "34600:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_PoolBalanceOpKind_$1301",
												"typeString": "enum IVault.PoolBalanceOpKind"
											},
											"typeName": {
												"id": 1288,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1287,
													"name": "PoolBalanceOpKind",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1301,
													"src": "34600:17:7"
												},
												"referencedDeclaration": 1301,
												"src": "34600:17:7",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolBalanceOpKind_$1301",
													"typeString": "enum IVault.PoolBalanceOpKind"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1291,
											"mutability": "mutable",
											"name": "poolId",
											"nodeType": "VariableDeclaration",
											"scope": 1297,
											"src": "34632:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1290,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "34632:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1294,
											"mutability": "mutable",
											"name": "token",
											"nodeType": "VariableDeclaration",
											"scope": 1297,
											"src": "34656:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1742",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 1293,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1292,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1742,
													"src": "34656:6:7"
												},
												"referencedDeclaration": 1742,
												"src": "34656:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1742",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1296,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 1297,
											"src": "34678:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1295,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "34678:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolBalanceOp",
									"nodeType": "StructDefinition",
									"scope": 1336,
									"src": "34569:130:7",
									"visibility": "public"
								},
								{
									"canonicalName": "IVault.PoolBalanceOpKind",
									"id": 1301,
									"members": [
										{
											"id": 1298,
											"name": "WITHDRAW",
											"nodeType": "EnumValue",
											"src": "35221:8:7"
										},
										{
											"id": 1299,
											"name": "DEPOSIT",
											"nodeType": "EnumValue",
											"src": "35231:7:7"
										},
										{
											"id": 1300,
											"name": "UPDATE",
											"nodeType": "EnumValue",
											"src": "35240:6:7"
										}
									],
									"name": "PoolBalanceOpKind",
									"nodeType": "EnumDefinition",
									"src": "35196:52:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "35254:109:7",
										"text": " @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`."
									},
									"id": 1315,
									"name": "PoolBalanceManaged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "35402:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35402:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"indexed": true,
												"mutability": "mutable",
												"name": "assetManager",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "35434:28:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35434:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "35472:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1742",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1308,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1307,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1742,
														"src": "35472:6:7"
													},
													"referencedDeclaration": 1742,
													"src": "35472:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1742",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"indexed": false,
												"mutability": "mutable",
												"name": "cashDelta",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "35502:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1310,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "35502:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"indexed": false,
												"mutability": "mutable",
												"name": "managedDelta",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "35528:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1312,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "35528:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35392:161:7"
									},
									"src": "35368:186:7"
								},
								{
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "36431:64:7",
										"text": " @dev Returns the current protocol fee module."
									},
									"functionSelector": "d2946c2b",
									"id": 1322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getProtocolFeesCollector",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36533:2:7"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "36559:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IProtocolFeesCollector_$793",
													"typeString": "contract IProtocolFeesCollector"
												},
												"typeName": {
													"id": 1319,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1318,
														"name": "IProtocolFeesCollector",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 793,
														"src": "36559:22:7"
													},
													"referencedDeclaration": 793,
													"src": "36559:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IProtocolFeesCollector_$793",
														"typeString": "contract IProtocolFeesCollector"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36558:24:7"
									},
									"scope": 1336,
									"src": "36500:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "36589:635:7",
										"text": " @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\n error in some part of the system.\n The Vault can only be paused during an initial time period, after which pausing is forever disabled.\n While the contract is paused, the following features are disabled:\n - depositing and transferring internal balance\n - transferring external balance (using the Vault's allowance)\n - swaps\n - joining Pools\n - Asset Manager interactions\n Internal Balance can still be withdrawn, and Pools exited."
									},
									"functionSelector": "16c38b3c",
									"id": 1328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPaused",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "paused",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "37248:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37248:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37247:13:7"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37269:0:7"
									},
									"scope": 1336,
									"src": "37229:41:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1329,
										"nodeType": "StructuredDocumentation",
										"src": "37276:58:7",
										"text": " @dev Returns the Vault's WETH instance."
									},
									"functionSelector": "ad5c4648",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37352:2:7"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "37378:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IWETH_$1350",
													"typeString": "contract IWETH"
												},
												"typeName": {
													"id": 1332,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1331,
														"name": "IWETH",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1350,
														"src": "37378:5:7"
													},
													"referencedDeclaration": 1350,
													"src": "37378:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWETH_$1350",
														"typeString": "contract IWETH"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37377:7:7"
									},
									"scope": 1336,
									"src": "37339:46:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1337,
							"src": "306:37138:7"
						}
					],
					"src": "34:37411:7"
				},
				"id": 7
			},
			"interface/IBalancerSwap/IWETH.sol": {
				"ast": {
					"absolutePath": "interface/IBalancerSwap/IWETH.sol",
					"exportedSymbols": {
						"IERC20": [
							1742
						],
						"IWETH": [
							1350
						]
					},
					"id": 1351,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:8"
						},
						{
							"absolutePath": "interface/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1339,
							"nodeType": "ImportDirective",
							"scope": 1351,
							"sourceUnit": 1743,
							"src": "59:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1340,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1742,
										"src": "104:6:8"
									},
									"id": 1341,
									"nodeType": "InheritanceSpecifier",
									"src": "104:6:8"
								}
							],
							"contractDependencies": [
								1742
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1350,
							"linearizedBaseContracts": [
								1350,
								1742
							],
							"name": "IWETH",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 1344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "133:2:8"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "152:0:8"
									},
									"scope": 1350,
									"src": "117:36:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 1349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "177:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "177:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "176:16:8"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "201:0:8"
									},
									"scope": 1350,
									"src": "159:43:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1351,
							"src": "85:119:8"
						}
					],
					"src": "35:170:8"
				},
				"id": 8
			},
			"interface/IBarterswapV2Router01.sol": {
				"ast": {
					"absolutePath": "interface/IBarterswapV2Router01.sol",
					"exportedSymbols": {
						"IBarterswapV2Router01": [
							1658
						]
					},
					"id": 1659,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1352,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1658,
							"linearizedBaseContracts": [
								1658
							],
							"name": "IBarterswapV2Router01",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:9"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "138:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "138:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:9:9"
									},
									"scope": 1658,
									"src": "96:51:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "165:2:9"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "191:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "190:9:9"
									},
									"scope": 1658,
									"src": "152:48:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "237:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "261:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "261:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "amountADesired",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "285:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "285:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "314:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "314:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "343:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "343:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "368:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "368:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "393:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "413:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "413:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "227:205:9"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "451:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "451:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "465:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "465:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "479:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "479:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "450:44:9"
									},
									"scope": 1658,
									"src": "206:289:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "534:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "557:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "557:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "590:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "590:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "619:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "619:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "646:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "666:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "666:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:161:9"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "712:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "712:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "730:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "730:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "746:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "746:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "711:50:9"
									},
									"scope": 1658,
									"src": "500:262:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "801:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "801:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "825:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "849:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "849:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "873:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "873:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "898:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "898:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "923:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "943:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "943:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:171:9"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "981:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "981:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "995:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "995:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "980:28:9"
									},
									"scope": 1658,
									"src": "767:242:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "1051:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "1074:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1074:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "1098:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1098:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "1127:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1127:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "1154:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "1174:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1174:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:152:9"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "1212:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1212:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "1230:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1230:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:34:9"
									},
									"scope": 1658,
									"src": "1014:232:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 1477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1295:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1295:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1319:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1343:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1343:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1367:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1367:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1392:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1392:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1417:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1437:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1437:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1460:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1463,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1460:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1477:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1465,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1477:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1486:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1467,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1497:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1469,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:227:9"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1531:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1531:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1545:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1545:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1530:28:9"
									},
									"scope": 1658,
									"src": "1251:308:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 1504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1611:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1634:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1634:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1658:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1658:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1687:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1687:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1714:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1714:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1734:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1734:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1757:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1757:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1774:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1492,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1774:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1783:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1494,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1783:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1794:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1496,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1601:208:9"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1828:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1828:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1846:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1846:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1827:34:9"
									},
									"scope": 1658,
									"src": "1564:298:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "1912:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1912:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "1935:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1507,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1935:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "1962:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1509,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1962:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1510,
													"nodeType": "ArrayTypeName",
													"src": "1962:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "1995:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "2015:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2015:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1902:132:9"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "2053:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1517,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2053:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1518,
													"nodeType": "ArrayTypeName",
													"src": "2053:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:23:9"
									},
									"scope": 1658,
									"src": "1869:207:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "2126:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2126:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "2150:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2150:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "2176:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1526,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2176:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1527,
													"nodeType": "ArrayTypeName",
													"src": "2176:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "2209:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2209:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "2229:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2229:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2116:132:9"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "2267:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1534,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2267:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1535,
													"nodeType": "ArrayTypeName",
													"src": "2267:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2266:23:9"
									},
									"scope": 1658,
									"src": "2083:207:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "2327:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2327:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "2346:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1541,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2346:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1542,
													"nodeType": "ArrayTypeName",
													"src": "2346:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "2371:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "2383:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2383:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:71:9"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "2448:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1549,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2448:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1550,
													"nodeType": "ArrayTypeName",
													"src": "2448:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:23:9"
									},
									"scope": 1658,
									"src": "2296:175:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 1570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "2507:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2507:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "2523:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2523:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "2541:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1558,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2541:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1559,
													"nodeType": "ArrayTypeName",
													"src": "2541:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "2566:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2566:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "2578:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2578:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2506:86:9"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "2627:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1566,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2627:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1567,
													"nodeType": "ArrayTypeName",
													"src": "2627:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2626:23:9"
									},
									"scope": 1658,
									"src": "2476:174:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1587,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "2686:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2686:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "2701:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2701:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "2720:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1575,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2720:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1576,
													"nodeType": "ArrayTypeName",
													"src": "2720:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "2745:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2745:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "2757:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2757:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2685:86:9"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "2806:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1583,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2806:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1584,
													"nodeType": "ArrayTypeName",
													"src": "2806:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2805:23:9"
									},
									"scope": 1658,
									"src": "2655:174:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 1602,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2865:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2865:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2881:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1590,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2881:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1591,
													"nodeType": "ArrayTypeName",
													"src": "2881:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2906:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2906:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2918:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2918:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2864:68:9"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2983:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1598,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2983:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1599,
													"nodeType": "ArrayTypeName",
													"src": "2983:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2982:23:9"
									},
									"scope": 1658,
									"src": "2834:172:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "3029:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1603,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3029:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "reserveA",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "3043:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3043:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "reserveB",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "3058:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3058:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3028:44:9"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "3096:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3096:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3095:14:9"
									},
									"scope": 1658,
									"src": "3014:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 1624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "3137:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3137:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "3152:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3152:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "3168:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3168:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3136:48:9"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "3208:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3208:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:16:9"
									},
									"scope": 1658,
									"src": "3115:109:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 1635,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "3250:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3250:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "3266:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3266:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "3282:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3282:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3249:49:9"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "3322:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3322:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3321:15:9"
									},
									"scope": 1658,
									"src": "3229:108:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3365:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3380:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1638,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3380:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1639,
													"nodeType": "ArrayTypeName",
													"src": "3380:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:40:9"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3428:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1642,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3428:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1643,
													"nodeType": "ArrayTypeName",
													"src": "3428:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:23:9"
									},
									"scope": 1658,
									"src": "3342:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "3478:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3478:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "3494:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1649,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3494:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1650,
													"nodeType": "ArrayTypeName",
													"src": "3494:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:41:9"
									},
									"returnParameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "3542:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1653,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3542:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1654,
													"nodeType": "ArrayTypeName",
													"src": "3542:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3541:23:9"
									},
									"scope": 1658,
									"src": "3456:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1659,
							"src": "58:3509:9"
						}
					],
					"src": "33:3535:9"
				},
				"id": 9
			},
			"interface/IERC20.sol": {
				"ast": {
					"absolutePath": "interface/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1742
						]
					},
					"id": 1743,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1660,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1742,
							"linearizedBaseContracts": [
								1742
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1668,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "97:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "97:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "120:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "120:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "145:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "145:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "96:60:10"
									},
									"src": "82:75:10"
								},
								{
									"anonymous": false,
									"id": 1676,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "177:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "177:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "199:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "219:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "219:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "176:54:10"
									},
									"src": "162:69:10"
								},
								{
									"functionSelector": "06fdde03",
									"id": 1681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "250:2:10"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "276:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "276:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:15:10"
									},
									"scope": 1742,
									"src": "237:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "311:2:10"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "337:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1683,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:15:10"
									},
									"scope": 1742,
									"src": "296:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1691,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "374:2:10"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "400:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1688,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "400:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:7:10"
									},
									"scope": 1742,
									"src": "357:50:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:2:10"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "458:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "458:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:6:10"
									},
									"scope": 1742,
									"src": "412:52:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "488:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "488:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "487:15:10"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "526:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "526:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:6:10"
									},
									"scope": 1742,
									"src": "469:63:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1712,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "556:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "571:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "555:32:10"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "611:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "611:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:6:10"
									},
									"scope": 1742,
									"src": "537:80:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "640:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "657:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "657:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:29:10"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "687:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1718,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:6:10"
									},
									"scope": 1742,
									"src": "623:70:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1730,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "716:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "728:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "715:24:10"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "758:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "758:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "757:6:10"
									},
									"scope": 1742,
									"src": "698:66:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "791:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "805:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "817:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "817:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:38:10"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "847:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "847:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "846:6:10"
									},
									"scope": 1742,
									"src": "769:84:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1743,
							"src": "59:796:10"
						}
					],
					"src": "33:823:10"
				},
				"id": 10
			},
			"interface/ISwap.sol": {
				"ast": {
					"absolutePath": "interface/ISwap.sol",
					"exportedSymbols": {
						"IAsset": [
							690
						],
						"IAuthorizer": [
							705
						],
						"IERC20": [
							1742
						],
						"IFlashLoanRecipient": [
							725
						],
						"IProtocolFeesCollector": [
							793
						],
						"ISignaturesValidator": [
							810
						],
						"ISwap": [
							1797
						],
						"ITemporarilyPausable": [
							828
						],
						"IVault": [
							1336
						],
						"IWETH": [
							1350
						]
					},
					"id": 1798,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1744,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"id": 1745,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "57:33:11"
						},
						{
							"absolutePath": "interface/IBalancerSwap/IAsset.sol",
							"file": "./IBalancerSwap/IAsset.sol",
							"id": 1746,
							"nodeType": "ImportDirective",
							"scope": 1798,
							"sourceUnit": 691,
							"src": "93:36:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IBalancerSwap/IVault.sol",
							"file": "./IBalancerSwap/IVault.sol",
							"id": 1747,
							"nodeType": "ImportDirective",
							"scope": 1798,
							"sourceUnit": 1337,
							"src": "130:36:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1797,
							"linearizedBaseContracts": [
								1797
							],
							"name": "ISwap",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b1a271d4",
									"id": 1764,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "filterSwap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "amountInArr",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "226:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "amountOutMinArr",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "247:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "247:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "pathArr",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "272:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "272:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "293:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "293:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "deadLine",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "304:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "304:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "inputAddre",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "321:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "outAddre",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "340:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "340:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "225:132:11"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "374:0:11"
									},
									"scope": 1797,
									"src": "206:169:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3502eea8",
									"id": 1774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "filterCurve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "419:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "inputAddre",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "430:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "_crvParams",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "449:27:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1769,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "449:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1770,
													"nodeType": "ArrayTypeName",
													"src": "449:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:59:11"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "486:0:11"
									},
									"scope": 1797,
									"src": "398:89:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1738b50e",
									"id": 1796,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "filterBalancer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "kind",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "537:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_SwapKind_$1135",
													"typeString": "enum IVault.SwapKind"
												},
												"typeName": {
													"id": 1776,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1775,
														"name": "IVault.SwapKind",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1135,
														"src": "537:15:11"
													},
													"referencedDeclaration": 1135,
													"src": "537:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SwapKind_$1135",
														"typeString": "enum IVault.SwapKind"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "swaps",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "558:35:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IVault.BatchSwapStep[]"
												},
												"typeName": {
													"baseType": {
														"id": 1779,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1778,
															"name": "IVault.BatchSwapStep",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1204,
															"src": "558:20:11"
														},
														"referencedDeclaration": 1204,
														"src": "558:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BatchSwapStep_$1204_storage_ptr",
															"typeString": "struct IVault.BatchSwapStep"
														}
													},
													"id": 1780,
													"nodeType": "ArrayTypeName",
													"src": "558:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1204_storage_$dyn_storage_ptr",
														"typeString": "struct IVault.BatchSwapStep[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "funds",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "594:34:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FundManagement_$1228_memory_ptr",
													"typeString": "struct IVault.FundManagement"
												},
												"typeName": {
													"id": 1783,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1782,
														"name": "IVault.FundManagement",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1228,
														"src": "594:21:11"
													},
													"referencedDeclaration": 1228,
													"src": "594:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FundManagement_$1228_storage_ptr",
														"typeString": "struct IVault.FundManagement"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "630:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_memory_ptr",
													"typeString": "contract IAsset[]"
												},
												"typeName": {
													"baseType": {
														"id": 1786,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1785,
															"name": "IAsset",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 690,
															"src": "630:6:11"
														},
														"referencedDeclaration": 690,
														"src": "630:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAsset_$690",
															"typeString": "contract IAsset"
														}
													},
													"id": 1787,
													"nodeType": "ArrayTypeName",
													"src": "630:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IAsset_$690_$dyn_storage_ptr",
														"typeString": "contract IAsset[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "limit",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "655:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
													"typeString": "int256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1789,
														"name": "int256",
														"nodeType": "ElementaryTypeName",
														"src": "655:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1790,
													"nodeType": "ArrayTypeName",
													"src": "655:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
														"typeString": "int256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "678:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "536:159:11"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "712:0:11"
									},
									"scope": 1797,
									"src": "513:200:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1798,
							"src": "168:547:11"
						}
					],
					"src": "33:683:11"
				},
				"id": 11
			},
			"interface/IWETH9.sol": {
				"ast": {
					"absolutePath": "interface/IWETH9.sol",
					"exportedSymbols": {
						"IERC20": [
							1742
						],
						"IWETH9": [
							1814
						]
					},
					"id": 1815,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1799,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:12"
						},
						{
							"absolutePath": "interface/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1800,
							"nodeType": "ImportDirective",
							"scope": 1815,
							"sourceUnit": 1743,
							"src": "59:22:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1802,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1742,
										"src": "133:6:12"
									},
									"id": 1803,
									"nodeType": "InheritanceSpecifier",
									"src": "133:6:12"
								}
							],
							"contractDependencies": [
								1742
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1801,
								"nodeType": "StructuredDocumentation",
								"src": "82:31:12",
								"text": "@title Interface for WETH9"
							},
							"fullyImplemented": false,
							"id": 1814,
							"linearizedBaseContracts": [
								1814,
								1742
							],
							"name": "IWETH9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1804,
										"nodeType": "StructuredDocumentation",
										"src": "146:46:12",
										"text": "@notice Deposit ether to get wrapped ether"
									},
									"functionSelector": "d0e30db0",
									"id": 1807,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "213:2:12"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:0:12"
									},
									"scope": 1814,
									"src": "197:36:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "239:47:12",
										"text": "@notice Withdraw wrapped ether to get ether"
									},
									"functionSelector": "2e1a7d4d",
									"id": 1813,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "309:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:9:12"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "326:0:12"
									},
									"scope": 1814,
									"src": "291:36:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1815,
							"src": "113:216:12"
						}
					],
					"src": "34:296:12"
				},
				"id": 12
			},
			"libs/SafeMath.sol": {
				"ast": {
					"absolutePath": "libs/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2009
						]
					},
					"id": 2010,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1816,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2009,
							"linearizedBaseContracts": [
								2009
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1841,
										"nodeType": "Block",
										"src": "379:109:13",
										"statements": [
											{
												"assignments": [
													1827
												],
												"declarations": [
													{
														"constant": false,
														"id": 1827,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1841,
														"src": "389:9:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1826,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "389:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1831,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1828,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1819,
														"src": "401:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1829,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "405:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "401:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "389:17:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1833,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1827,
																"src": "424:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1834,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1819,
																"src": "429:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "424:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "432:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1832,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "416:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "416:46:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1838,
												"nodeType": "ExpressionStatement",
												"src": "416:46:13"
											},
											{
												"expression": {
													"id": 1839,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1827,
													"src": "480:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1825,
												"id": 1840,
												"nodeType": "Return",
												"src": "473:8:13"
											}
										]
									},
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "83:224:13",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "325:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "336:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "336:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:22:13"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "370:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "370:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:9:13"
									},
									"scope": 2009,
									"src": "312:176:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1858,
										"nodeType": "Block",
										"src": "826:67:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1853,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "847:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1854,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "850:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "853:32:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1852,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1859,
															1887
														],
														"referencedDeclaration": 1887,
														"src": "843:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "843:43:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1851,
												"id": 1857,
												"nodeType": "Return",
												"src": "836:50:13"
											}
										]
									},
									"documentation": {
										"id": 1843,
										"nodeType": "StructuredDocumentation",
										"src": "494:260:13",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "772:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "783:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:22:13"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "817:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:9:13"
									},
									"scope": 2009,
									"src": "759:134:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1886,
										"nodeType": "Block",
										"src": "1279:92:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1872,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "1297:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1873,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "1302:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1297:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1875,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "1305:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1871,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1289:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1289:29:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1877,
												"nodeType": "ExpressionStatement",
												"src": "1289:29:13"
											},
											{
												"assignments": [
													1879
												],
												"declarations": [
													{
														"constant": false,
														"id": 1879,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1886,
														"src": "1328:9:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1878,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1328:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1883,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1880,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "1340:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1881,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "1344:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1340:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1328:17:13"
											},
											{
												"expression": {
													"id": 1884,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1879,
													"src": "1363:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1870,
												"id": 1885,
												"nodeType": "Return",
												"src": "1356:8:13"
											}
										]
									},
									"documentation": {
										"id": 1860,
										"nodeType": "StructuredDocumentation",
										"src": "899:280:13",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "1197:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "1208:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1208:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "1219:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1865,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1219:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1196:50:13"
									},
									"returnParameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "1270:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1269:9:13"
									},
									"scope": 2009,
									"src": "1184:187:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1921,
										"nodeType": "Block",
										"src": "1685:392:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1897,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1890,
														"src": "1917:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1922:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1917:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1903,
												"nodeType": "IfStatement",
												"src": "1913:45:13",
												"trueBody": {
													"id": 1902,
													"nodeType": "Block",
													"src": "1925:33:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1946:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1896,
															"id": 1901,
															"nodeType": "Return",
															"src": "1939:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													1905
												],
												"declarations": [
													{
														"constant": false,
														"id": 1905,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1921,
														"src": "1968:9:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1904,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1968:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1909,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1906,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1890,
														"src": "1980:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1907,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1892,
														"src": "1984:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1980:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1968:17:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1911,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1905,
																	"src": "2003:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1912,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1890,
																	"src": "2007:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2003:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1914,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1892,
																"src": "2012:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2003:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2015:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1995:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1995:56:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1918,
												"nodeType": "ExpressionStatement",
												"src": "1995:56:13"
											},
											{
												"expression": {
													"id": 1919,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1905,
													"src": "2069:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1896,
												"id": 1920,
												"nodeType": "Return",
												"src": "2062:8:13"
											}
										]
									},
									"documentation": {
										"id": 1888,
										"nodeType": "StructuredDocumentation",
										"src": "1377:236:13",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "1631:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1631:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "1642:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1642:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1630:22:13"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "1676:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1675:9:13"
									},
									"scope": 2009,
									"src": "1618:459:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1938,
										"nodeType": "Block",
										"src": "2606:63:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1933,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "2627:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1934,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1927,
															"src": "2630:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2633:28:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1932,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1939,
															1967
														],
														"referencedDeclaration": 1967,
														"src": "2623:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2623:39:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1931,
												"id": 1937,
												"nodeType": "Return",
												"src": "2616:46:13"
											}
										]
									},
									"documentation": {
										"id": 1923,
										"nodeType": "StructuredDocumentation",
										"src": "2083:451:13",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "2552:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2552:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "2563:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2563:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2551:22:13"
									},
									"returnParameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "2597:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2597:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2596:9:13"
									},
									"scope": 2009,
									"src": "2539:130:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1966,
										"nodeType": "Block",
										"src": "3246:177:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1952,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1944,
																"src": "3264:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3268:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3264:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1955,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1946,
															"src": "3271:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1951,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3256:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "3256:28:13"
											},
											{
												"assignments": [
													1959
												],
												"declarations": [
													{
														"constant": false,
														"id": 1959,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1966,
														"src": "3294:9:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1958,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3294:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1963,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1960,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1942,
														"src": "3306:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1961,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "3310:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3306:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3294:17:13"
											},
											{
												"expression": {
													"id": 1964,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1959,
													"src": "3415:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1950,
												"id": 1965,
												"nodeType": "Return",
												"src": "3408:8:13"
											}
										]
									},
									"documentation": {
										"id": 1940,
										"nodeType": "StructuredDocumentation",
										"src": "2675:471:13",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "3164:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3164:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "3175:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "3186:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1945,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3186:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3163:50:13"
									},
									"returnParameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "3237:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:9:13"
									},
									"scope": 2009,
									"src": "3151:272:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1983,
										"nodeType": "Block",
										"src": "3941:61:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1978,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1970,
															"src": "3962:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1979,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1972,
															"src": "3965:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3968:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1977,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1984,
															2008
														],
														"referencedDeclaration": 2008,
														"src": "3958:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3958:37:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1976,
												"id": 1982,
												"nodeType": "Return",
												"src": "3951:44:13"
											}
										]
									},
									"documentation": {
										"id": 1968,
										"nodeType": "StructuredDocumentation",
										"src": "3429:440:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "3887:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3887:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "3898:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3886:22:13"
									},
									"returnParameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "3932:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3932:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3931:9:13"
									},
									"scope": 2009,
									"src": "3874:128:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "4568:68:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1997,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "4586:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4591:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4586:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2000,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "4594:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1996,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4578:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4578:29:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2002,
												"nodeType": "ExpressionStatement",
												"src": "4578:29:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2003,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1987,
														"src": "4624:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2004,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1989,
														"src": "4628:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4624:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1995,
												"id": 2006,
												"nodeType": "Return",
												"src": "4617:12:13"
											}
										]
									},
									"documentation": {
										"id": 1985,
										"nodeType": "StructuredDocumentation",
										"src": "4008:460:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "4486:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "4497:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "4508:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1990,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4508:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4485:50:13"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "4559:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4559:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4558:9:13"
									},
									"scope": 2009,
									"src": "4473:163:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2010,
							"src": "60:4578:13"
						}
					],
					"src": "33:4605:13"
				},
				"id": 13
			},
			"libs/TransferHelper.sol": {
				"ast": {
					"absolutePath": "libs/TransferHelper.sol",
					"exportedSymbols": {
						"SafeMath": [
							2009
						],
						"TransferHelper": [
							2277
						]
					},
					"id": 2278,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2011,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:14"
						},
						{
							"absolutePath": "libs/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 2012,
							"nodeType": "ImportDirective",
							"scope": 2278,
							"sourceUnit": 2010,
							"src": "60:24:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2277,
							"linearizedBaseContracts": [
								2277
							],
							"name": "TransferHelper",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2015,
									"libraryName": {
										"id": 2013,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2009,
										"src": "122:8:14"
									},
									"nodeType": "UsingForDirective",
									"src": "116:27:14",
									"typeName": {
										"id": 2014,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "135:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 2057,
										"nodeType": "Block",
										"src": "251:332:14",
										"statements": [
											{
												"assignments": [
													2025,
													2027
												],
												"declarations": [
													{
														"constant": false,
														"id": 2025,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 2057,
														"src": "327:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2024,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "327:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2027,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 2057,
														"src": "341:17:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2026,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "341:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2037,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 2032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "396:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 2033,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2019,
																	"src": "408:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2034,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2021,
																	"src": "412:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2030,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "373:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "373:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "373:45:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2028,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "362:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "362:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "362:57:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "326:93:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2039,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2025,
																"src": "450:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2040,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2027,
																					"src": "462:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2041,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "462:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2042,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "477:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "462:16:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2046,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2027,
																					"src": "493:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 2048,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "500:4:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 2047,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "500:4:14",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 2049,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "499:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 2044,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "482:3:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2045,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "482:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "482:24:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "462:44:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2052,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "461:46:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "450:57:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a73616665417070726f76653a20617070726f7665206661696c6564",
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "521:45:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123",
																"typeString": "literal_string \"TransferHelper::safeApprove: approve failed\""
															},
															"value": "TransferHelper::safeApprove: approve failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123",
																"typeString": "literal_string \"TransferHelper::safeApprove: approve failed\""
															}
														],
														"id": 2038,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "429:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "429:147:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "429:147:14"
											}
										]
									},
									"id": 2058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "179:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "202:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "222:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "169:72:14"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:0:14"
									},
									"scope": 2277,
									"src": "149:434:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2100,
										"nodeType": "Block",
										"src": "692:335:14",
										"statements": [
											{
												"assignments": [
													2068,
													2070
												],
												"declarations": [
													{
														"constant": false,
														"id": 2068,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 2100,
														"src": "769:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2067,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "769:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2070,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 2100,
														"src": "783:17:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2069,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "783:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2080,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 2075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "838:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 2076,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "850:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2077,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2064,
																	"src": "854:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2073,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "815:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "815:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "815:45:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2071,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2060,
															"src": "804:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "804:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "804:57:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "768:93:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2082,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "892:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2083,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2070,
																					"src": "904:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2084,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "904:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "919:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "904:16:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2089,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2070,
																					"src": "935:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 2091,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "942:4:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 2090,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "942:4:14",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 2092,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "941:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 2087,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "924:3:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2088,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "924:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "924:24:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "904:44:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2095,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "903:46:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "892:57:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564",
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "963:47:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															},
															"value": "TransferHelper::safeTransfer: transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															}
														],
														"id": 2081,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "871:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "871:149:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2099,
												"nodeType": "ExpressionStatement",
												"src": "871:149:14"
											}
										]
									},
									"id": 2101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "620:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "643:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "663:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:72:14"
									},
									"returnParameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "692:0:14"
									},
									"scope": 2277,
									"src": "589:438:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2146,
										"nodeType": "Block",
										"src": "1162:357:14",
										"statements": [
											{
												"assignments": [
													2113,
													2115
												],
												"declarations": [
													{
														"constant": false,
														"id": 2113,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 2146,
														"src": "1251:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2112,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1251:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2115,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 2146,
														"src": "1265:17:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2114,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1265:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2126,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 2120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1320:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 2121,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2105,
																	"src": "1332:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2122,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2107,
																	"src": "1338:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2123,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "1342:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2118,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1297:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1297:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1297:51:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2116,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2103,
															"src": "1286:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1286:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1286:63:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1250:99:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2128,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2113,
																"src": "1380:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2129,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2115,
																					"src": "1392:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1392:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2131,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1407:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1392:16:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2135,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2115,
																					"src": "1423:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 2137,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1430:4:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 2136,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1430:4:14",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 2138,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1429:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 2133,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1412:3:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1412:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1412:24:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1392:44:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2141,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1391:46:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1380:57:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564",
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1451:51:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															},
															"value": "TransferHelper::transferFrom: transferFrom failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															}
														],
														"id": 2127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1359:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1359:153:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2145,
												"nodeType": "ExpressionStatement",
												"src": "1359:153:14"
											}
										]
									},
									"id": 2147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1068:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1091:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1113:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1133:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1058:94:14"
									},
									"returnParameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1162:0:14"
									},
									"scope": 2277,
									"src": "1033:486:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2171,
										"nodeType": "Block",
										"src": "1590:153:14",
										"statements": [
											{
												"assignments": [
													2155,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2155,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 2171,
														"src": "1601:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2154,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1601:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2165,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1651:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1641:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 2160,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1645:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1641:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2156,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2149,
																"src": "1619:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1619:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2158,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2151,
																"src": "1634:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1619:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1619:35:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1600:54:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2167,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2155,
															"src": "1672:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564",
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1681:54:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															},
															"value": "TransferHelper::safeTransferETH: ETH transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															}
														],
														"id": 2166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1664:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1664:72:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2170,
												"nodeType": "ExpressionStatement",
												"src": "1664:72:14"
											}
										]
									},
									"id": 2172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "1554:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1554:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "1566:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1553:27:14"
									},
									"returnParameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1590:0:14"
									},
									"scope": 2277,
									"src": "1529:214:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2275,
										"nodeType": "Block",
										"src": "1871:656:14",
										"statements": [
											{
												"assignments": [
													2186,
													2188
												],
												"declarations": [
													{
														"constant": false,
														"id": 2186,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 2275,
														"src": "1890:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2185,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1890:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2188,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 2275,
														"src": "1904:17:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2187,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1904:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2198,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "726f79616c7479496e666f2875696e743235362c75696e7432353629",
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:30:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2a55205a9d4720a297dfcf892a8ff23e6f95ca084ce993231bd653f83741ac42",
																		"typeString": "literal_string \"royaltyInfo(uint256,uint256)\""
																	},
																	"value": "royaltyInfo(uint256,uint256)"
																},
																{
																	"id": 2194,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2176,
																	"src": "2003:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2195,
																	"name": "_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2178,
																	"src": "2011:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_2a55205a9d4720a297dfcf892a8ff23e6f95ca084ce993231bd653f83741ac42",
																		"typeString": "literal_string \"royaltyInfo(uint256,uint256)\""
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2191,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1948:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "1948:23:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1948:70:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2189,
															"name": "nftaddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "1926:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "1926:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1926:93:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1889:130:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2199,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2186,
														"src": "2038:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2200,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2188,
																"src": "2049:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2049:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "3634",
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2064:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"src": "2049:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2038:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2267,
												"nodeType": "IfStatement",
												"src": "2035:433:14",
												"trueBody": {
													"id": 2266,
													"nodeType": "Block",
													"src": "2067:401:14",
													"statements": [
														{
															"assignments": [
																2206,
																2208
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2206,
																	"mutability": "mutable",
																	"name": "addr1",
																	"nodeType": "VariableDeclaration",
																	"scope": 2266,
																	"src": "2091:13:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2205,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2091:7:14",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2208,
																	"mutability": "mutable",
																	"name": "value1",
																	"nodeType": "VariableDeclaration",
																	"scope": 2266,
																	"src": "2105:14:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2207,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2105:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2218,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2211,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2188,
																		"src": "2132:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 2213,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2139:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2212,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2139:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			{
																				"id": 2215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2147:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2214,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2147:7:14",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 2216,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2138:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
																			"typeString": "tuple(type(address),type(uint256))"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
																			"typeString": "tuple(type(address),type(uint256))"
																		}
																	],
																	"expression": {
																		"id": 2209,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "2121:3:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 2210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "2121:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2121:35:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$",
																	"typeString": "tuple(address payable,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2090:66:14"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2219,
																			"name": "addr1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2206,
																			"src": "2171:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2222,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2188:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2180:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2220,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2180:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2180:10:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "2171:19:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2225,
																			"name": "value1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2208,
																			"src": "2194:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2203:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2194:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2171:33:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2229,
																		"name": "value1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2208,
																		"src": "2208:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "313030",
																				"id": 2235,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2237:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"hexValue": "3530",
																						"id": 2232,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2229:2:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_50_by_1",
																							"typeString": "int_const 50"
																						},
																						"value": "50"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_50_by_1",
																							"typeString": "int_const 50"
																						}
																					],
																					"expression": {
																						"id": 2230,
																						"name": "_value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2178,
																						"src": "2218:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2231,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1922,
																					"src": "2218:10:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2233,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2218:14:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1939,
																			"src": "2218:18:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2218:23:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2208:33:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2171:70:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2244,
																		"name": "value1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2208,
																		"src": "2319:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "313030",
																				"id": 2250,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2347:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"hexValue": "3530",
																						"id": 2247,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2339:2:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_50_by_1",
																							"typeString": "int_const 50"
																						},
																						"value": "50"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_50_by_1",
																							"typeString": "int_const 50"
																						}
																					],
																					"expression": {
																						"id": 2245,
																						"name": "_value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2178,
																						"src": "2328:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2246,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1922,
																					"src": "2328:10:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2248,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2328:14:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1939,
																			"src": "2328:18:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2328:23:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2319:32:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 2264,
																"nodeType": "IfStatement",
																"src": "2316:133:14",
																"trueBody": {
																	"id": 2263,
																	"nodeType": "Block",
																	"src": "2352:97:14",
																	"statements": [
																		{
																			"expression": {
																				"components": [
																					{
																						"id": 2253,
																						"name": "addr1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2206,
																						"src": "2391:5:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"arguments": [
																							{
																								"hexValue": "313030",
																								"id": 2259,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "2416:3:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								},
																								"value": "100"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "3530",
																										"id": 2256,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2408:2:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_50_by_1",
																											"typeString": "int_const 50"
																										},
																										"value": "50"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_50_by_1",
																											"typeString": "int_const 50"
																										}
																									],
																									"expression": {
																										"id": 2254,
																										"name": "_value",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2178,
																										"src": "2397:6:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 2255,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1922,
																									"src": "2397:10:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 2257,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2397:14:14",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2258,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "div",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1939,
																							"src": "2397:18:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2260,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2397:23:14",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2261,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2390:31:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																					"typeString": "tuple(address,uint256)"
																				}
																			},
																			"functionReturnParameters": 2184,
																			"id": 2262,
																			"nodeType": "Return",
																			"src": "2383:38:14"
																		}
																	]
																}
															},
															"id": 2265,
															"nodeType": "IfStatement",
															"src": "2168:281:14",
															"trueBody": {
																"id": 2243,
																"nodeType": "Block",
																"src": "2243:68:14",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"id": 2239,
																					"name": "addr1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2206,
																					"src": "2285:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2240,
																					"name": "value1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2208,
																					"src": "2291:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2241,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2283:15:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																				"typeString": "tuple(address,uint256)"
																			}
																		},
																		"functionReturnParameters": 2184,
																		"id": 2242,
																		"nodeType": "Return",
																		"src": "2277:21:14"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2498:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2490:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2268,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2490:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2490:10:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2501:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"id": 2273,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2489:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
														"typeString": "tuple(address,int_const 0)"
													}
												},
												"functionReturnParameters": 2184,
												"id": 2274,
												"nodeType": "Return",
												"src": "2483:20:14"
											}
										]
									},
									"functionSelector": "f938761c",
									"id": 2276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "HelpRoyalties",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "nftaddress",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "1781:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "1801:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1801:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "1817:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1817:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:52:14"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "1855:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1855:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "1863:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1863:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1854:17:14"
									},
									"scope": 2277,
									"src": "1758:769:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2278,
							"src": "87:2447:14"
						}
					],
					"src": "35:2500:14"
				},
				"id": 14
			}
		}
	}
}
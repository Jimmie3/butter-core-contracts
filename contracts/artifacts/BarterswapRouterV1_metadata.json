{
	"compiler": {
		"version": "0.8.0+commit.c7dfd78e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_feeToAdmin",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					}
				],
				"name": "ethToWeth",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "feeTo",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "feeToAdmin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "fees",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "amountInArr",
						"type": "uint256[]"
					}
				],
				"name": "getAmountInAll",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_routerArr",
						"type": "address"
					}
				],
				"name": "getWeth",
				"outputs": [
					{
						"internalType": "address",
						"name": "WETH",
						"type": "address"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256[]",
								"name": "amountInArr",
								"type": "uint256[]"
							},
							{
								"internalType": "uint256[]",
								"name": "amountOutMinArr",
								"type": "uint256[]"
							},
							{
								"internalType": "bytes[]",
								"name": "pathArr",
								"type": "bytes[]"
							},
							{
								"internalType": "address payable",
								"name": "to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "deadLine",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "inputAddre",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "outAddre",
								"type": "address"
							},
							{
								"internalType": "uint256[]",
								"name": "routerIndex",
								"type": "uint256[]"
							},
							{
								"internalType": "uint256[]",
								"name": "crvParams",
								"type": "uint256[]"
							},
							{
								"components": [
									{
										"internalType": "bytes32",
										"name": "poolId",
										"type": "bytes32"
									},
									{
										"internalType": "uint256",
										"name": "assetInIndex",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "assetOutIndex",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "amount",
										"type": "uint256"
									},
									{
										"internalType": "bytes",
										"name": "userData",
										"type": "bytes"
									}
								],
								"internalType": "struct IVault.BatchSwapStep[]",
								"name": "batchSwapSteps",
								"type": "tuple[]"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "sender",
										"type": "address"
									},
									{
										"internalType": "bool",
										"name": "fromInternalBalance",
										"type": "bool"
									},
									{
										"internalType": "address payable",
										"name": "recipient",
										"type": "address"
									},
									{
										"internalType": "bool",
										"name": "toInternalBalance",
										"type": "bool"
									}
								],
								"internalType": "struct IVault.FundManagement",
								"name": "fundManaGements",
								"type": "tuple"
							},
							{
								"internalType": "int256[]",
								"name": "limits",
								"type": "int256[]"
							},
							{
								"internalType": "contract IAsset[]",
								"name": "assets",
								"type": "address[]"
							},
							{
								"internalType": "enum IVault.SwapKind",
								"name": "_kind",
								"type": "uint8"
							}
						],
						"internalType": "struct BarterswapRouterV1.AccessParams",
						"name": "params",
						"type": "tuple"
					}
				],
				"name": "multiSwap",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "routerAddreAll",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_feeTo",
						"type": "address"
					}
				],
				"name": "setFeeTo",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_feetoAdmin",
						"type": "address"
					}
				],
				"name": "setFeeToSetter",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_fees",
						"type": "uint256"
					}
				],
				"name": "setFees",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_routeraddre",
						"type": "address"
					}
				],
				"name": "setRouterAddreAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"BarterswapRouter.sol": "BarterswapRouterV1"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"BarterswapRouter.sol": {
			"keccak256": "0xd87db761130d9124bef404060a43b4effbb696e81cc0183c9c4ac74eefd9c39f",
			"license": "MIT",
			"urls": [
				"bzz-raw://e3f39833855a50c0c60a61c657b9cb036f44e5da08a306671e8ff6416434342b",
				"dweb:/ipfs/QmTyf8MPhYUToQMeDEZyHLq8GGEpCJHkWzavjMQrLLjxad"
			]
		},
		"interface/IBalancerSwap/IAsset.sol": {
			"keccak256": "0xf9b97c4e6ad7d344013a3071282f213038924e9c3b6ac6f17196a40941fd64d1",
			"license": "MIT",
			"urls": [
				"bzz-raw://b06f4cccbe42b2f974fe2571f2267414bbfb491c0b2d94017f5f832b18c7f956",
				"dweb:/ipfs/QmZKi6Hd3nnhS3Rtd5Umz4eSVZ3kufyFARRuyeaeeaAbHT"
			]
		},
		"interface/IBalancerSwap/IAuthorizer.sol": {
			"keccak256": "0xe9cf877950117afb454027ea900a563bd6b643bf4425b19dcc1e5954a267fe51",
			"license": "MIT",
			"urls": [
				"bzz-raw://99a8246517f1eafabec673ef93d0863aaccf0aa3b6fdb096d88e8f531e241f58",
				"dweb:/ipfs/QmNi32iE95ocFG8pjLNWbgQdqATPjJH8enSA2hFSP2HJ9h"
			]
		},
		"interface/IBalancerSwap/IFlashLoanRecipient.sol": {
			"keccak256": "0xb6e7d4649590d068d010a9ed4e06388c11a224708357371e89374f9199d5dfdf",
			"license": "MIT",
			"urls": [
				"bzz-raw://d1c14e57b54eb3089611debfd069c6efd798647c7b0057b37d6df9f9d35e0be3",
				"dweb:/ipfs/QmaaCtfeKBisvW4T6GrwsxpocK6ruUyyJTUFAjZRjvLuFQ"
			]
		},
		"interface/IBalancerSwap/IProtocolFeesCollector.sol": {
			"keccak256": "0x62f4f3cca283df89f13c476bb5991938e0683949ebee0ee6336b8d8d7f84320e",
			"license": "MIT",
			"urls": [
				"bzz-raw://081cc19ea0b102d54426442bb0840d5a981a301b5441298dee07f198c61f1cd5",
				"dweb:/ipfs/QmRZ5JprGS9nGmX7hWpAfWguiPC8ohjj5hCtCcHSLCKY4X"
			]
		},
		"interface/IBalancerSwap/ISignaturesValidator.sol": {
			"keccak256": "0x4ab58b8091a33a19a893227764df867cd88a995a9dcb25949d7678897767d734",
			"license": "MIT",
			"urls": [
				"bzz-raw://5c09782570400bbb4fb2ac88595e260029dcbdc0aff8bb22cf32ed3b57fb31e5",
				"dweb:/ipfs/QmbtyGBEc6TpyQupBnKK77AdeZuW93T8r9Ti2CR7xphcR4"
			]
		},
		"interface/IBalancerSwap/ITemporarilyPausable.sol": {
			"keccak256": "0xa98e85df4eda1a5ad27df1b40b2b09ded7359a9802856b3c80cf6f80db194d10",
			"license": "MIT",
			"urls": [
				"bzz-raw://883bbe9f194e440fa25904d231937d881f1c148935bb1078fd4f402bdc2ac56c",
				"dweb:/ipfs/QmZTdcv2PdBPJv4vvtTNRV4UfEZ22f9TCpNfX7PjV9qXWA"
			]
		},
		"interface/IBalancerSwap/IVault.sol": {
			"keccak256": "0xe0d5b33db297fba76bcc6d5693aeb91b719936007947976e35a317fb5f0eb882",
			"license": "MIT",
			"urls": [
				"bzz-raw://a364d9973454264984567cd8f967f7535e0bf49999e7bdb0f69c2bd3146e873a",
				"dweb:/ipfs/Qmdb7ARgPNTrS2LwXaNvTNJDabgMnNxC37jmba6BkUqBpZ"
			]
		},
		"interface/IBalancerSwap/IWETH.sol": {
			"keccak256": "0x0ab6cce9eb4524e1696a264f8248c070888249eeddb2069b54b97a9b51d9dced",
			"license": "MIT",
			"urls": [
				"bzz-raw://f4eb664a3f3293da94fef29be643ce24489b8400ed3abb4f8cb9bbdb820f7963",
				"dweb:/ipfs/QmWYSvpdamh599WboKCLdmPTnrpVCZiiKy5z2dJbNCkJwf"
			]
		},
		"interface/IBarterswapV2Router01.sol": {
			"keccak256": "0x891e6625090bc8343409a946d29eb82be0a323d2d8233066ee60d53ac7fbdab4",
			"license": "MIT",
			"urls": [
				"bzz-raw://1e6b224ba9f1157692d1cf28606abb6c63bda0e5f56726165615a45f24d35b90",
				"dweb:/ipfs/QmTox7NatzKkrAVtnxCcoUpqGp6uvvtj7WwSRJaTz5MyxZ"
			]
		},
		"interface/IERC20.sol": {
			"keccak256": "0x03ccb68ee528c8622d5724957a73d3e44bad34b72bd2c60eba1cd34f64648a44",
			"license": "MIT",
			"urls": [
				"bzz-raw://7547429308e6183385c591133716e070fa171218d4c83069d3861546c9bf245a",
				"dweb:/ipfs/QmTuSMH6F7b3iz3fooHu4fA8xW3GpaV3u7XQszcQGxkX3f"
			]
		},
		"interface/ISwap.sol": {
			"keccak256": "0x262c1adbd8e45f82687a76fd51b6075fdd1113f9e40552549c3f42dd78c8de57",
			"license": "MIT",
			"urls": [
				"bzz-raw://a0e9240c74716ac827bc44c6e925b70fc1688f28758224af38e66e6dcbf11b88",
				"dweb:/ipfs/QmPMHtJAnuvbXS8wT98P5cN4TNUMBadFJEyCFU9gBoXGyU"
			]
		},
		"interface/IWETH9.sol": {
			"keccak256": "0x1770d90fecc676a948b02cd4391a58a57c8b9e441fedbaee96270ac537998392",
			"license": "MIT",
			"urls": [
				"bzz-raw://ee337144705d3a966aeb618acdd3c3553251c65285b38fb97128d40d85f788c3",
				"dweb:/ipfs/QmXi1BDhKk2SEDrbDNH7LDpjfcNxhHfQ9g2NFwUGS7Jfsw"
			]
		},
		"libs/SafeMath.sol": {
			"keccak256": "0x857f2ba1d26da4919d4390ddd984a96e76730ee198550e3522f667297a084dda",
			"license": "MIT",
			"urls": [
				"bzz-raw://a1143a136d8b711d81feda93ac644fa9658c07de29ba69adcfae8b1213c56f0e",
				"dweb:/ipfs/QmbMNeiLRc3vwTWzseUMCxKEE7ARrNvN1CNKPu2EcV9sNG"
			]
		},
		"libs/TransferHelper.sol": {
			"keccak256": "0xcd705d1b09a0d682d73dd0d9ba5a386401d2814cf275f793c9f961e5395b7947",
			"license": "MIT",
			"urls": [
				"bzz-raw://aabce1a5dc16787e6203fb3f0acfca05fd9a3351706a95718094a677ba73dca0",
				"dweb:/ipfs/QmYDEaqULCmGNUDdBJ2Ax6Jg5a777iV4B6Ka2urjzWNu2C"
			]
		}
	},
	"version": 1
}